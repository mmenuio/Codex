{
  "version": 3,
  "sources": ["../../grpc-web-client-gen/DepartmentServiceClientPb.ts"],
  "sourcesContent": ["/**\n * @fileoverview gRPC-Web generated client stub for department\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.5.0\n// \tprotoc              v3.19.1\n// source: department.proto\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\nimport * as grpcWeb from 'grpc-web';\n\nimport * as department_pb from './department_pb'; // proto import: \"department.proto\"\n\n\nexport class DepartmentRoutesClient {\n  client_: grpcWeb.AbstractClientBase;\n  hostname_: string;\n  credentials_: null | { [index: string]: string; };\n  options_: null | { [index: string]: any; };\n\n  constructor (hostname: string,\n               credentials?: null | { [index: string]: string; },\n               options?: null | { [index: string]: any; }) {\n    if (!options) options = {};\n    if (!credentials) credentials = {};\n    options['format'] = 'text';\n\n    this.client_ = new grpcWeb.GrpcWebClientBase(options);\n    this.hostname_ = hostname.replace(/\\/+$/, '');\n    this.credentials_ = credentials;\n    this.options_ = options;\n  }\n\n  methodDescriptorcreateOrUpdateDepartment = new grpcWeb.MethodDescriptor(\n    '/department.DepartmentRoutes/createOrUpdateDepartment',\n    grpcWeb.MethodType.UNARY,\n    department_pb.CreateOrUpdateDepartmentRequest,\n    department_pb.CreateOrUpdateDepartmentResponse,\n    (request: department_pb.CreateOrUpdateDepartmentRequest) => {\n      return request.serializeBinary();\n    },\n    department_pb.CreateOrUpdateDepartmentResponse.deserializeBinary\n  );\n\n  createOrUpdateDepartment(\n    request: department_pb.CreateOrUpdateDepartmentRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<department_pb.CreateOrUpdateDepartmentResponse>;\n\n  createOrUpdateDepartment(\n    request: department_pb.CreateOrUpdateDepartmentRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: department_pb.CreateOrUpdateDepartmentResponse) => void): grpcWeb.ClientReadableStream<department_pb.CreateOrUpdateDepartmentResponse>;\n\n  createOrUpdateDepartment(\n    request: department_pb.CreateOrUpdateDepartmentRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: department_pb.CreateOrUpdateDepartmentResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/department.DepartmentRoutes/createOrUpdateDepartment',\n        request,\n        metadata || {},\n        this.methodDescriptorcreateOrUpdateDepartment,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/department.DepartmentRoutes/createOrUpdateDepartment',\n    request,\n    metadata || {},\n    this.methodDescriptorcreateOrUpdateDepartment);\n  }\n\n  methodDescriptorgetAllDepartments = new grpcWeb.MethodDescriptor(\n    '/department.DepartmentRoutes/getAllDepartments',\n    grpcWeb.MethodType.UNARY,\n    department_pb.GetAllDepartmentRequest,\n    department_pb.GetAllDepartmentResponse,\n    (request: department_pb.GetAllDepartmentRequest) => {\n      return request.serializeBinary();\n    },\n    department_pb.GetAllDepartmentResponse.deserializeBinary\n  );\n\n  getAllDepartments(\n    request: department_pb.GetAllDepartmentRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<department_pb.GetAllDepartmentResponse>;\n\n  getAllDepartments(\n    request: department_pb.GetAllDepartmentRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: department_pb.GetAllDepartmentResponse) => void): grpcWeb.ClientReadableStream<department_pb.GetAllDepartmentResponse>;\n\n  getAllDepartments(\n    request: department_pb.GetAllDepartmentRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: department_pb.GetAllDepartmentResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/department.DepartmentRoutes/getAllDepartments',\n        request,\n        metadata || {},\n        this.methodDescriptorgetAllDepartments,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/department.DepartmentRoutes/getAllDepartments',\n    request,\n    metadata || {},\n    this.methodDescriptorgetAllDepartments);\n  }\n\n  methodDescriptorgetDepartmentByDepartmentId = new grpcWeb.MethodDescriptor(\n    '/department.DepartmentRoutes/getDepartmentByDepartmentId',\n    grpcWeb.MethodType.UNARY,\n    department_pb.GetDepartmentByDepartmentIdRequest,\n    department_pb.GetDepartmentByDepartmentIdResponse,\n    (request: department_pb.GetDepartmentByDepartmentIdRequest) => {\n      return request.serializeBinary();\n    },\n    department_pb.GetDepartmentByDepartmentIdResponse.deserializeBinary\n  );\n\n  getDepartmentByDepartmentId(\n    request: department_pb.GetDepartmentByDepartmentIdRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<department_pb.GetDepartmentByDepartmentIdResponse>;\n\n  getDepartmentByDepartmentId(\n    request: department_pb.GetDepartmentByDepartmentIdRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: department_pb.GetDepartmentByDepartmentIdResponse) => void): grpcWeb.ClientReadableStream<department_pb.GetDepartmentByDepartmentIdResponse>;\n\n  getDepartmentByDepartmentId(\n    request: department_pb.GetDepartmentByDepartmentIdRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: department_pb.GetDepartmentByDepartmentIdResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/department.DepartmentRoutes/getDepartmentByDepartmentId',\n        request,\n        metadata || {},\n        this.methodDescriptorgetDepartmentByDepartmentId,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/department.DepartmentRoutes/getDepartmentByDepartmentId',\n    request,\n    metadata || {},\n    this.methodDescriptorgetDepartmentByDepartmentId);\n  }\n\n}\n\n"],
  "mappings": ";;;;;;;;;;;;;AAiBA,cAAyB;AAEzB,oBAA+B;AAGxB,IAAM,yBAAN,MAA6B;AAAA,EAMlC,YAAa,UACA,aACA,SAA4C;AAPzD;AACA;AACA;AACA;AAeA,oEAA2C,IAAY;AAAA,MACrD;AAAA,MACQ,mBAAW;AAAA,MACL;AAAA,MACA;AAAA,MACd,CAAC,YAA2D;AAC1D,eAAO,QAAQ,gBAAgB;AAAA,MACjC;AAAA,MACc,+CAAiC;AAAA,IACjD;AAkCA,6DAAoC,IAAY;AAAA,MAC9C;AAAA,MACQ,mBAAW;AAAA,MACL;AAAA,MACA;AAAA,MACd,CAAC,YAAmD;AAClD,eAAO,QAAQ,gBAAgB;AAAA,MACjC;AAAA,MACc,uCAAyB;AAAA,IACzC;AAkCA,uEAA8C,IAAY;AAAA,MACxD;AAAA,MACQ,mBAAW;AAAA,MACL;AAAA,MACA;AAAA,MACd,CAAC,YAA8D;AAC7D,eAAO,QAAQ,gBAAgB;AAAA,MACjC;AAAA,MACc,kDAAoC;AAAA,IACpD;AAzGE,QAAI,CAAC,QAAS,WAAU,CAAC;AACzB,QAAI,CAAC,YAAa,eAAc,CAAC;AACjC,YAAQ,QAAQ,IAAI;AAEpB,SAAK,UAAU,IAAY,0BAAkB,OAAO;AACpD,SAAK,YAAY,SAAS,QAAQ,QAAQ,EAAE;AAC5C,SAAK,eAAe;AACpB,SAAK,WAAW;AAAA,EAClB;AAAA,EAuBA,yBACE,SACA,UACA,UAC8E;AAC9E,QAAI,aAAa,QAAW;AAC1B,aAAO,KAAK,QAAQ;AAAA,QAClB,KAAK,YACH;AAAA,QACF;AAAA,QACA,YAAY,CAAC;AAAA,QACb,KAAK;AAAA,QACL;AAAA,MAAQ;AAAA,IACZ;AACA,WAAO,KAAK,QAAQ;AAAA,MACpB,KAAK,YACH;AAAA,MACF;AAAA,MACA,YAAY,CAAC;AAAA,MACb,KAAK;AAAA,IAAwC;AAAA,EAC/C;AAAA,EAuBA,kBACE,SACA,UACA,UACsE;AACtE,QAAI,aAAa,QAAW;AAC1B,aAAO,KAAK,QAAQ;AAAA,QAClB,KAAK,YACH;AAAA,QACF;AAAA,QACA,YAAY,CAAC;AAAA,QACb,KAAK;AAAA,QACL;AAAA,MAAQ;AAAA,IACZ;AACA,WAAO,KAAK,QAAQ;AAAA,MACpB,KAAK,YACH;AAAA,MACF;AAAA,MACA,YAAY,CAAC;AAAA,MACb,KAAK;AAAA,IAAiC;AAAA,EACxC;AAAA,EAuBA,4BACE,SACA,UACA,UACiF;AACjF,QAAI,aAAa,QAAW;AAC1B,aAAO,KAAK,QAAQ;AAAA,QAClB,KAAK,YACH;AAAA,QACF;AAAA,QACA,YAAY,CAAC;AAAA,QACb,KAAK;AAAA,QACL;AAAA,MAAQ;AAAA,IACZ;AACA,WAAO,KAAK,QAAQ;AAAA,MACpB,KAAK,YACH;AAAA,MACF;AAAA,MACA,YAAY,CAAC;AAAA,MACb,KAAK;AAAA,IAA2C;AAAA,EAClD;AAEF;",
  "names": []
}
