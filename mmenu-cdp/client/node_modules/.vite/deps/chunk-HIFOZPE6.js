import {
  require_google_protobuf
} from "./chunk-RB4XWN7V.js";
import {
  __commonJS
} from "./chunk-EWTE5DHJ.js";

// node_modules/grpc-web-client-gen/auth_pb.js
var require_auth_pb = __commonJS({
  "node_modules/grpc-web-client-gen/auth_pb.js"(exports) {
    var jspb = require_google_protobuf();
    var goog = jspb;
    var global = (function() {
      if (this) {
        return this;
      }
      if (typeof window !== "undefined") {
        return window;
      }
      if (typeof global !== "undefined") {
        return global;
      }
      if (typeof self !== "undefined") {
        return self;
      }
      return Function("return this")();
    }).call(null);
    goog.exportSymbol("proto.auth.AccessToken", null, global);
    goog.exportSymbol("proto.auth.ChangePasswordRequest", null, global);
    goog.exportSymbol("proto.auth.ChangePasswordResponse", null, global);
    goog.exportSymbol("proto.auth.LoginRequest", null, global);
    goog.exportSymbol("proto.auth.LoginResponse", null, global);
    goog.exportSymbol("proto.auth.LoginWithTokenRequest", null, global);
    goog.exportSymbol("proto.auth.LogoutRequest", null, global);
    goog.exportSymbol("proto.auth.LogoutResponse", null, global);
    goog.exportSymbol("proto.auth.RegisterRequest", null, global);
    goog.exportSymbol("proto.auth.RegisterResponse", null, global);
    goog.exportSymbol("proto.auth.User", null, global);
    proto.auth.User = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.auth.User, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.auth.User.displayName = "proto.auth.User";
    }
    proto.auth.AccessToken = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.auth.AccessToken, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.auth.AccessToken.displayName = "proto.auth.AccessToken";
    }
    proto.auth.RegisterRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.auth.RegisterRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.auth.RegisterRequest.displayName = "proto.auth.RegisterRequest";
    }
    proto.auth.RegisterResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.auth.RegisterResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.auth.RegisterResponse.displayName = "proto.auth.RegisterResponse";
    }
    proto.auth.LoginRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.auth.LoginRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.auth.LoginRequest.displayName = "proto.auth.LoginRequest";
    }
    proto.auth.LoginResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.auth.LoginResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.auth.LoginResponse.displayName = "proto.auth.LoginResponse";
    }
    proto.auth.ChangePasswordRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.auth.ChangePasswordRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.auth.ChangePasswordRequest.displayName = "proto.auth.ChangePasswordRequest";
    }
    proto.auth.ChangePasswordResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.auth.ChangePasswordResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.auth.ChangePasswordResponse.displayName = "proto.auth.ChangePasswordResponse";
    }
    proto.auth.LogoutRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.auth.LogoutRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.auth.LogoutRequest.displayName = "proto.auth.LogoutRequest";
    }
    proto.auth.LogoutResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.auth.LogoutResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.auth.LogoutResponse.displayName = "proto.auth.LogoutResponse";
    }
    proto.auth.LoginWithTokenRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.auth.LoginWithTokenRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.auth.LoginWithTokenRequest.displayName = "proto.auth.LoginWithTokenRequest";
    }
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.auth.User.prototype.toObject = function(opt_includeInstance) {
        return proto.auth.User.toObject(opt_includeInstance, this);
      };
      proto.auth.User.toObject = function(includeInstance, msg) {
        var f, obj = {
          userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
          username: jspb.Message.getFieldWithDefault(msg, 2, ""),
          brandId: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.auth.User.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.auth.User();
      return proto.auth.User.deserializeBinaryFromReader(msg, reader);
    };
    proto.auth.User.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setUserId(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setUsername(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setBrandId(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.auth.User.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.auth.User.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.auth.User.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getUserId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getUsername();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getBrandId();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
    };
    proto.auth.User.prototype.getUserId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.auth.User.prototype.setUserId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.auth.User.prototype.getUsername = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.auth.User.prototype.setUsername = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.auth.User.prototype.getBrandId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.auth.User.prototype.setBrandId = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.auth.AccessToken.prototype.toObject = function(opt_includeInstance) {
        return proto.auth.AccessToken.toObject(opt_includeInstance, this);
      };
      proto.auth.AccessToken.toObject = function(includeInstance, msg) {
        var f, obj = {
          token: jspb.Message.getFieldWithDefault(msg, 1, ""),
          expireTime: jspb.Message.getFieldWithDefault(msg, 2, 0)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.auth.AccessToken.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.auth.AccessToken();
      return proto.auth.AccessToken.deserializeBinaryFromReader(msg, reader);
    };
    proto.auth.AccessToken.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setToken(value);
            break;
          case 2:
            var value = (
              /** @type {number} */
              reader.readInt64()
            );
            msg.setExpireTime(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.auth.AccessToken.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.auth.AccessToken.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.auth.AccessToken.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getToken();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getExpireTime();
      if (f !== 0) {
        writer.writeInt64(
          2,
          f
        );
      }
    };
    proto.auth.AccessToken.prototype.getToken = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.auth.AccessToken.prototype.setToken = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.auth.AccessToken.prototype.getExpireTime = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 2, 0)
      );
    };
    proto.auth.AccessToken.prototype.setExpireTime = function(value) {
      return jspb.Message.setProto3IntField(this, 2, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.auth.RegisterRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.auth.RegisterRequest.toObject(opt_includeInstance, this);
      };
      proto.auth.RegisterRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          username: jspb.Message.getFieldWithDefault(msg, 1, ""),
          phone: jspb.Message.getFieldWithDefault(msg, 2, ""),
          password: jspb.Message.getFieldWithDefault(msg, 3, ""),
          roleId: jspb.Message.getFieldWithDefault(msg, 4, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.auth.RegisterRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.auth.RegisterRequest();
      return proto.auth.RegisterRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.auth.RegisterRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setUsername(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setPhone(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setPassword(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setRoleId(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.auth.RegisterRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.auth.RegisterRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.auth.RegisterRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getUsername();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getPhone();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getPassword();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getRoleId();
      if (f.length > 0) {
        writer.writeString(
          4,
          f
        );
      }
    };
    proto.auth.RegisterRequest.prototype.getUsername = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.auth.RegisterRequest.prototype.setUsername = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.auth.RegisterRequest.prototype.getPhone = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.auth.RegisterRequest.prototype.setPhone = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.auth.RegisterRequest.prototype.getPassword = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.auth.RegisterRequest.prototype.setPassword = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.auth.RegisterRequest.prototype.getRoleId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 4, "")
      );
    };
    proto.auth.RegisterRequest.prototype.setRoleId = function(value) {
      return jspb.Message.setProto3StringField(this, 4, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.auth.RegisterResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.auth.RegisterResponse.toObject(opt_includeInstance, this);
      };
      proto.auth.RegisterResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.auth.RegisterResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.auth.RegisterResponse();
      return proto.auth.RegisterResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.auth.RegisterResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.auth.RegisterResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.auth.RegisterResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.auth.RegisterResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
    };
    proto.auth.RegisterResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.auth.RegisterResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.auth.RegisterResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.auth.RegisterResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.auth.LoginRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.auth.LoginRequest.toObject(opt_includeInstance, this);
      };
      proto.auth.LoginRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          phone: jspb.Message.getFieldWithDefault(msg, 1, ""),
          password: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.auth.LoginRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.auth.LoginRequest();
      return proto.auth.LoginRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.auth.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setPhone(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setPassword(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.auth.LoginRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.auth.LoginRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.auth.LoginRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getPhone();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getPassword();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
    };
    proto.auth.LoginRequest.prototype.getPhone = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.auth.LoginRequest.prototype.setPhone = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.auth.LoginRequest.prototype.getPassword = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.auth.LoginRequest.prototype.setPassword = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.auth.LoginResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.auth.LoginResponse.toObject(opt_includeInstance, this);
      };
      proto.auth.LoginResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, ""),
          user: (f = msg.getUser()) && proto.auth.User.toObject(includeInstance, f),
          accessToken: (f = msg.getAccessToken()) && proto.auth.AccessToken.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.auth.LoginResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.auth.LoginResponse();
      return proto.auth.LoginResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.auth.LoginResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          case 3:
            var value = new proto.auth.User();
            reader.readMessage(value, proto.auth.User.deserializeBinaryFromReader);
            msg.setUser(value);
            break;
          case 4:
            var value = new proto.auth.AccessToken();
            reader.readMessage(value, proto.auth.AccessToken.deserializeBinaryFromReader);
            msg.setAccessToken(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.auth.LoginResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.auth.LoginResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.auth.LoginResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getUser();
      if (f != null) {
        writer.writeMessage(
          3,
          f,
          proto.auth.User.serializeBinaryToWriter
        );
      }
      f = message.getAccessToken();
      if (f != null) {
        writer.writeMessage(
          4,
          f,
          proto.auth.AccessToken.serializeBinaryToWriter
        );
      }
    };
    proto.auth.LoginResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.auth.LoginResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.auth.LoginResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.auth.LoginResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.auth.LoginResponse.prototype.getUser = function() {
      return (
        /** @type{?proto.auth.User} */
        jspb.Message.getWrapperField(this, proto.auth.User, 3)
      );
    };
    proto.auth.LoginResponse.prototype.setUser = function(value) {
      return jspb.Message.setWrapperField(this, 3, value);
    };
    proto.auth.LoginResponse.prototype.clearUser = function() {
      return this.setUser(void 0);
    };
    proto.auth.LoginResponse.prototype.hasUser = function() {
      return jspb.Message.getField(this, 3) != null;
    };
    proto.auth.LoginResponse.prototype.getAccessToken = function() {
      return (
        /** @type{?proto.auth.AccessToken} */
        jspb.Message.getWrapperField(this, proto.auth.AccessToken, 4)
      );
    };
    proto.auth.LoginResponse.prototype.setAccessToken = function(value) {
      return jspb.Message.setWrapperField(this, 4, value);
    };
    proto.auth.LoginResponse.prototype.clearAccessToken = function() {
      return this.setAccessToken(void 0);
    };
    proto.auth.LoginResponse.prototype.hasAccessToken = function() {
      return jspb.Message.getField(this, 4) != null;
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.auth.ChangePasswordRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.auth.ChangePasswordRequest.toObject(opt_includeInstance, this);
      };
      proto.auth.ChangePasswordRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          oldPassword: jspb.Message.getFieldWithDefault(msg, 1, ""),
          newPassword: jspb.Message.getFieldWithDefault(msg, 2, ""),
          confirmPassword: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.auth.ChangePasswordRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.auth.ChangePasswordRequest();
      return proto.auth.ChangePasswordRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.auth.ChangePasswordRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setOldPassword(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setNewPassword(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setConfirmPassword(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.auth.ChangePasswordRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.auth.ChangePasswordRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.auth.ChangePasswordRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getOldPassword();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getNewPassword();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getConfirmPassword();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
    };
    proto.auth.ChangePasswordRequest.prototype.getOldPassword = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.auth.ChangePasswordRequest.prototype.setOldPassword = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.auth.ChangePasswordRequest.prototype.getNewPassword = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.auth.ChangePasswordRequest.prototype.setNewPassword = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.auth.ChangePasswordRequest.prototype.getConfirmPassword = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.auth.ChangePasswordRequest.prototype.setConfirmPassword = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.auth.ChangePasswordResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.auth.ChangePasswordResponse.toObject(opt_includeInstance, this);
      };
      proto.auth.ChangePasswordResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.auth.ChangePasswordResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.auth.ChangePasswordResponse();
      return proto.auth.ChangePasswordResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.auth.ChangePasswordResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.auth.ChangePasswordResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.auth.ChangePasswordResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.auth.ChangePasswordResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
    };
    proto.auth.ChangePasswordResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.auth.ChangePasswordResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.auth.ChangePasswordResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.auth.ChangePasswordResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.auth.LogoutRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.auth.LogoutRequest.toObject(opt_includeInstance, this);
      };
      proto.auth.LogoutRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          cdpUserId: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.auth.LogoutRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.auth.LogoutRequest();
      return proto.auth.LogoutRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.auth.LogoutRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setCdpUserId(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.auth.LogoutRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.auth.LogoutRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.auth.LogoutRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCdpUserId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
    };
    proto.auth.LogoutRequest.prototype.getCdpUserId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.auth.LogoutRequest.prototype.setCdpUserId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.auth.LogoutResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.auth.LogoutResponse.toObject(opt_includeInstance, this);
      };
      proto.auth.LogoutResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.auth.LogoutResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.auth.LogoutResponse();
      return proto.auth.LogoutResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.auth.LogoutResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.auth.LogoutResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.auth.LogoutResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.auth.LogoutResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
    };
    proto.auth.LogoutResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.auth.LogoutResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.auth.LogoutResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.auth.LogoutResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.auth.LoginWithTokenRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.auth.LoginWithTokenRequest.toObject(opt_includeInstance, this);
      };
      proto.auth.LoginWithTokenRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          token: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.auth.LoginWithTokenRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.auth.LoginWithTokenRequest();
      return proto.auth.LoginWithTokenRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.auth.LoginWithTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setToken(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.auth.LoginWithTokenRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.auth.LoginWithTokenRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.auth.LoginWithTokenRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getToken();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
    };
    proto.auth.LoginWithTokenRequest.prototype.getToken = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.auth.LoginWithTokenRequest.prototype.setToken = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    goog.object.extend(exports, proto.auth);
  }
});

export {
  require_auth_pb
};
//# sourceMappingURL=chunk-HIFOZPE6.js.map
