{
  "version": 3,
  "sources": ["../../grpc-web-client-gen/SyncDishServiceClientPb.ts"],
  "sourcesContent": ["/**\n * @fileoverview gRPC-Web generated client stub for syncDish\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.5.0\n// \tprotoc              v3.19.1\n// source: syncDish.proto\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\nimport * as grpcWeb from 'grpc-web';\n\nimport * as syncDish_pb from './syncDish_pb'; // proto import: \"syncDish.proto\"\n\n\nexport class SyncDishRoutesClient {\n  client_: grpcWeb.AbstractClientBase;\n  hostname_: string;\n  credentials_: null | { [index: string]: string; };\n  options_: null | { [index: string]: any; };\n\n  constructor (hostname: string,\n               credentials?: null | { [index: string]: string; },\n               options?: null | { [index: string]: any; }) {\n    if (!options) options = {};\n    if (!credentials) credentials = {};\n    options['format'] = 'text';\n\n    this.client_ = new grpcWeb.GrpcWebClientBase(options);\n    this.hostname_ = hostname.replace(/\\/+$/, '');\n    this.credentials_ = credentials;\n    this.options_ = options;\n  }\n\n  methodDescriptorgetSyncDishes = new grpcWeb.MethodDescriptor(\n    '/syncDish.SyncDishRoutes/getSyncDishes',\n    grpcWeb.MethodType.UNARY,\n    syncDish_pb.GetSyncDishesRequest,\n    syncDish_pb.GetSyncDishesResponse,\n    (request: syncDish_pb.GetSyncDishesRequest) => {\n      return request.serializeBinary();\n    },\n    syncDish_pb.GetSyncDishesResponse.deserializeBinary\n  );\n\n  getSyncDishes(\n    request: syncDish_pb.GetSyncDishesRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<syncDish_pb.GetSyncDishesResponse>;\n\n  getSyncDishes(\n    request: syncDish_pb.GetSyncDishesRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: syncDish_pb.GetSyncDishesResponse) => void): grpcWeb.ClientReadableStream<syncDish_pb.GetSyncDishesResponse>;\n\n  getSyncDishes(\n    request: syncDish_pb.GetSyncDishesRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: syncDish_pb.GetSyncDishesResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/syncDish.SyncDishRoutes/getSyncDishes',\n        request,\n        metadata || {},\n        this.methodDescriptorgetSyncDishes,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/syncDish.SyncDishRoutes/getSyncDishes',\n    request,\n    metadata || {},\n    this.methodDescriptorgetSyncDishes);\n  }\n\n  methodDescriptorgetSyncDishCategories = new grpcWeb.MethodDescriptor(\n    '/syncDish.SyncDishRoutes/getSyncDishCategories',\n    grpcWeb.MethodType.UNARY,\n    syncDish_pb.GetSyncDishCategoriesRequest,\n    syncDish_pb.GetSyncDishCategoriesResponse,\n    (request: syncDish_pb.GetSyncDishCategoriesRequest) => {\n      return request.serializeBinary();\n    },\n    syncDish_pb.GetSyncDishCategoriesResponse.deserializeBinary\n  );\n\n  getSyncDishCategories(\n    request: syncDish_pb.GetSyncDishCategoriesRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<syncDish_pb.GetSyncDishCategoriesResponse>;\n\n  getSyncDishCategories(\n    request: syncDish_pb.GetSyncDishCategoriesRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: syncDish_pb.GetSyncDishCategoriesResponse) => void): grpcWeb.ClientReadableStream<syncDish_pb.GetSyncDishCategoriesResponse>;\n\n  getSyncDishCategories(\n    request: syncDish_pb.GetSyncDishCategoriesRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: syncDish_pb.GetSyncDishCategoriesResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/syncDish.SyncDishRoutes/getSyncDishCategories',\n        request,\n        metadata || {},\n        this.methodDescriptorgetSyncDishCategories,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/syncDish.SyncDishRoutes/getSyncDishCategories',\n    request,\n    metadata || {},\n    this.methodDescriptorgetSyncDishCategories);\n  }\n\n  methodDescriptorcheckSyncDishes = new grpcWeb.MethodDescriptor(\n    '/syncDish.SyncDishRoutes/checkSyncDishes',\n    grpcWeb.MethodType.UNARY,\n    syncDish_pb.CheckSyncDishesRequest,\n    syncDish_pb.CheckSyncDishesResponse,\n    (request: syncDish_pb.CheckSyncDishesRequest) => {\n      return request.serializeBinary();\n    },\n    syncDish_pb.CheckSyncDishesResponse.deserializeBinary\n  );\n\n  checkSyncDishes(\n    request: syncDish_pb.CheckSyncDishesRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<syncDish_pb.CheckSyncDishesResponse>;\n\n  checkSyncDishes(\n    request: syncDish_pb.CheckSyncDishesRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: syncDish_pb.CheckSyncDishesResponse) => void): grpcWeb.ClientReadableStream<syncDish_pb.CheckSyncDishesResponse>;\n\n  checkSyncDishes(\n    request: syncDish_pb.CheckSyncDishesRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: syncDish_pb.CheckSyncDishesResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/syncDish.SyncDishRoutes/checkSyncDishes',\n        request,\n        metadata || {},\n        this.methodDescriptorcheckSyncDishes,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/syncDish.SyncDishRoutes/checkSyncDishes',\n    request,\n    metadata || {},\n    this.methodDescriptorcheckSyncDishes);\n  }\n\n  methodDescriptorconfirmSyncDishes = new grpcWeb.MethodDescriptor(\n    '/syncDish.SyncDishRoutes/confirmSyncDishes',\n    grpcWeb.MethodType.UNARY,\n    syncDish_pb.ConfirmSyncDishesRequest,\n    syncDish_pb.ConfirmSyncDishesResponse,\n    (request: syncDish_pb.ConfirmSyncDishesRequest) => {\n      return request.serializeBinary();\n    },\n    syncDish_pb.ConfirmSyncDishesResponse.deserializeBinary\n  );\n\n  confirmSyncDishes(\n    request: syncDish_pb.ConfirmSyncDishesRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<syncDish_pb.ConfirmSyncDishesResponse>;\n\n  confirmSyncDishes(\n    request: syncDish_pb.ConfirmSyncDishesRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: syncDish_pb.ConfirmSyncDishesResponse) => void): grpcWeb.ClientReadableStream<syncDish_pb.ConfirmSyncDishesResponse>;\n\n  confirmSyncDishes(\n    request: syncDish_pb.ConfirmSyncDishesRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: syncDish_pb.ConfirmSyncDishesResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/syncDish.SyncDishRoutes/confirmSyncDishes',\n        request,\n        metadata || {},\n        this.methodDescriptorconfirmSyncDishes,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/syncDish.SyncDishRoutes/confirmSyncDishes',\n    request,\n    metadata || {},\n    this.methodDescriptorconfirmSyncDishes);\n  }\n\n}\n\n"],
  "mappings": "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",
  "names": []
}
