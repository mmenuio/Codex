import {
  require_dishDetail_pb
} from "./chunk-7WLKLX2H.js";
import {
  require_merchant_pb
} from "./chunk-ANXG7VLJ.js";
import {
  require_common_pb
} from "./chunk-SZ7F7SCX.js";
import {
  require_google_protobuf
} from "./chunk-RB4XWN7V.js";
import {
  __commonJS
} from "./chunk-EWTE5DHJ.js";

// node_modules/grpc-web-client-gen/syncDish_pb.js
var require_syncDish_pb = __commonJS({
  "node_modules/grpc-web-client-gen/syncDish_pb.js"(exports) {
    var jspb = require_google_protobuf();
    var goog = jspb;
    var global = (function() {
      if (this) {
        return this;
      }
      if (typeof window !== "undefined") {
        return window;
      }
      if (typeof global !== "undefined") {
        return global;
      }
      if (typeof self !== "undefined") {
        return self;
      }
      return Function("return this")();
    }).call(null);
    var common_pb = require_common_pb();
    goog.object.extend(proto, common_pb);
    var merchant_pb = require_merchant_pb();
    goog.object.extend(proto, merchant_pb);
    var third$parties_mmenu$pos_dishDetail_pb = require_dishDetail_pb();
    goog.object.extend(proto, third$parties_mmenu$pos_dishDetail_pb);
    goog.exportSymbol("proto.syncDish.CheckSyncDishesRequest", null, global);
    goog.exportSymbol("proto.syncDish.CheckSyncDishesResponse", null, global);
    goog.exportSymbol("proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish", null, global);
    goog.exportSymbol("proto.syncDish.ConfirmSyncDishesRequest", null, global);
    goog.exportSymbol("proto.syncDish.ConfirmSyncDishesResponse", null, global);
    goog.exportSymbol("proto.syncDish.GetSyncDishCategoriesRequest", null, global);
    goog.exportSymbol("proto.syncDish.GetSyncDishCategoriesResponse", null, global);
    goog.exportSymbol("proto.syncDish.GetSyncDishesRequest", null, global);
    goog.exportSymbol("proto.syncDish.GetSyncDishesResponse", null, global);
    goog.exportSymbol("proto.syncDish.SyncDish", null, global);
    goog.exportSymbol("proto.syncDish.SyncDishCategory", null, global);
    proto.syncDish.SyncDishCategory = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.syncDish.SyncDishCategory, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.syncDish.SyncDishCategory.displayName = "proto.syncDish.SyncDishCategory";
    }
    proto.syncDish.SyncDish = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.SyncDish.repeatedFields_, null);
    };
    goog.inherits(proto.syncDish.SyncDish, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.syncDish.SyncDish.displayName = "proto.syncDish.SyncDish";
    }
    proto.syncDish.GetSyncDishCategoriesRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.syncDish.GetSyncDishCategoriesRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.syncDish.GetSyncDishCategoriesRequest.displayName = "proto.syncDish.GetSyncDishCategoriesRequest";
    }
    proto.syncDish.GetSyncDishCategoriesResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.GetSyncDishCategoriesResponse.repeatedFields_, null);
    };
    goog.inherits(proto.syncDish.GetSyncDishCategoriesResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.syncDish.GetSyncDishCategoriesResponse.displayName = "proto.syncDish.GetSyncDishCategoriesResponse";
    }
    proto.syncDish.GetSyncDishesRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.GetSyncDishesRequest.repeatedFields_, null);
    };
    goog.inherits(proto.syncDish.GetSyncDishesRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.syncDish.GetSyncDishesRequest.displayName = "proto.syncDish.GetSyncDishesRequest";
    }
    proto.syncDish.GetSyncDishesResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.GetSyncDishesResponse.repeatedFields_, null);
    };
    goog.inherits(proto.syncDish.GetSyncDishesResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.syncDish.GetSyncDishesResponse.displayName = "proto.syncDish.GetSyncDishesResponse";
    }
    proto.syncDish.CheckSyncDishesRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.CheckSyncDishesRequest.repeatedFields_, null);
    };
    goog.inherits(proto.syncDish.CheckSyncDishesRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.syncDish.CheckSyncDishesRequest.displayName = "proto.syncDish.CheckSyncDishesRequest";
    }
    proto.syncDish.CheckSyncDishesResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.CheckSyncDishesResponse.repeatedFields_, null);
    };
    goog.inherits(proto.syncDish.CheckSyncDishesResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.syncDish.CheckSyncDishesResponse.displayName = "proto.syncDish.CheckSyncDishesResponse";
    }
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.repeatedFields_, null);
    };
    goog.inherits(proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.displayName = "proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish";
    }
    proto.syncDish.ConfirmSyncDishesRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.ConfirmSyncDishesRequest.repeatedFields_, null);
    };
    goog.inherits(proto.syncDish.ConfirmSyncDishesRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.syncDish.ConfirmSyncDishesRequest.displayName = "proto.syncDish.ConfirmSyncDishesRequest";
    }
    proto.syncDish.ConfirmSyncDishesResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.syncDish.ConfirmSyncDishesResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.syncDish.ConfirmSyncDishesResponse.displayName = "proto.syncDish.ConfirmSyncDishesResponse";
    }
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.syncDish.SyncDishCategory.prototype.toObject = function(opt_includeInstance) {
        return proto.syncDish.SyncDishCategory.toObject(opt_includeInstance, this);
      };
      proto.syncDish.SyncDishCategory.toObject = function(includeInstance, msg) {
        var f, obj = {
          name: jspb.Message.getFieldWithDefault(msg, 1, ""),
          code: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.syncDish.SyncDishCategory.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.syncDish.SyncDishCategory();
      return proto.syncDish.SyncDishCategory.deserializeBinaryFromReader(msg, reader);
    };
    proto.syncDish.SyncDishCategory.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setName(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setCode(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.syncDish.SyncDishCategory.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.syncDish.SyncDishCategory.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.syncDish.SyncDishCategory.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getName();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getCode();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
    };
    proto.syncDish.SyncDishCategory.prototype.getName = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.syncDish.SyncDishCategory.prototype.setName = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.syncDish.SyncDishCategory.prototype.getCode = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.syncDish.SyncDishCategory.prototype.setCode = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.syncDish.SyncDish.repeatedFields_ = [1, 7];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.syncDish.SyncDish.prototype.toObject = function(opt_includeInstance) {
        return proto.syncDish.SyncDish.toObject(opt_includeInstance, this);
      };
      proto.syncDish.SyncDish.toObject = function(includeInstance, msg) {
        var f, obj = {
          imagesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? void 0 : f,
          skucode: jspb.Message.getFieldWithDefault(msg, 2, ""),
          name: jspb.Message.getFieldWithDefault(msg, 3, ""),
          dishType: jspb.Message.getFieldWithDefault(msg, 4, 0),
          dishCategory: (f = msg.getDishCategory()) && proto.syncDish.SyncDishCategory.toObject(includeInstance, f),
          syncDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
          merchantsList: jspb.Message.toObjectList(
            msg.getMerchantsList(),
            merchant_pb.Merchant.toObject,
            includeInstance
          )
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.syncDish.SyncDish.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.syncDish.SyncDish();
      return proto.syncDish.SyncDish.deserializeBinaryFromReader(msg, reader);
    };
    proto.syncDish.SyncDish.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.addImages(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setSkucode(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setName(value);
            break;
          case 4:
            var value = (
              /** @type {!proto.mmenu.response.order.DishDetail.DishType} */
              reader.readEnum()
            );
            msg.setDishType(value);
            break;
          case 5:
            var value = new proto.syncDish.SyncDishCategory();
            reader.readMessage(value, proto.syncDish.SyncDishCategory.deserializeBinaryFromReader);
            msg.setDishCategory(value);
            break;
          case 6:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setSyncDate(value);
            break;
          case 7:
            var value = new merchant_pb.Merchant();
            reader.readMessage(value, merchant_pb.Merchant.deserializeBinaryFromReader);
            msg.addMerchants(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.syncDish.SyncDish.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.syncDish.SyncDish.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.syncDish.SyncDish.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getImagesList();
      if (f.length > 0) {
        writer.writeRepeatedString(
          1,
          f
        );
      }
      f = message.getSkucode();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getName();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getDishType();
      if (f !== 0) {
        writer.writeEnum(
          4,
          f
        );
      }
      f = message.getDishCategory();
      if (f != null) {
        writer.writeMessage(
          5,
          f,
          proto.syncDish.SyncDishCategory.serializeBinaryToWriter
        );
      }
      f = message.getSyncDate();
      if (f.length > 0) {
        writer.writeString(
          6,
          f
        );
      }
      f = message.getMerchantsList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          7,
          f,
          merchant_pb.Merchant.serializeBinaryToWriter
        );
      }
    };
    proto.syncDish.SyncDish.prototype.getImagesList = function() {
      return (
        /** @type {!Array<string>} */
        jspb.Message.getRepeatedField(this, 1)
      );
    };
    proto.syncDish.SyncDish.prototype.setImagesList = function(value) {
      return jspb.Message.setField(this, 1, value || []);
    };
    proto.syncDish.SyncDish.prototype.addImages = function(value, opt_index) {
      return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
    };
    proto.syncDish.SyncDish.prototype.clearImagesList = function() {
      return this.setImagesList([]);
    };
    proto.syncDish.SyncDish.prototype.getSkucode = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.syncDish.SyncDish.prototype.setSkucode = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.syncDish.SyncDish.prototype.getName = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.syncDish.SyncDish.prototype.setName = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.syncDish.SyncDish.prototype.getDishType = function() {
      return (
        /** @type {!proto.mmenu.response.order.DishDetail.DishType} */
        jspb.Message.getFieldWithDefault(this, 4, 0)
      );
    };
    proto.syncDish.SyncDish.prototype.setDishType = function(value) {
      return jspb.Message.setProto3EnumField(this, 4, value);
    };
    proto.syncDish.SyncDish.prototype.getDishCategory = function() {
      return (
        /** @type{?proto.syncDish.SyncDishCategory} */
        jspb.Message.getWrapperField(this, proto.syncDish.SyncDishCategory, 5)
      );
    };
    proto.syncDish.SyncDish.prototype.setDishCategory = function(value) {
      return jspb.Message.setWrapperField(this, 5, value);
    };
    proto.syncDish.SyncDish.prototype.clearDishCategory = function() {
      return this.setDishCategory(void 0);
    };
    proto.syncDish.SyncDish.prototype.hasDishCategory = function() {
      return jspb.Message.getField(this, 5) != null;
    };
    proto.syncDish.SyncDish.prototype.getSyncDate = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 6, "")
      );
    };
    proto.syncDish.SyncDish.prototype.setSyncDate = function(value) {
      return jspb.Message.setProto3StringField(this, 6, value);
    };
    proto.syncDish.SyncDish.prototype.getMerchantsList = function() {
      return (
        /** @type{!Array<!proto.merchant.Merchant>} */
        jspb.Message.getRepeatedWrapperField(this, merchant_pb.Merchant, 7)
      );
    };
    proto.syncDish.SyncDish.prototype.setMerchantsList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 7, value);
    };
    proto.syncDish.SyncDish.prototype.addMerchants = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.merchant.Merchant, opt_index);
    };
    proto.syncDish.SyncDish.prototype.clearMerchantsList = function() {
      return this.setMerchantsList([]);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.syncDish.GetSyncDishCategoriesRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.syncDish.GetSyncDishCategoriesRequest.toObject(opt_includeInstance, this);
      };
      proto.syncDish.GetSyncDishCategoriesRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          brandId: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.syncDish.GetSyncDishCategoriesRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.syncDish.GetSyncDishCategoriesRequest();
      return proto.syncDish.GetSyncDishCategoriesRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.syncDish.GetSyncDishCategoriesRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setBrandId(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.syncDish.GetSyncDishCategoriesRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.syncDish.GetSyncDishCategoriesRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.syncDish.GetSyncDishCategoriesRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getBrandId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
    };
    proto.syncDish.GetSyncDishCategoriesRequest.prototype.getBrandId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.syncDish.GetSyncDishCategoriesRequest.prototype.setBrandId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.syncDish.GetSyncDishCategoriesResponse.repeatedFields_ = [3];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.syncDish.GetSyncDishCategoriesResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.syncDish.GetSyncDishCategoriesResponse.toObject(opt_includeInstance, this);
      };
      proto.syncDish.GetSyncDishCategoriesResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, ""),
          syncDishCategoriesList: jspb.Message.toObjectList(
            msg.getSyncDishCategoriesList(),
            proto.syncDish.SyncDishCategory.toObject,
            includeInstance
          )
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.syncDish.GetSyncDishCategoriesResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.syncDish.GetSyncDishCategoriesResponse();
      return proto.syncDish.GetSyncDishCategoriesResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.syncDish.GetSyncDishCategoriesResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          case 3:
            var value = new proto.syncDish.SyncDishCategory();
            reader.readMessage(value, proto.syncDish.SyncDishCategory.deserializeBinaryFromReader);
            msg.addSyncDishCategories(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.syncDish.GetSyncDishCategoriesResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.syncDish.GetSyncDishCategoriesResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.syncDish.GetSyncDishCategoriesResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getSyncDishCategoriesList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          3,
          f,
          proto.syncDish.SyncDishCategory.serializeBinaryToWriter
        );
      }
    };
    proto.syncDish.GetSyncDishCategoriesResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.syncDish.GetSyncDishCategoriesResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.syncDish.GetSyncDishCategoriesResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.syncDish.GetSyncDishCategoriesResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.syncDish.GetSyncDishCategoriesResponse.prototype.getSyncDishCategoriesList = function() {
      return (
        /** @type{!Array<!proto.syncDish.SyncDishCategory>} */
        jspb.Message.getRepeatedWrapperField(this, proto.syncDish.SyncDishCategory, 3)
      );
    };
    proto.syncDish.GetSyncDishCategoriesResponse.prototype.setSyncDishCategoriesList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 3, value);
    };
    proto.syncDish.GetSyncDishCategoriesResponse.prototype.addSyncDishCategories = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.syncDish.SyncDishCategory, opt_index);
    };
    proto.syncDish.GetSyncDishCategoriesResponse.prototype.clearSyncDishCategoriesList = function() {
      return this.setSyncDishCategoriesList([]);
    };
    proto.syncDish.GetSyncDishesRequest.repeatedFields_ = [4];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.syncDish.GetSyncDishesRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.syncDish.GetSyncDishesRequest.toObject(opt_includeInstance, this);
      };
      proto.syncDish.GetSyncDishesRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          page: jspb.Message.getFieldWithDefault(msg, 1, 0),
          limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
          searchText: jspb.Message.getFieldWithDefault(msg, 3, ""),
          merchantIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? void 0 : f,
          brandId: jspb.Message.getFieldWithDefault(msg, 5, ""),
          dishType: jspb.Message.getFieldWithDefault(msg, 6, 0),
          categoryName: jspb.Message.getFieldWithDefault(msg, 7, ""),
          fromSyncDate: jspb.Message.getFieldWithDefault(msg, 8, ""),
          toSyncDate: jspb.Message.getFieldWithDefault(msg, 9, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.syncDish.GetSyncDishesRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.syncDish.GetSyncDishesRequest();
      return proto.syncDish.GetSyncDishesRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.syncDish.GetSyncDishesRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setPage(value);
            break;
          case 2:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setLimit(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setSearchText(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.addMerchantIds(value);
            break;
          case 5:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setBrandId(value);
            break;
          case 6:
            var value = (
              /** @type {!proto.mmenu.response.order.DishDetail.DishType} */
              reader.readEnum()
            );
            msg.setDishType(value);
            break;
          case 7:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setCategoryName(value);
            break;
          case 8:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setFromSyncDate(value);
            break;
          case 9:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setToSyncDate(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.syncDish.GetSyncDishesRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.syncDish.GetSyncDishesRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.syncDish.GetSyncDishesRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getPage();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getLimit();
      if (f !== 0) {
        writer.writeInt32(
          2,
          f
        );
      }
      f = message.getSearchText();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getMerchantIdsList();
      if (f.length > 0) {
        writer.writeRepeatedString(
          4,
          f
        );
      }
      f = message.getBrandId();
      if (f.length > 0) {
        writer.writeString(
          5,
          f
        );
      }
      f = message.getDishType();
      if (f !== 0) {
        writer.writeEnum(
          6,
          f
        );
      }
      f = message.getCategoryName();
      if (f.length > 0) {
        writer.writeString(
          7,
          f
        );
      }
      f = message.getFromSyncDate();
      if (f.length > 0) {
        writer.writeString(
          8,
          f
        );
      }
      f = message.getToSyncDate();
      if (f.length > 0) {
        writer.writeString(
          9,
          f
        );
      }
    };
    proto.syncDish.GetSyncDishesRequest.prototype.getPage = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.syncDish.GetSyncDishesRequest.prototype.setPage = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.syncDish.GetSyncDishesRequest.prototype.getLimit = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 2, 0)
      );
    };
    proto.syncDish.GetSyncDishesRequest.prototype.setLimit = function(value) {
      return jspb.Message.setProto3IntField(this, 2, value);
    };
    proto.syncDish.GetSyncDishesRequest.prototype.getSearchText = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.syncDish.GetSyncDishesRequest.prototype.setSearchText = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.syncDish.GetSyncDishesRequest.prototype.getMerchantIdsList = function() {
      return (
        /** @type {!Array<string>} */
        jspb.Message.getRepeatedField(this, 4)
      );
    };
    proto.syncDish.GetSyncDishesRequest.prototype.setMerchantIdsList = function(value) {
      return jspb.Message.setField(this, 4, value || []);
    };
    proto.syncDish.GetSyncDishesRequest.prototype.addMerchantIds = function(value, opt_index) {
      return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
    };
    proto.syncDish.GetSyncDishesRequest.prototype.clearMerchantIdsList = function() {
      return this.setMerchantIdsList([]);
    };
    proto.syncDish.GetSyncDishesRequest.prototype.getBrandId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 5, "")
      );
    };
    proto.syncDish.GetSyncDishesRequest.prototype.setBrandId = function(value) {
      return jspb.Message.setProto3StringField(this, 5, value);
    };
    proto.syncDish.GetSyncDishesRequest.prototype.getDishType = function() {
      return (
        /** @type {!proto.mmenu.response.order.DishDetail.DishType} */
        jspb.Message.getFieldWithDefault(this, 6, 0)
      );
    };
    proto.syncDish.GetSyncDishesRequest.prototype.setDishType = function(value) {
      return jspb.Message.setProto3EnumField(this, 6, value);
    };
    proto.syncDish.GetSyncDishesRequest.prototype.getCategoryName = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 7, "")
      );
    };
    proto.syncDish.GetSyncDishesRequest.prototype.setCategoryName = function(value) {
      return jspb.Message.setProto3StringField(this, 7, value);
    };
    proto.syncDish.GetSyncDishesRequest.prototype.getFromSyncDate = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 8, "")
      );
    };
    proto.syncDish.GetSyncDishesRequest.prototype.setFromSyncDate = function(value) {
      return jspb.Message.setProto3StringField(this, 8, value);
    };
    proto.syncDish.GetSyncDishesRequest.prototype.getToSyncDate = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 9, "")
      );
    };
    proto.syncDish.GetSyncDishesRequest.prototype.setToSyncDate = function(value) {
      return jspb.Message.setProto3StringField(this, 9, value);
    };
    proto.syncDish.GetSyncDishesResponse.repeatedFields_ = [3];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.syncDish.GetSyncDishesResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.syncDish.GetSyncDishesResponse.toObject(opt_includeInstance, this);
      };
      proto.syncDish.GetSyncDishesResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, ""),
          syncDishesList: jspb.Message.toObjectList(
            msg.getSyncDishesList(),
            proto.syncDish.SyncDish.toObject,
            includeInstance
          ),
          pagination: (f = msg.getPagination()) && common_pb.PaginationResponse.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.syncDish.GetSyncDishesResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.syncDish.GetSyncDishesResponse();
      return proto.syncDish.GetSyncDishesResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.syncDish.GetSyncDishesResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          case 3:
            var value = new proto.syncDish.SyncDish();
            reader.readMessage(value, proto.syncDish.SyncDish.deserializeBinaryFromReader);
            msg.addSyncDishes(value);
            break;
          case 4:
            var value = new common_pb.PaginationResponse();
            reader.readMessage(value, common_pb.PaginationResponse.deserializeBinaryFromReader);
            msg.setPagination(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.syncDish.GetSyncDishesResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.syncDish.GetSyncDishesResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.syncDish.GetSyncDishesResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getSyncDishesList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          3,
          f,
          proto.syncDish.SyncDish.serializeBinaryToWriter
        );
      }
      f = message.getPagination();
      if (f != null) {
        writer.writeMessage(
          4,
          f,
          common_pb.PaginationResponse.serializeBinaryToWriter
        );
      }
    };
    proto.syncDish.GetSyncDishesResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.syncDish.GetSyncDishesResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.syncDish.GetSyncDishesResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.syncDish.GetSyncDishesResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.syncDish.GetSyncDishesResponse.prototype.getSyncDishesList = function() {
      return (
        /** @type{!Array<!proto.syncDish.SyncDish>} */
        jspb.Message.getRepeatedWrapperField(this, proto.syncDish.SyncDish, 3)
      );
    };
    proto.syncDish.GetSyncDishesResponse.prototype.setSyncDishesList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 3, value);
    };
    proto.syncDish.GetSyncDishesResponse.prototype.addSyncDishes = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.syncDish.SyncDish, opt_index);
    };
    proto.syncDish.GetSyncDishesResponse.prototype.clearSyncDishesList = function() {
      return this.setSyncDishesList([]);
    };
    proto.syncDish.GetSyncDishesResponse.prototype.getPagination = function() {
      return (
        /** @type{?proto.common.PaginationResponse} */
        jspb.Message.getWrapperField(this, common_pb.PaginationResponse, 4)
      );
    };
    proto.syncDish.GetSyncDishesResponse.prototype.setPagination = function(value) {
      return jspb.Message.setWrapperField(this, 4, value);
    };
    proto.syncDish.GetSyncDishesResponse.prototype.clearPagination = function() {
      return this.setPagination(void 0);
    };
    proto.syncDish.GetSyncDishesResponse.prototype.hasPagination = function() {
      return jspb.Message.getField(this, 4) != null;
    };
    proto.syncDish.CheckSyncDishesRequest.repeatedFields_ = [2];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.syncDish.CheckSyncDishesRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.syncDish.CheckSyncDishesRequest.toObject(opt_includeInstance, this);
      };
      proto.syncDish.CheckSyncDishesRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          brandId: jspb.Message.getFieldWithDefault(msg, 1, ""),
          merchantIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? void 0 : f
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.syncDish.CheckSyncDishesRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.syncDish.CheckSyncDishesRequest();
      return proto.syncDish.CheckSyncDishesRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.syncDish.CheckSyncDishesRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setBrandId(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.addMerchantIds(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.syncDish.CheckSyncDishesRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.syncDish.CheckSyncDishesRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.syncDish.CheckSyncDishesRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getBrandId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getMerchantIdsList();
      if (f.length > 0) {
        writer.writeRepeatedString(
          2,
          f
        );
      }
    };
    proto.syncDish.CheckSyncDishesRequest.prototype.getBrandId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.syncDish.CheckSyncDishesRequest.prototype.setBrandId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.syncDish.CheckSyncDishesRequest.prototype.getMerchantIdsList = function() {
      return (
        /** @type {!Array<string>} */
        jspb.Message.getRepeatedField(this, 2)
      );
    };
    proto.syncDish.CheckSyncDishesRequest.prototype.setMerchantIdsList = function(value) {
      return jspb.Message.setField(this, 2, value || []);
    };
    proto.syncDish.CheckSyncDishesRequest.prototype.addMerchantIds = function(value, opt_index) {
      return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
    };
    proto.syncDish.CheckSyncDishesRequest.prototype.clearMerchantIdsList = function() {
      return this.setMerchantIdsList([]);
    };
    proto.syncDish.CheckSyncDishesResponse.repeatedFields_ = [3, 4];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.syncDish.CheckSyncDishesResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.syncDish.CheckSyncDishesResponse.toObject(opt_includeInstance, this);
      };
      proto.syncDish.CheckSyncDishesResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, ""),
          validDishesList: jspb.Message.toObjectList(
            msg.getValidDishesList(),
            proto.syncDish.SyncDish.toObject,
            includeInstance
          ),
          invalidDishesList: jspb.Message.toObjectList(
            msg.getInvalidDishesList(),
            proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.toObject,
            includeInstance
          )
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.syncDish.CheckSyncDishesResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.syncDish.CheckSyncDishesResponse();
      return proto.syncDish.CheckSyncDishesResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.syncDish.CheckSyncDishesResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          case 3:
            var value = new proto.syncDish.SyncDish();
            reader.readMessage(value, proto.syncDish.SyncDish.deserializeBinaryFromReader);
            msg.addValidDishes(value);
            break;
          case 4:
            var value = new proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish();
            reader.readMessage(value, proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.deserializeBinaryFromReader);
            msg.addInvalidDishes(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.syncDish.CheckSyncDishesResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.syncDish.CheckSyncDishesResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getValidDishesList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          3,
          f,
          proto.syncDish.SyncDish.serializeBinaryToWriter
        );
      }
      f = message.getInvalidDishesList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          4,
          f,
          proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.serializeBinaryToWriter
        );
      }
    };
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.repeatedFields_ = [2];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.toObject = function(opt_includeInstance) {
        return proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.toObject(opt_includeInstance, this);
      };
      proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.toObject = function(includeInstance, msg) {
        var f, obj = {
          syncDish: (f = msg.getSyncDish()) && proto.syncDish.SyncDish.toObject(includeInstance, f),
          namesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? void 0 : f
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish();
      return proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.deserializeBinaryFromReader(msg, reader);
    };
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = new proto.syncDish.SyncDish();
            reader.readMessage(value, proto.syncDish.SyncDish.deserializeBinaryFromReader);
            msg.setSyncDish(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.addNames(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getSyncDish();
      if (f != null) {
        writer.writeMessage(
          1,
          f,
          proto.syncDish.SyncDish.serializeBinaryToWriter
        );
      }
      f = message.getNamesList();
      if (f.length > 0) {
        writer.writeRepeatedString(
          2,
          f
        );
      }
    };
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.getSyncDish = function() {
      return (
        /** @type{?proto.syncDish.SyncDish} */
        jspb.Message.getWrapperField(this, proto.syncDish.SyncDish, 1)
      );
    };
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.setSyncDish = function(value) {
      return jspb.Message.setWrapperField(this, 1, value);
    };
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.clearSyncDish = function() {
      return this.setSyncDish(void 0);
    };
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.hasSyncDish = function() {
      return jspb.Message.getField(this, 1) != null;
    };
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.getNamesList = function() {
      return (
        /** @type {!Array<string>} */
        jspb.Message.getRepeatedField(this, 2)
      );
    };
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.setNamesList = function(value) {
      return jspb.Message.setField(this, 2, value || []);
    };
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.addNames = function(value, opt_index) {
      return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
    };
    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.clearNamesList = function() {
      return this.setNamesList([]);
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.getValidDishesList = function() {
      return (
        /** @type{!Array<!proto.syncDish.SyncDish>} */
        jspb.Message.getRepeatedWrapperField(this, proto.syncDish.SyncDish, 3)
      );
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.setValidDishesList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 3, value);
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.addValidDishes = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.syncDish.SyncDish, opt_index);
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.clearValidDishesList = function() {
      return this.setValidDishesList([]);
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.getInvalidDishesList = function() {
      return (
        /** @type{!Array<!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish>} */
        jspb.Message.getRepeatedWrapperField(this, proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish, 4)
      );
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.setInvalidDishesList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 4, value);
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.addInvalidDishes = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish, opt_index);
    };
    proto.syncDish.CheckSyncDishesResponse.prototype.clearInvalidDishesList = function() {
      return this.setInvalidDishesList([]);
    };
    proto.syncDish.ConfirmSyncDishesRequest.repeatedFields_ = [2];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.syncDish.ConfirmSyncDishesRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.syncDish.ConfirmSyncDishesRequest.toObject(opt_includeInstance, this);
      };
      proto.syncDish.ConfirmSyncDishesRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          brandId: jspb.Message.getFieldWithDefault(msg, 1, ""),
          validDishesList: jspb.Message.toObjectList(
            msg.getValidDishesList(),
            proto.syncDish.SyncDish.toObject,
            includeInstance
          )
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.syncDish.ConfirmSyncDishesRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.syncDish.ConfirmSyncDishesRequest();
      return proto.syncDish.ConfirmSyncDishesRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.syncDish.ConfirmSyncDishesRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setBrandId(value);
            break;
          case 2:
            var value = new proto.syncDish.SyncDish();
            reader.readMessage(value, proto.syncDish.SyncDish.deserializeBinaryFromReader);
            msg.addValidDishes(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.syncDish.ConfirmSyncDishesRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.syncDish.ConfirmSyncDishesRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.syncDish.ConfirmSyncDishesRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getBrandId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getValidDishesList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          2,
          f,
          proto.syncDish.SyncDish.serializeBinaryToWriter
        );
      }
    };
    proto.syncDish.ConfirmSyncDishesRequest.prototype.getBrandId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.syncDish.ConfirmSyncDishesRequest.prototype.setBrandId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.syncDish.ConfirmSyncDishesRequest.prototype.getValidDishesList = function() {
      return (
        /** @type{!Array<!proto.syncDish.SyncDish>} */
        jspb.Message.getRepeatedWrapperField(this, proto.syncDish.SyncDish, 2)
      );
    };
    proto.syncDish.ConfirmSyncDishesRequest.prototype.setValidDishesList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.syncDish.ConfirmSyncDishesRequest.prototype.addValidDishes = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.syncDish.SyncDish, opt_index);
    };
    proto.syncDish.ConfirmSyncDishesRequest.prototype.clearValidDishesList = function() {
      return this.setValidDishesList([]);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.syncDish.ConfirmSyncDishesResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.syncDish.ConfirmSyncDishesResponse.toObject(opt_includeInstance, this);
      };
      proto.syncDish.ConfirmSyncDishesResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, ""),
          numberOfDishesSuccessSync: jspb.Message.getFieldWithDefault(msg, 3, 0)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.syncDish.ConfirmSyncDishesResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.syncDish.ConfirmSyncDishesResponse();
      return proto.syncDish.ConfirmSyncDishesResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.syncDish.ConfirmSyncDishesResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          case 3:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setNumberOfDishesSuccessSync(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.syncDish.ConfirmSyncDishesResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.syncDish.ConfirmSyncDishesResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.syncDish.ConfirmSyncDishesResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getNumberOfDishesSuccessSync();
      if (f !== 0) {
        writer.writeInt32(
          3,
          f
        );
      }
    };
    proto.syncDish.ConfirmSyncDishesResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.syncDish.ConfirmSyncDishesResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.syncDish.ConfirmSyncDishesResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.syncDish.ConfirmSyncDishesResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.syncDish.ConfirmSyncDishesResponse.prototype.getNumberOfDishesSuccessSync = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 3, 0)
      );
    };
    proto.syncDish.ConfirmSyncDishesResponse.prototype.setNumberOfDishesSuccessSync = function(value) {
      return jspb.Message.setProto3IntField(this, 3, value);
    };
    goog.object.extend(exports, proto.syncDish);
  }
});

export {
  require_syncDish_pb
};
//# sourceMappingURL=chunk-Z4DUW7BY.js.map
