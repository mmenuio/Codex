{
  "version": 3,
  "sources": ["../../grpc-web-client-gen/syncDish_pb.js"],
  "sourcesContent": ["// source: syncDish.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() {\n  if (this) { return this; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  if (typeof self !== 'undefined') { return self; }\n  return Function('return this')();\n}.call(null));\n\nvar common_pb = require('./common_pb.js');\ngoog.object.extend(proto, common_pb);\nvar merchant_pb = require('./merchant_pb.js');\ngoog.object.extend(proto, merchant_pb);\nvar third$parties_mmenu$pos_dishDetail_pb = require('./third-parties/mmenu-pos/dishDetail_pb.js');\ngoog.object.extend(proto, third$parties_mmenu$pos_dishDetail_pb);\ngoog.exportSymbol('proto.syncDish.CheckSyncDishesRequest', null, global);\ngoog.exportSymbol('proto.syncDish.CheckSyncDishesResponse', null, global);\ngoog.exportSymbol('proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish', null, global);\ngoog.exportSymbol('proto.syncDish.ConfirmSyncDishesRequest', null, global);\ngoog.exportSymbol('proto.syncDish.ConfirmSyncDishesResponse', null, global);\ngoog.exportSymbol('proto.syncDish.GetSyncDishCategoriesRequest', null, global);\ngoog.exportSymbol('proto.syncDish.GetSyncDishCategoriesResponse', null, global);\ngoog.exportSymbol('proto.syncDish.GetSyncDishesRequest', null, global);\ngoog.exportSymbol('proto.syncDish.GetSyncDishesResponse', null, global);\ngoog.exportSymbol('proto.syncDish.SyncDish', null, global);\ngoog.exportSymbol('proto.syncDish.SyncDishCategory', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.syncDish.SyncDishCategory = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.syncDish.SyncDishCategory, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.syncDish.SyncDishCategory.displayName = 'proto.syncDish.SyncDishCategory';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.syncDish.SyncDish = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.SyncDish.repeatedFields_, null);\n};\ngoog.inherits(proto.syncDish.SyncDish, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.syncDish.SyncDish.displayName = 'proto.syncDish.SyncDish';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.syncDish.GetSyncDishCategoriesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.syncDish.GetSyncDishCategoriesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.syncDish.GetSyncDishCategoriesRequest.displayName = 'proto.syncDish.GetSyncDishCategoriesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.syncDish.GetSyncDishCategoriesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.GetSyncDishCategoriesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.syncDish.GetSyncDishCategoriesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.syncDish.GetSyncDishCategoriesResponse.displayName = 'proto.syncDish.GetSyncDishCategoriesResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.syncDish.GetSyncDishesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.GetSyncDishesRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.syncDish.GetSyncDishesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.syncDish.GetSyncDishesRequest.displayName = 'proto.syncDish.GetSyncDishesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.syncDish.GetSyncDishesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.GetSyncDishesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.syncDish.GetSyncDishesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.syncDish.GetSyncDishesResponse.displayName = 'proto.syncDish.GetSyncDishesResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.syncDish.CheckSyncDishesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.CheckSyncDishesRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.syncDish.CheckSyncDishesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.syncDish.CheckSyncDishesRequest.displayName = 'proto.syncDish.CheckSyncDishesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.syncDish.CheckSyncDishesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.CheckSyncDishesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.syncDish.CheckSyncDishesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.syncDish.CheckSyncDishesResponse.displayName = 'proto.syncDish.CheckSyncDishesResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.repeatedFields_, null);\n};\ngoog.inherits(proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.displayName = 'proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.syncDish.ConfirmSyncDishesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.syncDish.ConfirmSyncDishesRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.syncDish.ConfirmSyncDishesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.syncDish.ConfirmSyncDishesRequest.displayName = 'proto.syncDish.ConfirmSyncDishesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.syncDish.ConfirmSyncDishesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.syncDish.ConfirmSyncDishesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.syncDish.ConfirmSyncDishesResponse.displayName = 'proto.syncDish.ConfirmSyncDishesResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.syncDish.SyncDishCategory.prototype.toObject = function(opt_includeInstance) {\n  return proto.syncDish.SyncDishCategory.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.syncDish.SyncDishCategory} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.SyncDishCategory.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    code: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.syncDish.SyncDishCategory}\n */\nproto.syncDish.SyncDishCategory.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.syncDish.SyncDishCategory;\n  return proto.syncDish.SyncDishCategory.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.syncDish.SyncDishCategory} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.syncDish.SyncDishCategory}\n */\nproto.syncDish.SyncDishCategory.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCode(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.syncDish.SyncDishCategory.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.syncDish.SyncDishCategory.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.syncDish.SyncDishCategory} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.SyncDishCategory.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCode();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.syncDish.SyncDishCategory.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.SyncDishCategory} returns this\n */\nproto.syncDish.SyncDishCategory.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string code = 2;\n * @return {string}\n */\nproto.syncDish.SyncDishCategory.prototype.getCode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.SyncDishCategory} returns this\n */\nproto.syncDish.SyncDishCategory.prototype.setCode = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.syncDish.SyncDish.repeatedFields_ = [1,7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.syncDish.SyncDish.prototype.toObject = function(opt_includeInstance) {\n  return proto.syncDish.SyncDish.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.syncDish.SyncDish} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.SyncDish.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    imagesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    skucode: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    dishType: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    dishCategory: (f = msg.getDishCategory()) && proto.syncDish.SyncDishCategory.toObject(includeInstance, f),\n    syncDate: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    merchantsList: jspb.Message.toObjectList(msg.getMerchantsList(),\n    merchant_pb.Merchant.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.syncDish.SyncDish}\n */\nproto.syncDish.SyncDish.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.syncDish.SyncDish;\n  return proto.syncDish.SyncDish.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.syncDish.SyncDish} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.syncDish.SyncDish}\n */\nproto.syncDish.SyncDish.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addImages(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSkucode(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 4:\n      var value = /** @type {!proto.mmenu.response.order.DishDetail.DishType} */ (reader.readEnum());\n      msg.setDishType(value);\n      break;\n    case 5:\n      var value = new proto.syncDish.SyncDishCategory;\n      reader.readMessage(value,proto.syncDish.SyncDishCategory.deserializeBinaryFromReader);\n      msg.setDishCategory(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSyncDate(value);\n      break;\n    case 7:\n      var value = new merchant_pb.Merchant;\n      reader.readMessage(value,merchant_pb.Merchant.deserializeBinaryFromReader);\n      msg.addMerchants(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.syncDish.SyncDish.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.syncDish.SyncDish.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.syncDish.SyncDish} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.SyncDish.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getImagesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n  f = message.getSkucode();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getDishType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      4,\n      f\n    );\n  }\n  f = message.getDishCategory();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.syncDish.SyncDishCategory.serializeBinaryToWriter\n    );\n  }\n  f = message.getSyncDate();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getMerchantsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      merchant_pb.Merchant.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated string images = 1;\n * @return {!Array<string>}\n */\nproto.syncDish.SyncDish.prototype.getImagesList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.syncDish.SyncDish} returns this\n */\nproto.syncDish.SyncDish.prototype.setImagesList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.syncDish.SyncDish} returns this\n */\nproto.syncDish.SyncDish.prototype.addImages = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.syncDish.SyncDish} returns this\n */\nproto.syncDish.SyncDish.prototype.clearImagesList = function() {\n  return this.setImagesList([]);\n};\n\n\n/**\n * optional string skuCode = 2;\n * @return {string}\n */\nproto.syncDish.SyncDish.prototype.getSkucode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.SyncDish} returns this\n */\nproto.syncDish.SyncDish.prototype.setSkucode = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.syncDish.SyncDish.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.SyncDish} returns this\n */\nproto.syncDish.SyncDish.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional mmenu.response.order.DishDetail.DishType dish_type = 4;\n * @return {!proto.mmenu.response.order.DishDetail.DishType}\n */\nproto.syncDish.SyncDish.prototype.getDishType = function() {\n  return /** @type {!proto.mmenu.response.order.DishDetail.DishType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {!proto.mmenu.response.order.DishDetail.DishType} value\n * @return {!proto.syncDish.SyncDish} returns this\n */\nproto.syncDish.SyncDish.prototype.setDishType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 4, value);\n};\n\n\n/**\n * optional SyncDishCategory dish_category = 5;\n * @return {?proto.syncDish.SyncDishCategory}\n */\nproto.syncDish.SyncDish.prototype.getDishCategory = function() {\n  return /** @type{?proto.syncDish.SyncDishCategory} */ (\n    jspb.Message.getWrapperField(this, proto.syncDish.SyncDishCategory, 5));\n};\n\n\n/**\n * @param {?proto.syncDish.SyncDishCategory|undefined} value\n * @return {!proto.syncDish.SyncDish} returns this\n*/\nproto.syncDish.SyncDish.prototype.setDishCategory = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.syncDish.SyncDish} returns this\n */\nproto.syncDish.SyncDish.prototype.clearDishCategory = function() {\n  return this.setDishCategory(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.syncDish.SyncDish.prototype.hasDishCategory = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional string sync_date = 6;\n * @return {string}\n */\nproto.syncDish.SyncDish.prototype.getSyncDate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.SyncDish} returns this\n */\nproto.syncDish.SyncDish.prototype.setSyncDate = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * repeated merchant.Merchant merchants = 7;\n * @return {!Array<!proto.merchant.Merchant>}\n */\nproto.syncDish.SyncDish.prototype.getMerchantsList = function() {\n  return /** @type{!Array<!proto.merchant.Merchant>} */ (\n    jspb.Message.getRepeatedWrapperField(this, merchant_pb.Merchant, 7));\n};\n\n\n/**\n * @param {!Array<!proto.merchant.Merchant>} value\n * @return {!proto.syncDish.SyncDish} returns this\n*/\nproto.syncDish.SyncDish.prototype.setMerchantsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.merchant.Merchant=} opt_value\n * @param {number=} opt_index\n * @return {!proto.merchant.Merchant}\n */\nproto.syncDish.SyncDish.prototype.addMerchants = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.merchant.Merchant, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.syncDish.SyncDish} returns this\n */\nproto.syncDish.SyncDish.prototype.clearMerchantsList = function() {\n  return this.setMerchantsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.syncDish.GetSyncDishCategoriesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.syncDish.GetSyncDishCategoriesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.syncDish.GetSyncDishCategoriesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.GetSyncDishCategoriesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.syncDish.GetSyncDishCategoriesRequest}\n */\nproto.syncDish.GetSyncDishCategoriesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.syncDish.GetSyncDishCategoriesRequest;\n  return proto.syncDish.GetSyncDishCategoriesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.syncDish.GetSyncDishCategoriesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.syncDish.GetSyncDishCategoriesRequest}\n */\nproto.syncDish.GetSyncDishCategoriesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.syncDish.GetSyncDishCategoriesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.syncDish.GetSyncDishCategoriesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.syncDish.GetSyncDishCategoriesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.GetSyncDishCategoriesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string brand_id = 1;\n * @return {string}\n */\nproto.syncDish.GetSyncDishCategoriesRequest.prototype.getBrandId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.GetSyncDishCategoriesRequest} returns this\n */\nproto.syncDish.GetSyncDishCategoriesRequest.prototype.setBrandId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.syncDish.GetSyncDishCategoriesResponse.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.syncDish.GetSyncDishCategoriesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.syncDish.GetSyncDishCategoriesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.syncDish.GetSyncDishCategoriesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.GetSyncDishCategoriesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    syncDishCategoriesList: jspb.Message.toObjectList(msg.getSyncDishCategoriesList(),\n    proto.syncDish.SyncDishCategory.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.syncDish.GetSyncDishCategoriesResponse}\n */\nproto.syncDish.GetSyncDishCategoriesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.syncDish.GetSyncDishCategoriesResponse;\n  return proto.syncDish.GetSyncDishCategoriesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.syncDish.GetSyncDishCategoriesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.syncDish.GetSyncDishCategoriesResponse}\n */\nproto.syncDish.GetSyncDishCategoriesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.syncDish.SyncDishCategory;\n      reader.readMessage(value,proto.syncDish.SyncDishCategory.deserializeBinaryFromReader);\n      msg.addSyncDishCategories(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.syncDish.GetSyncDishCategoriesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.syncDish.GetSyncDishCategoriesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.syncDish.GetSyncDishCategoriesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.GetSyncDishCategoriesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getSyncDishCategoriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.syncDish.SyncDishCategory.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.syncDish.GetSyncDishCategoriesResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.syncDish.GetSyncDishCategoriesResponse} returns this\n */\nproto.syncDish.GetSyncDishCategoriesResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.syncDish.GetSyncDishCategoriesResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.GetSyncDishCategoriesResponse} returns this\n */\nproto.syncDish.GetSyncDishCategoriesResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated SyncDishCategory sync_dish_categories = 3;\n * @return {!Array<!proto.syncDish.SyncDishCategory>}\n */\nproto.syncDish.GetSyncDishCategoriesResponse.prototype.getSyncDishCategoriesList = function() {\n  return /** @type{!Array<!proto.syncDish.SyncDishCategory>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.syncDish.SyncDishCategory, 3));\n};\n\n\n/**\n * @param {!Array<!proto.syncDish.SyncDishCategory>} value\n * @return {!proto.syncDish.GetSyncDishCategoriesResponse} returns this\n*/\nproto.syncDish.GetSyncDishCategoriesResponse.prototype.setSyncDishCategoriesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.syncDish.SyncDishCategory=} opt_value\n * @param {number=} opt_index\n * @return {!proto.syncDish.SyncDishCategory}\n */\nproto.syncDish.GetSyncDishCategoriesResponse.prototype.addSyncDishCategories = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.syncDish.SyncDishCategory, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.syncDish.GetSyncDishCategoriesResponse} returns this\n */\nproto.syncDish.GetSyncDishCategoriesResponse.prototype.clearSyncDishCategoriesList = function() {\n  return this.setSyncDishCategoriesList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.syncDish.GetSyncDishesRequest.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.syncDish.GetSyncDishesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.syncDish.GetSyncDishesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.syncDish.GetSyncDishesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.GetSyncDishesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    page: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    searchText: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    merchantIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,\n    brandId: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    dishType: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    categoryName: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    fromSyncDate: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    toSyncDate: jspb.Message.getFieldWithDefault(msg, 9, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.syncDish.GetSyncDishesRequest}\n */\nproto.syncDish.GetSyncDishesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.syncDish.GetSyncDishesRequest;\n  return proto.syncDish.GetSyncDishesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.syncDish.GetSyncDishesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.syncDish.GetSyncDishesRequest}\n */\nproto.syncDish.GetSyncDishesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPage(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSearchText(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addMerchantIds(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandId(value);\n      break;\n    case 6:\n      var value = /** @type {!proto.mmenu.response.order.DishDetail.DishType} */ (reader.readEnum());\n      msg.setDishType(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCategoryName(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFromSyncDate(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToSyncDate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.syncDish.GetSyncDishesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.syncDish.GetSyncDishesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.syncDish.GetSyncDishesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.GetSyncDishesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPage();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getSearchText();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getMerchantIdsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      4,\n      f\n    );\n  }\n  f = message.getBrandId();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getDishType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      6,\n      f\n    );\n  }\n  f = message.getCategoryName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getFromSyncDate();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getToSyncDate();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 page = 1;\n * @return {number}\n */\nproto.syncDish.GetSyncDishesRequest.prototype.getPage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.syncDish.GetSyncDishesRequest} returns this\n */\nproto.syncDish.GetSyncDishesRequest.prototype.setPage = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 limit = 2;\n * @return {number}\n */\nproto.syncDish.GetSyncDishesRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.syncDish.GetSyncDishesRequest} returns this\n */\nproto.syncDish.GetSyncDishesRequest.prototype.setLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string search_text = 3;\n * @return {string}\n */\nproto.syncDish.GetSyncDishesRequest.prototype.getSearchText = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.GetSyncDishesRequest} returns this\n */\nproto.syncDish.GetSyncDishesRequest.prototype.setSearchText = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * repeated string merchant_ids = 4;\n * @return {!Array<string>}\n */\nproto.syncDish.GetSyncDishesRequest.prototype.getMerchantIdsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.syncDish.GetSyncDishesRequest} returns this\n */\nproto.syncDish.GetSyncDishesRequest.prototype.setMerchantIdsList = function(value) {\n  return jspb.Message.setField(this, 4, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.syncDish.GetSyncDishesRequest} returns this\n */\nproto.syncDish.GetSyncDishesRequest.prototype.addMerchantIds = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.syncDish.GetSyncDishesRequest} returns this\n */\nproto.syncDish.GetSyncDishesRequest.prototype.clearMerchantIdsList = function() {\n  return this.setMerchantIdsList([]);\n};\n\n\n/**\n * optional string brand_id = 5;\n * @return {string}\n */\nproto.syncDish.GetSyncDishesRequest.prototype.getBrandId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.GetSyncDishesRequest} returns this\n */\nproto.syncDish.GetSyncDishesRequest.prototype.setBrandId = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional mmenu.response.order.DishDetail.DishType dish_type = 6;\n * @return {!proto.mmenu.response.order.DishDetail.DishType}\n */\nproto.syncDish.GetSyncDishesRequest.prototype.getDishType = function() {\n  return /** @type {!proto.mmenu.response.order.DishDetail.DishType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {!proto.mmenu.response.order.DishDetail.DishType} value\n * @return {!proto.syncDish.GetSyncDishesRequest} returns this\n */\nproto.syncDish.GetSyncDishesRequest.prototype.setDishType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 6, value);\n};\n\n\n/**\n * optional string category_name = 7;\n * @return {string}\n */\nproto.syncDish.GetSyncDishesRequest.prototype.getCategoryName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.GetSyncDishesRequest} returns this\n */\nproto.syncDish.GetSyncDishesRequest.prototype.setCategoryName = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional string from_sync_date = 8;\n * @return {string}\n */\nproto.syncDish.GetSyncDishesRequest.prototype.getFromSyncDate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.GetSyncDishesRequest} returns this\n */\nproto.syncDish.GetSyncDishesRequest.prototype.setFromSyncDate = function(value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n/**\n * optional string to_sync_date = 9;\n * @return {string}\n */\nproto.syncDish.GetSyncDishesRequest.prototype.getToSyncDate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.GetSyncDishesRequest} returns this\n */\nproto.syncDish.GetSyncDishesRequest.prototype.setToSyncDate = function(value) {\n  return jspb.Message.setProto3StringField(this, 9, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.syncDish.GetSyncDishesResponse.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.syncDish.GetSyncDishesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.syncDish.GetSyncDishesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.syncDish.GetSyncDishesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.GetSyncDishesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    syncDishesList: jspb.Message.toObjectList(msg.getSyncDishesList(),\n    proto.syncDish.SyncDish.toObject, includeInstance),\n    pagination: (f = msg.getPagination()) && common_pb.PaginationResponse.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.syncDish.GetSyncDishesResponse}\n */\nproto.syncDish.GetSyncDishesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.syncDish.GetSyncDishesResponse;\n  return proto.syncDish.GetSyncDishesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.syncDish.GetSyncDishesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.syncDish.GetSyncDishesResponse}\n */\nproto.syncDish.GetSyncDishesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.syncDish.SyncDish;\n      reader.readMessage(value,proto.syncDish.SyncDish.deserializeBinaryFromReader);\n      msg.addSyncDishes(value);\n      break;\n    case 4:\n      var value = new common_pb.PaginationResponse;\n      reader.readMessage(value,common_pb.PaginationResponse.deserializeBinaryFromReader);\n      msg.setPagination(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.syncDish.GetSyncDishesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.syncDish.GetSyncDishesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.syncDish.GetSyncDishesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.GetSyncDishesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getSyncDishesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.syncDish.SyncDish.serializeBinaryToWriter\n    );\n  }\n  f = message.getPagination();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      common_pb.PaginationResponse.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.syncDish.GetSyncDishesResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.syncDish.GetSyncDishesResponse} returns this\n */\nproto.syncDish.GetSyncDishesResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.syncDish.GetSyncDishesResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.GetSyncDishesResponse} returns this\n */\nproto.syncDish.GetSyncDishesResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated SyncDish sync_dishes = 3;\n * @return {!Array<!proto.syncDish.SyncDish>}\n */\nproto.syncDish.GetSyncDishesResponse.prototype.getSyncDishesList = function() {\n  return /** @type{!Array<!proto.syncDish.SyncDish>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.syncDish.SyncDish, 3));\n};\n\n\n/**\n * @param {!Array<!proto.syncDish.SyncDish>} value\n * @return {!proto.syncDish.GetSyncDishesResponse} returns this\n*/\nproto.syncDish.GetSyncDishesResponse.prototype.setSyncDishesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.syncDish.SyncDish=} opt_value\n * @param {number=} opt_index\n * @return {!proto.syncDish.SyncDish}\n */\nproto.syncDish.GetSyncDishesResponse.prototype.addSyncDishes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.syncDish.SyncDish, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.syncDish.GetSyncDishesResponse} returns this\n */\nproto.syncDish.GetSyncDishesResponse.prototype.clearSyncDishesList = function() {\n  return this.setSyncDishesList([]);\n};\n\n\n/**\n * optional common.PaginationResponse pagination = 4;\n * @return {?proto.common.PaginationResponse}\n */\nproto.syncDish.GetSyncDishesResponse.prototype.getPagination = function() {\n  return /** @type{?proto.common.PaginationResponse} */ (\n    jspb.Message.getWrapperField(this, common_pb.PaginationResponse, 4));\n};\n\n\n/**\n * @param {?proto.common.PaginationResponse|undefined} value\n * @return {!proto.syncDish.GetSyncDishesResponse} returns this\n*/\nproto.syncDish.GetSyncDishesResponse.prototype.setPagination = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.syncDish.GetSyncDishesResponse} returns this\n */\nproto.syncDish.GetSyncDishesResponse.prototype.clearPagination = function() {\n  return this.setPagination(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.syncDish.GetSyncDishesResponse.prototype.hasPagination = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.syncDish.CheckSyncDishesRequest.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.syncDish.CheckSyncDishesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.syncDish.CheckSyncDishesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.syncDish.CheckSyncDishesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.CheckSyncDishesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    merchantIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.syncDish.CheckSyncDishesRequest}\n */\nproto.syncDish.CheckSyncDishesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.syncDish.CheckSyncDishesRequest;\n  return proto.syncDish.CheckSyncDishesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.syncDish.CheckSyncDishesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.syncDish.CheckSyncDishesRequest}\n */\nproto.syncDish.CheckSyncDishesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addMerchantIds(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.syncDish.CheckSyncDishesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.syncDish.CheckSyncDishesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.syncDish.CheckSyncDishesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.CheckSyncDishesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getMerchantIdsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string brand_id = 1;\n * @return {string}\n */\nproto.syncDish.CheckSyncDishesRequest.prototype.getBrandId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.CheckSyncDishesRequest} returns this\n */\nproto.syncDish.CheckSyncDishesRequest.prototype.setBrandId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated string merchant_ids = 2;\n * @return {!Array<string>}\n */\nproto.syncDish.CheckSyncDishesRequest.prototype.getMerchantIdsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.syncDish.CheckSyncDishesRequest} returns this\n */\nproto.syncDish.CheckSyncDishesRequest.prototype.setMerchantIdsList = function(value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.syncDish.CheckSyncDishesRequest} returns this\n */\nproto.syncDish.CheckSyncDishesRequest.prototype.addMerchantIds = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.syncDish.CheckSyncDishesRequest} returns this\n */\nproto.syncDish.CheckSyncDishesRequest.prototype.clearMerchantIdsList = function() {\n  return this.setMerchantIdsList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.syncDish.CheckSyncDishesResponse.repeatedFields_ = [3,4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.syncDish.CheckSyncDishesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.syncDish.CheckSyncDishesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.syncDish.CheckSyncDishesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.CheckSyncDishesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    validDishesList: jspb.Message.toObjectList(msg.getValidDishesList(),\n    proto.syncDish.SyncDish.toObject, includeInstance),\n    invalidDishesList: jspb.Message.toObjectList(msg.getInvalidDishesList(),\n    proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.syncDish.CheckSyncDishesResponse}\n */\nproto.syncDish.CheckSyncDishesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.syncDish.CheckSyncDishesResponse;\n  return proto.syncDish.CheckSyncDishesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.syncDish.CheckSyncDishesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.syncDish.CheckSyncDishesResponse}\n */\nproto.syncDish.CheckSyncDishesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.syncDish.SyncDish;\n      reader.readMessage(value,proto.syncDish.SyncDish.deserializeBinaryFromReader);\n      msg.addValidDishes(value);\n      break;\n    case 4:\n      var value = new proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish;\n      reader.readMessage(value,proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.deserializeBinaryFromReader);\n      msg.addInvalidDishes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.syncDish.CheckSyncDishesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.syncDish.CheckSyncDishesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.syncDish.CheckSyncDishesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.CheckSyncDishesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getValidDishesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.syncDish.SyncDish.serializeBinaryToWriter\n    );\n  }\n  f = message.getInvalidDishesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.toObject = function(opt_includeInstance) {\n  return proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    syncDish: (f = msg.getSyncDish()) && proto.syncDish.SyncDish.toObject(includeInstance, f),\n    namesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish}\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish;\n  return proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish}\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.syncDish.SyncDish;\n      reader.readMessage(value,proto.syncDish.SyncDish.deserializeBinaryFromReader);\n      msg.setSyncDish(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addNames(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSyncDish();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.syncDish.SyncDish.serializeBinaryToWriter\n    );\n  }\n  f = message.getNamesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional SyncDish sync_dish = 1;\n * @return {?proto.syncDish.SyncDish}\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.getSyncDish = function() {\n  return /** @type{?proto.syncDish.SyncDish} */ (\n    jspb.Message.getWrapperField(this, proto.syncDish.SyncDish, 1));\n};\n\n\n/**\n * @param {?proto.syncDish.SyncDish|undefined} value\n * @return {!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish} returns this\n*/\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.setSyncDish = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish} returns this\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.clearSyncDish = function() {\n  return this.setSyncDish(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.hasSyncDish = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated string names = 2;\n * @return {!Array<string>}\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.getNamesList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish} returns this\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.setNamesList = function(value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish} returns this\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.addNames = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish} returns this\n */\nproto.syncDish.CheckSyncDishesResponse.InvalidSyncDish.prototype.clearNamesList = function() {\n  return this.setNamesList([]);\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.syncDish.CheckSyncDishesResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.syncDish.CheckSyncDishesResponse} returns this\n */\nproto.syncDish.CheckSyncDishesResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.syncDish.CheckSyncDishesResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.CheckSyncDishesResponse} returns this\n */\nproto.syncDish.CheckSyncDishesResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated SyncDish valid_dishes = 3;\n * @return {!Array<!proto.syncDish.SyncDish>}\n */\nproto.syncDish.CheckSyncDishesResponse.prototype.getValidDishesList = function() {\n  return /** @type{!Array<!proto.syncDish.SyncDish>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.syncDish.SyncDish, 3));\n};\n\n\n/**\n * @param {!Array<!proto.syncDish.SyncDish>} value\n * @return {!proto.syncDish.CheckSyncDishesResponse} returns this\n*/\nproto.syncDish.CheckSyncDishesResponse.prototype.setValidDishesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.syncDish.SyncDish=} opt_value\n * @param {number=} opt_index\n * @return {!proto.syncDish.SyncDish}\n */\nproto.syncDish.CheckSyncDishesResponse.prototype.addValidDishes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.syncDish.SyncDish, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.syncDish.CheckSyncDishesResponse} returns this\n */\nproto.syncDish.CheckSyncDishesResponse.prototype.clearValidDishesList = function() {\n  return this.setValidDishesList([]);\n};\n\n\n/**\n * repeated InvalidSyncDish invalid_dishes = 4;\n * @return {!Array<!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish>}\n */\nproto.syncDish.CheckSyncDishesResponse.prototype.getInvalidDishesList = function() {\n  return /** @type{!Array<!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish, 4));\n};\n\n\n/**\n * @param {!Array<!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish>} value\n * @return {!proto.syncDish.CheckSyncDishesResponse} returns this\n*/\nproto.syncDish.CheckSyncDishesResponse.prototype.setInvalidDishesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish=} opt_value\n * @param {number=} opt_index\n * @return {!proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish}\n */\nproto.syncDish.CheckSyncDishesResponse.prototype.addInvalidDishes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.syncDish.CheckSyncDishesResponse.InvalidSyncDish, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.syncDish.CheckSyncDishesResponse} returns this\n */\nproto.syncDish.CheckSyncDishesResponse.prototype.clearInvalidDishesList = function() {\n  return this.setInvalidDishesList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.syncDish.ConfirmSyncDishesRequest.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.syncDish.ConfirmSyncDishesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.syncDish.ConfirmSyncDishesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.syncDish.ConfirmSyncDishesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.ConfirmSyncDishesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    validDishesList: jspb.Message.toObjectList(msg.getValidDishesList(),\n    proto.syncDish.SyncDish.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.syncDish.ConfirmSyncDishesRequest}\n */\nproto.syncDish.ConfirmSyncDishesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.syncDish.ConfirmSyncDishesRequest;\n  return proto.syncDish.ConfirmSyncDishesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.syncDish.ConfirmSyncDishesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.syncDish.ConfirmSyncDishesRequest}\n */\nproto.syncDish.ConfirmSyncDishesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandId(value);\n      break;\n    case 2:\n      var value = new proto.syncDish.SyncDish;\n      reader.readMessage(value,proto.syncDish.SyncDish.deserializeBinaryFromReader);\n      msg.addValidDishes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.syncDish.ConfirmSyncDishesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.syncDish.ConfirmSyncDishesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.syncDish.ConfirmSyncDishesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.ConfirmSyncDishesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValidDishesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.syncDish.SyncDish.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string brand_id = 1;\n * @return {string}\n */\nproto.syncDish.ConfirmSyncDishesRequest.prototype.getBrandId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.ConfirmSyncDishesRequest} returns this\n */\nproto.syncDish.ConfirmSyncDishesRequest.prototype.setBrandId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated SyncDish valid_dishes = 2;\n * @return {!Array<!proto.syncDish.SyncDish>}\n */\nproto.syncDish.ConfirmSyncDishesRequest.prototype.getValidDishesList = function() {\n  return /** @type{!Array<!proto.syncDish.SyncDish>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.syncDish.SyncDish, 2));\n};\n\n\n/**\n * @param {!Array<!proto.syncDish.SyncDish>} value\n * @return {!proto.syncDish.ConfirmSyncDishesRequest} returns this\n*/\nproto.syncDish.ConfirmSyncDishesRequest.prototype.setValidDishesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.syncDish.SyncDish=} opt_value\n * @param {number=} opt_index\n * @return {!proto.syncDish.SyncDish}\n */\nproto.syncDish.ConfirmSyncDishesRequest.prototype.addValidDishes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.syncDish.SyncDish, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.syncDish.ConfirmSyncDishesRequest} returns this\n */\nproto.syncDish.ConfirmSyncDishesRequest.prototype.clearValidDishesList = function() {\n  return this.setValidDishesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.syncDish.ConfirmSyncDishesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.syncDish.ConfirmSyncDishesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.syncDish.ConfirmSyncDishesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.ConfirmSyncDishesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    numberOfDishesSuccessSync: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.syncDish.ConfirmSyncDishesResponse}\n */\nproto.syncDish.ConfirmSyncDishesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.syncDish.ConfirmSyncDishesResponse;\n  return proto.syncDish.ConfirmSyncDishesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.syncDish.ConfirmSyncDishesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.syncDish.ConfirmSyncDishesResponse}\n */\nproto.syncDish.ConfirmSyncDishesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumberOfDishesSuccessSync(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.syncDish.ConfirmSyncDishesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.syncDish.ConfirmSyncDishesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.syncDish.ConfirmSyncDishesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.syncDish.ConfirmSyncDishesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getNumberOfDishesSuccessSync();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.syncDish.ConfirmSyncDishesResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.syncDish.ConfirmSyncDishesResponse} returns this\n */\nproto.syncDish.ConfirmSyncDishesResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.syncDish.ConfirmSyncDishesResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.syncDish.ConfirmSyncDishesResponse} returns this\n */\nproto.syncDish.ConfirmSyncDishesResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int32 number_of_dishes_success_sync = 3;\n * @return {number}\n */\nproto.syncDish.ConfirmSyncDishesResponse.prototype.getNumberOfDishesSuccessSync = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.syncDish.ConfirmSyncDishesResponse} returns this\n */\nproto.syncDish.ConfirmSyncDishesResponse.prototype.setNumberOfDishesSuccessSync = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\ngoog.object.extend(exports, proto.syncDish);\n"],
  "mappings": "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",
  "names": []
}
