import {
  require_cdpUser_pb
} from "./chunk-PPUYTHGI.js";
import {
  require_grpc_web
} from "./chunk-QG4XEIKX.js";
import "./chunk-SZ7F7SCX.js";
import "./chunk-RB4XWN7V.js";
import {
  __publicField,
  __toESM
} from "./chunk-EWTE5DHJ.js";

// node_modules/grpc-web-client-gen/CdpUserServiceClientPb.ts
var grpcWeb = __toESM(require_grpc_web());
var cdpUser_pb = __toESM(require_cdpUser_pb());
var UserRoutesClient = class {
  constructor(hostname, credentials, options) {
    __publicField(this, "client_");
    __publicField(this, "hostname_");
    __publicField(this, "credentials_");
    __publicField(this, "options_");
    __publicField(this, "methodDescriptorCreateOrUpdateUser", new grpcWeb.MethodDescriptor(
      "/cdpUser.UserRoutes/CreateOrUpdateUser",
      grpcWeb.MethodType.UNARY,
      cdpUser_pb.CreateOrUpdateUserRequest,
      cdpUser_pb.CreateOrUpdateUserResponse,
      (request) => {
        return request.serializeBinary();
      },
      cdpUser_pb.CreateOrUpdateUserResponse.deserializeBinary
    ));
    __publicField(this, "methodDescriptorGetAllUsers", new grpcWeb.MethodDescriptor(
      "/cdpUser.UserRoutes/GetAllUsers",
      grpcWeb.MethodType.UNARY,
      cdpUser_pb.GetAllUsersRequest,
      cdpUser_pb.GetAllUsersResponse,
      (request) => {
        return request.serializeBinary();
      },
      cdpUser_pb.GetAllUsersResponse.deserializeBinary
    ));
    __publicField(this, "methodDescriptorGetUserById", new grpcWeb.MethodDescriptor(
      "/cdpUser.UserRoutes/GetUserById",
      grpcWeb.MethodType.UNARY,
      cdpUser_pb.GetUserByIdRequest,
      cdpUser_pb.GetUserByIdResponse,
      (request) => {
        return request.serializeBinary();
      },
      cdpUser_pb.GetUserByIdResponse.deserializeBinary
    ));
    __publicField(this, "methodDescriptorResetUserPassword", new grpcWeb.MethodDescriptor(
      "/cdpUser.UserRoutes/ResetUserPassword",
      grpcWeb.MethodType.UNARY,
      cdpUser_pb.ResetUserPasswordRequest,
      cdpUser_pb.ResetUserPasswordResponse,
      (request) => {
        return request.serializeBinary();
      },
      cdpUser_pb.ResetUserPasswordResponse.deserializeBinary
    ));
    if (!options) options = {};
    if (!credentials) credentials = {};
    options["format"] = "text";
    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, "");
    this.credentials_ = credentials;
    this.options_ = options;
  }
  createOrUpdateUser(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/cdpUser.UserRoutes/CreateOrUpdateUser",
        request,
        metadata || {},
        this.methodDescriptorCreateOrUpdateUser,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/cdpUser.UserRoutes/CreateOrUpdateUser",
      request,
      metadata || {},
      this.methodDescriptorCreateOrUpdateUser
    );
  }
  getAllUsers(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/cdpUser.UserRoutes/GetAllUsers",
        request,
        metadata || {},
        this.methodDescriptorGetAllUsers,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/cdpUser.UserRoutes/GetAllUsers",
      request,
      metadata || {},
      this.methodDescriptorGetAllUsers
    );
  }
  getUserById(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/cdpUser.UserRoutes/GetUserById",
        request,
        metadata || {},
        this.methodDescriptorGetUserById,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/cdpUser.UserRoutes/GetUserById",
      request,
      metadata || {},
      this.methodDescriptorGetUserById
    );
  }
  resetUserPassword(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/cdpUser.UserRoutes/ResetUserPassword",
        request,
        metadata || {},
        this.methodDescriptorResetUserPassword,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/cdpUser.UserRoutes/ResetUserPassword",
      request,
      metadata || {},
      this.methodDescriptorResetUserPassword
    );
  }
};
export {
  UserRoutesClient
};
//# sourceMappingURL=grpc-web-client-gen_CdpUserServiceClientPb.js.map
