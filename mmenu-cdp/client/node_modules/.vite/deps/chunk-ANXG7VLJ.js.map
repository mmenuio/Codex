{
  "version": 3,
  "sources": ["../../grpc-web-client-gen/merchant_pb.js"],
  "sourcesContent": ["// source: merchant.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() {\n  if (this) { return this; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  if (typeof self !== 'undefined') { return self; }\n  return Function('return this')();\n}.call(null));\n\nvar common_pb = require('./common_pb.js');\ngoog.object.extend(proto, common_pb);\ngoog.exportSymbol('proto.merchant.CreateOrUpdateMerchantRequest', null, global);\ngoog.exportSymbol('proto.merchant.CreateOrUpdateMerchantResponse', null, global);\ngoog.exportSymbol('proto.merchant.DeleteMerchantByIdRequest', null, global);\ngoog.exportSymbol('proto.merchant.DeleteMerchantByIdResponse', null, global);\ngoog.exportSymbol('proto.merchant.GetMerchantByIdRequest', null, global);\ngoog.exportSymbol('proto.merchant.GetMerchantByIdResponse', null, global);\ngoog.exportSymbol('proto.merchant.GetMerchantsByBrandIdRequest', null, global);\ngoog.exportSymbol('proto.merchant.GetMerchantsByBrandIdResponse', null, global);\ngoog.exportSymbol('proto.merchant.Merchant', null, global);\ngoog.exportSymbol('proto.merchant.MerchantsBrand', null, global);\ngoog.exportSymbol('proto.merchant.ThirdPartyMerchantInfos', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.merchant.MerchantsBrand = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.merchant.MerchantsBrand, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.merchant.MerchantsBrand.displayName = 'proto.merchant.MerchantsBrand';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.merchant.ThirdPartyMerchantInfos = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.merchant.ThirdPartyMerchantInfos, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.merchant.ThirdPartyMerchantInfos.displayName = 'proto.merchant.ThirdPartyMerchantInfos';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.merchant.Merchant = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.merchant.Merchant.repeatedFields_, null);\n};\ngoog.inherits(proto.merchant.Merchant, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.merchant.Merchant.displayName = 'proto.merchant.Merchant';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.merchant.CreateOrUpdateMerchantRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.merchant.CreateOrUpdateMerchantRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.merchant.CreateOrUpdateMerchantRequest.displayName = 'proto.merchant.CreateOrUpdateMerchantRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.merchant.CreateOrUpdateMerchantResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.merchant.CreateOrUpdateMerchantResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.merchant.CreateOrUpdateMerchantResponse.displayName = 'proto.merchant.CreateOrUpdateMerchantResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.merchant.GetMerchantByIdRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.merchant.GetMerchantByIdRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.merchant.GetMerchantByIdRequest.displayName = 'proto.merchant.GetMerchantByIdRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.merchant.GetMerchantByIdResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.merchant.GetMerchantByIdResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.merchant.GetMerchantByIdResponse.displayName = 'proto.merchant.GetMerchantByIdResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.merchant.GetMerchantsByBrandIdRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.merchant.GetMerchantsByBrandIdRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.merchant.GetMerchantsByBrandIdRequest.displayName = 'proto.merchant.GetMerchantsByBrandIdRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.merchant.GetMerchantsByBrandIdResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.merchant.GetMerchantsByBrandIdResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.merchant.GetMerchantsByBrandIdResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.merchant.GetMerchantsByBrandIdResponse.displayName = 'proto.merchant.GetMerchantsByBrandIdResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.merchant.DeleteMerchantByIdRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.merchant.DeleteMerchantByIdRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.merchant.DeleteMerchantByIdRequest.displayName = 'proto.merchant.DeleteMerchantByIdRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.merchant.DeleteMerchantByIdResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.merchant.DeleteMerchantByIdResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.merchant.DeleteMerchantByIdResponse.displayName = 'proto.merchant.DeleteMerchantByIdResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.merchant.MerchantsBrand.prototype.toObject = function(opt_includeInstance) {\n  return proto.merchant.MerchantsBrand.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.merchant.MerchantsBrand} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.MerchantsBrand.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    brandCode: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    brandName: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.merchant.MerchantsBrand}\n */\nproto.merchant.MerchantsBrand.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.merchant.MerchantsBrand;\n  return proto.merchant.MerchantsBrand.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.merchant.MerchantsBrand} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.merchant.MerchantsBrand}\n */\nproto.merchant.MerchantsBrand.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandCode(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.merchant.MerchantsBrand.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.merchant.MerchantsBrand.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.merchant.MerchantsBrand} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.MerchantsBrand.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getBrandCode();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getBrandName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string brand_id = 1;\n * @return {string}\n */\nproto.merchant.MerchantsBrand.prototype.getBrandId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.MerchantsBrand} returns this\n */\nproto.merchant.MerchantsBrand.prototype.setBrandId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string brand_code = 2;\n * @return {string}\n */\nproto.merchant.MerchantsBrand.prototype.getBrandCode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.MerchantsBrand} returns this\n */\nproto.merchant.MerchantsBrand.prototype.setBrandCode = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string brand_name = 3;\n * @return {string}\n */\nproto.merchant.MerchantsBrand.prototype.getBrandName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.MerchantsBrand} returns this\n */\nproto.merchant.MerchantsBrand.prototype.setBrandName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.merchant.ThirdPartyMerchantInfos.prototype.toObject = function(opt_includeInstance) {\n  return proto.merchant.ThirdPartyMerchantInfos.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.merchant.ThirdPartyMerchantInfos} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.ThirdPartyMerchantInfos.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    merchantid: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.merchant.ThirdPartyMerchantInfos}\n */\nproto.merchant.ThirdPartyMerchantInfos.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.merchant.ThirdPartyMerchantInfos;\n  return proto.merchant.ThirdPartyMerchantInfos.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.merchant.ThirdPartyMerchantInfos} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.merchant.ThirdPartyMerchantInfos}\n */\nproto.merchant.ThirdPartyMerchantInfos.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.common.ThirdPartyName} */ (reader.readEnum());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMerchantid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.merchant.ThirdPartyMerchantInfos.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.merchant.ThirdPartyMerchantInfos.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.merchant.ThirdPartyMerchantInfos} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.ThirdPartyMerchantInfos.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getMerchantid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional common.ThirdPartyName name = 1;\n * @return {!proto.common.ThirdPartyName}\n */\nproto.merchant.ThirdPartyMerchantInfos.prototype.getName = function() {\n  return /** @type {!proto.common.ThirdPartyName} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.common.ThirdPartyName} value\n * @return {!proto.merchant.ThirdPartyMerchantInfos} returns this\n */\nproto.merchant.ThirdPartyMerchantInfos.prototype.setName = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional string merchantId = 2;\n * @return {string}\n */\nproto.merchant.ThirdPartyMerchantInfos.prototype.getMerchantid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.ThirdPartyMerchantInfos} returns this\n */\nproto.merchant.ThirdPartyMerchantInfos.prototype.setMerchantid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.merchant.Merchant.repeatedFields_ = [5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.merchant.Merchant.prototype.toObject = function(opt_includeInstance) {\n  return proto.merchant.Merchant.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.merchant.Merchant} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.Merchant.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    code: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    brand: (f = msg.getBrand()) && proto.merchant.MerchantsBrand.toObject(includeInstance, f),\n    thirdpartymerchantinfosList: jspb.Message.toObjectList(msg.getThirdpartymerchantinfosList(),\n    proto.merchant.ThirdPartyMerchantInfos.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.merchant.Merchant}\n */\nproto.merchant.Merchant.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.merchant.Merchant;\n  return proto.merchant.Merchant.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.merchant.Merchant} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.merchant.Merchant}\n */\nproto.merchant.Merchant.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCode(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 4:\n      var value = new proto.merchant.MerchantsBrand;\n      reader.readMessage(value,proto.merchant.MerchantsBrand.deserializeBinaryFromReader);\n      msg.setBrand(value);\n      break;\n    case 5:\n      var value = new proto.merchant.ThirdPartyMerchantInfos;\n      reader.readMessage(value,proto.merchant.ThirdPartyMerchantInfos.deserializeBinaryFromReader);\n      msg.addThirdpartymerchantinfos(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.merchant.Merchant.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.merchant.Merchant.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.merchant.Merchant} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.Merchant.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCode();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getBrand();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.merchant.MerchantsBrand.serializeBinaryToWriter\n    );\n  }\n  f = message.getThirdpartymerchantinfosList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.merchant.ThirdPartyMerchantInfos.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.merchant.Merchant.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.Merchant} returns this\n */\nproto.merchant.Merchant.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string code = 2;\n * @return {string}\n */\nproto.merchant.Merchant.prototype.getCode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.Merchant} returns this\n */\nproto.merchant.Merchant.prototype.setCode = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.merchant.Merchant.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.Merchant} returns this\n */\nproto.merchant.Merchant.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional MerchantsBrand brand = 4;\n * @return {?proto.merchant.MerchantsBrand}\n */\nproto.merchant.Merchant.prototype.getBrand = function() {\n  return /** @type{?proto.merchant.MerchantsBrand} */ (\n    jspb.Message.getWrapperField(this, proto.merchant.MerchantsBrand, 4));\n};\n\n\n/**\n * @param {?proto.merchant.MerchantsBrand|undefined} value\n * @return {!proto.merchant.Merchant} returns this\n*/\nproto.merchant.Merchant.prototype.setBrand = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.merchant.Merchant} returns this\n */\nproto.merchant.Merchant.prototype.clearBrand = function() {\n  return this.setBrand(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.merchant.Merchant.prototype.hasBrand = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * repeated ThirdPartyMerchantInfos thirdPartyMerchantInfos = 5;\n * @return {!Array<!proto.merchant.ThirdPartyMerchantInfos>}\n */\nproto.merchant.Merchant.prototype.getThirdpartymerchantinfosList = function() {\n  return /** @type{!Array<!proto.merchant.ThirdPartyMerchantInfos>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.merchant.ThirdPartyMerchantInfos, 5));\n};\n\n\n/**\n * @param {!Array<!proto.merchant.ThirdPartyMerchantInfos>} value\n * @return {!proto.merchant.Merchant} returns this\n*/\nproto.merchant.Merchant.prototype.setThirdpartymerchantinfosList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.merchant.ThirdPartyMerchantInfos=} opt_value\n * @param {number=} opt_index\n * @return {!proto.merchant.ThirdPartyMerchantInfos}\n */\nproto.merchant.Merchant.prototype.addThirdpartymerchantinfos = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.merchant.ThirdPartyMerchantInfos, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.merchant.Merchant} returns this\n */\nproto.merchant.Merchant.prototype.clearThirdpartymerchantinfosList = function() {\n  return this.setThirdpartymerchantinfosList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.merchant.CreateOrUpdateMerchantRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.merchant.CreateOrUpdateMerchantRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.merchant.CreateOrUpdateMerchantRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.CreateOrUpdateMerchantRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    merchantId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    merchant: (f = msg.getMerchant()) && proto.merchant.Merchant.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.merchant.CreateOrUpdateMerchantRequest}\n */\nproto.merchant.CreateOrUpdateMerchantRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.merchant.CreateOrUpdateMerchantRequest;\n  return proto.merchant.CreateOrUpdateMerchantRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.merchant.CreateOrUpdateMerchantRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.merchant.CreateOrUpdateMerchantRequest}\n */\nproto.merchant.CreateOrUpdateMerchantRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMerchantId(value);\n      break;\n    case 2:\n      var value = new proto.merchant.Merchant;\n      reader.readMessage(value,proto.merchant.Merchant.deserializeBinaryFromReader);\n      msg.setMerchant(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.merchant.CreateOrUpdateMerchantRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.merchant.CreateOrUpdateMerchantRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.merchant.CreateOrUpdateMerchantRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.CreateOrUpdateMerchantRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMerchantId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getMerchant();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.merchant.Merchant.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string merchant_id = 1;\n * @return {string}\n */\nproto.merchant.CreateOrUpdateMerchantRequest.prototype.getMerchantId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.CreateOrUpdateMerchantRequest} returns this\n */\nproto.merchant.CreateOrUpdateMerchantRequest.prototype.setMerchantId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional Merchant merchant = 2;\n * @return {?proto.merchant.Merchant}\n */\nproto.merchant.CreateOrUpdateMerchantRequest.prototype.getMerchant = function() {\n  return /** @type{?proto.merchant.Merchant} */ (\n    jspb.Message.getWrapperField(this, proto.merchant.Merchant, 2));\n};\n\n\n/**\n * @param {?proto.merchant.Merchant|undefined} value\n * @return {!proto.merchant.CreateOrUpdateMerchantRequest} returns this\n*/\nproto.merchant.CreateOrUpdateMerchantRequest.prototype.setMerchant = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.merchant.CreateOrUpdateMerchantRequest} returns this\n */\nproto.merchant.CreateOrUpdateMerchantRequest.prototype.clearMerchant = function() {\n  return this.setMerchant(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.merchant.CreateOrUpdateMerchantRequest.prototype.hasMerchant = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.merchant.CreateOrUpdateMerchantResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.merchant.CreateOrUpdateMerchantResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.merchant.CreateOrUpdateMerchantResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.CreateOrUpdateMerchantResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    updatedMerchant: (f = msg.getUpdatedMerchant()) && proto.merchant.Merchant.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.merchant.CreateOrUpdateMerchantResponse}\n */\nproto.merchant.CreateOrUpdateMerchantResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.merchant.CreateOrUpdateMerchantResponse;\n  return proto.merchant.CreateOrUpdateMerchantResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.merchant.CreateOrUpdateMerchantResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.merchant.CreateOrUpdateMerchantResponse}\n */\nproto.merchant.CreateOrUpdateMerchantResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.merchant.Merchant;\n      reader.readMessage(value,proto.merchant.Merchant.deserializeBinaryFromReader);\n      msg.setUpdatedMerchant(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.merchant.CreateOrUpdateMerchantResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.merchant.CreateOrUpdateMerchantResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.merchant.CreateOrUpdateMerchantResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.CreateOrUpdateMerchantResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUpdatedMerchant();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.merchant.Merchant.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.merchant.CreateOrUpdateMerchantResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.merchant.CreateOrUpdateMerchantResponse} returns this\n */\nproto.merchant.CreateOrUpdateMerchantResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.merchant.CreateOrUpdateMerchantResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.CreateOrUpdateMerchantResponse} returns this\n */\nproto.merchant.CreateOrUpdateMerchantResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional Merchant updated_merchant = 3;\n * @return {?proto.merchant.Merchant}\n */\nproto.merchant.CreateOrUpdateMerchantResponse.prototype.getUpdatedMerchant = function() {\n  return /** @type{?proto.merchant.Merchant} */ (\n    jspb.Message.getWrapperField(this, proto.merchant.Merchant, 3));\n};\n\n\n/**\n * @param {?proto.merchant.Merchant|undefined} value\n * @return {!proto.merchant.CreateOrUpdateMerchantResponse} returns this\n*/\nproto.merchant.CreateOrUpdateMerchantResponse.prototype.setUpdatedMerchant = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.merchant.CreateOrUpdateMerchantResponse} returns this\n */\nproto.merchant.CreateOrUpdateMerchantResponse.prototype.clearUpdatedMerchant = function() {\n  return this.setUpdatedMerchant(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.merchant.CreateOrUpdateMerchantResponse.prototype.hasUpdatedMerchant = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.merchant.GetMerchantByIdRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.merchant.GetMerchantByIdRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.merchant.GetMerchantByIdRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.GetMerchantByIdRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    merchantId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.merchant.GetMerchantByIdRequest}\n */\nproto.merchant.GetMerchantByIdRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.merchant.GetMerchantByIdRequest;\n  return proto.merchant.GetMerchantByIdRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.merchant.GetMerchantByIdRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.merchant.GetMerchantByIdRequest}\n */\nproto.merchant.GetMerchantByIdRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMerchantId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.merchant.GetMerchantByIdRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.merchant.GetMerchantByIdRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.merchant.GetMerchantByIdRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.GetMerchantByIdRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMerchantId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string merchant_id = 1;\n * @return {string}\n */\nproto.merchant.GetMerchantByIdRequest.prototype.getMerchantId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.GetMerchantByIdRequest} returns this\n */\nproto.merchant.GetMerchantByIdRequest.prototype.setMerchantId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.merchant.GetMerchantByIdResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.merchant.GetMerchantByIdResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.merchant.GetMerchantByIdResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.GetMerchantByIdResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    merchant: (f = msg.getMerchant()) && proto.merchant.Merchant.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.merchant.GetMerchantByIdResponse}\n */\nproto.merchant.GetMerchantByIdResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.merchant.GetMerchantByIdResponse;\n  return proto.merchant.GetMerchantByIdResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.merchant.GetMerchantByIdResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.merchant.GetMerchantByIdResponse}\n */\nproto.merchant.GetMerchantByIdResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.merchant.Merchant;\n      reader.readMessage(value,proto.merchant.Merchant.deserializeBinaryFromReader);\n      msg.setMerchant(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.merchant.GetMerchantByIdResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.merchant.GetMerchantByIdResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.merchant.GetMerchantByIdResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.GetMerchantByIdResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getMerchant();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.merchant.Merchant.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.merchant.GetMerchantByIdResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.merchant.GetMerchantByIdResponse} returns this\n */\nproto.merchant.GetMerchantByIdResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.merchant.GetMerchantByIdResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.GetMerchantByIdResponse} returns this\n */\nproto.merchant.GetMerchantByIdResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional Merchant merchant = 3;\n * @return {?proto.merchant.Merchant}\n */\nproto.merchant.GetMerchantByIdResponse.prototype.getMerchant = function() {\n  return /** @type{?proto.merchant.Merchant} */ (\n    jspb.Message.getWrapperField(this, proto.merchant.Merchant, 3));\n};\n\n\n/**\n * @param {?proto.merchant.Merchant|undefined} value\n * @return {!proto.merchant.GetMerchantByIdResponse} returns this\n*/\nproto.merchant.GetMerchantByIdResponse.prototype.setMerchant = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.merchant.GetMerchantByIdResponse} returns this\n */\nproto.merchant.GetMerchantByIdResponse.prototype.clearMerchant = function() {\n  return this.setMerchant(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.merchant.GetMerchantByIdResponse.prototype.hasMerchant = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.merchant.GetMerchantsByBrandIdRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.merchant.GetMerchantsByBrandIdRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.merchant.GetMerchantsByBrandIdRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.GetMerchantsByBrandIdRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.merchant.GetMerchantsByBrandIdRequest}\n */\nproto.merchant.GetMerchantsByBrandIdRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.merchant.GetMerchantsByBrandIdRequest;\n  return proto.merchant.GetMerchantsByBrandIdRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.merchant.GetMerchantsByBrandIdRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.merchant.GetMerchantsByBrandIdRequest}\n */\nproto.merchant.GetMerchantsByBrandIdRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.merchant.GetMerchantsByBrandIdRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.merchant.GetMerchantsByBrandIdRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.merchant.GetMerchantsByBrandIdRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.GetMerchantsByBrandIdRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string brand_id = 1;\n * @return {string}\n */\nproto.merchant.GetMerchantsByBrandIdRequest.prototype.getBrandId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.GetMerchantsByBrandIdRequest} returns this\n */\nproto.merchant.GetMerchantsByBrandIdRequest.prototype.setBrandId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.merchant.GetMerchantsByBrandIdResponse.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.merchant.GetMerchantsByBrandIdResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.merchant.GetMerchantsByBrandIdResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.merchant.GetMerchantsByBrandIdResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.GetMerchantsByBrandIdResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    merchantsList: jspb.Message.toObjectList(msg.getMerchantsList(),\n    proto.merchant.Merchant.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.merchant.GetMerchantsByBrandIdResponse}\n */\nproto.merchant.GetMerchantsByBrandIdResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.merchant.GetMerchantsByBrandIdResponse;\n  return proto.merchant.GetMerchantsByBrandIdResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.merchant.GetMerchantsByBrandIdResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.merchant.GetMerchantsByBrandIdResponse}\n */\nproto.merchant.GetMerchantsByBrandIdResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.merchant.Merchant;\n      reader.readMessage(value,proto.merchant.Merchant.deserializeBinaryFromReader);\n      msg.addMerchants(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.merchant.GetMerchantsByBrandIdResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.merchant.GetMerchantsByBrandIdResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.merchant.GetMerchantsByBrandIdResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.GetMerchantsByBrandIdResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getMerchantsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.merchant.Merchant.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.merchant.GetMerchantsByBrandIdResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.merchant.GetMerchantsByBrandIdResponse} returns this\n */\nproto.merchant.GetMerchantsByBrandIdResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.merchant.GetMerchantsByBrandIdResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.GetMerchantsByBrandIdResponse} returns this\n */\nproto.merchant.GetMerchantsByBrandIdResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated Merchant merchants = 3;\n * @return {!Array<!proto.merchant.Merchant>}\n */\nproto.merchant.GetMerchantsByBrandIdResponse.prototype.getMerchantsList = function() {\n  return /** @type{!Array<!proto.merchant.Merchant>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.merchant.Merchant, 3));\n};\n\n\n/**\n * @param {!Array<!proto.merchant.Merchant>} value\n * @return {!proto.merchant.GetMerchantsByBrandIdResponse} returns this\n*/\nproto.merchant.GetMerchantsByBrandIdResponse.prototype.setMerchantsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.merchant.Merchant=} opt_value\n * @param {number=} opt_index\n * @return {!proto.merchant.Merchant}\n */\nproto.merchant.GetMerchantsByBrandIdResponse.prototype.addMerchants = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.merchant.Merchant, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.merchant.GetMerchantsByBrandIdResponse} returns this\n */\nproto.merchant.GetMerchantsByBrandIdResponse.prototype.clearMerchantsList = function() {\n  return this.setMerchantsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.merchant.DeleteMerchantByIdRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.merchant.DeleteMerchantByIdRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.merchant.DeleteMerchantByIdRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.DeleteMerchantByIdRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    merchantId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.merchant.DeleteMerchantByIdRequest}\n */\nproto.merchant.DeleteMerchantByIdRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.merchant.DeleteMerchantByIdRequest;\n  return proto.merchant.DeleteMerchantByIdRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.merchant.DeleteMerchantByIdRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.merchant.DeleteMerchantByIdRequest}\n */\nproto.merchant.DeleteMerchantByIdRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMerchantId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.merchant.DeleteMerchantByIdRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.merchant.DeleteMerchantByIdRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.merchant.DeleteMerchantByIdRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.DeleteMerchantByIdRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMerchantId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string merchant_id = 1;\n * @return {string}\n */\nproto.merchant.DeleteMerchantByIdRequest.prototype.getMerchantId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.DeleteMerchantByIdRequest} returns this\n */\nproto.merchant.DeleteMerchantByIdRequest.prototype.setMerchantId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.merchant.DeleteMerchantByIdResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.merchant.DeleteMerchantByIdResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.merchant.DeleteMerchantByIdResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.DeleteMerchantByIdResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.merchant.DeleteMerchantByIdResponse}\n */\nproto.merchant.DeleteMerchantByIdResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.merchant.DeleteMerchantByIdResponse;\n  return proto.merchant.DeleteMerchantByIdResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.merchant.DeleteMerchantByIdResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.merchant.DeleteMerchantByIdResponse}\n */\nproto.merchant.DeleteMerchantByIdResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.merchant.DeleteMerchantByIdResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.merchant.DeleteMerchantByIdResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.merchant.DeleteMerchantByIdResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.merchant.DeleteMerchantByIdResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.merchant.DeleteMerchantByIdResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.merchant.DeleteMerchantByIdResponse} returns this\n */\nproto.merchant.DeleteMerchantByIdResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.merchant.DeleteMerchantByIdResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.merchant.DeleteMerchantByIdResponse} returns this\n */\nproto.merchant.DeleteMerchantByIdResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto.merchant);\n"],
  "mappings": "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",
  "names": []
}
