{
  "version": 3,
  "sources": ["../../grpc-web-client-gen/systemLog_pb.js"],
  "sourcesContent": ["// source: systemLog.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() {\n  if (this) { return this; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  if (typeof self !== 'undefined') { return self; }\n  return Function('return this')();\n}.call(null));\n\nvar common_pb = require('./common_pb.js');\ngoog.object.extend(proto, common_pb);\ngoog.exportSymbol('proto.systemLog.Brand', null, global);\ngoog.exportSymbol('proto.systemLog.CreateOrUpdateSystemLogRequest', null, global);\ngoog.exportSymbol('proto.systemLog.CreateOrUpdateSystemLogResponse', null, global);\ngoog.exportSymbol('proto.systemLog.Employee', null, global);\ngoog.exportSymbol('proto.systemLog.GetAllSystemLogsRequest', null, global);\ngoog.exportSymbol('proto.systemLog.GetAllSystemLogsResponse', null, global);\ngoog.exportSymbol('proto.systemLog.SystemLog', null, global);\ngoog.exportSymbol('proto.systemLog.SystemLogType', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.systemLog.Employee = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.systemLog.Employee, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.systemLog.Employee.displayName = 'proto.systemLog.Employee';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.systemLog.Brand = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.systemLog.Brand, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.systemLog.Brand.displayName = 'proto.systemLog.Brand';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.systemLog.SystemLog = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.systemLog.SystemLog, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.systemLog.SystemLog.displayName = 'proto.systemLog.SystemLog';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.systemLog.CreateOrUpdateSystemLogRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.systemLog.CreateOrUpdateSystemLogRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.systemLog.CreateOrUpdateSystemLogRequest.displayName = 'proto.systemLog.CreateOrUpdateSystemLogRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.systemLog.CreateOrUpdateSystemLogResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.systemLog.CreateOrUpdateSystemLogResponse.displayName = 'proto.systemLog.CreateOrUpdateSystemLogResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.systemLog.GetAllSystemLogsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.systemLog.GetAllSystemLogsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.systemLog.GetAllSystemLogsRequest.displayName = 'proto.systemLog.GetAllSystemLogsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.systemLog.GetAllSystemLogsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.systemLog.GetAllSystemLogsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.systemLog.GetAllSystemLogsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.systemLog.GetAllSystemLogsResponse.displayName = 'proto.systemLog.GetAllSystemLogsResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.systemLog.Employee.prototype.toObject = function(opt_includeInstance) {\n  return proto.systemLog.Employee.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.systemLog.Employee} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.Employee.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    employeeCode: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    employeeName: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.systemLog.Employee}\n */\nproto.systemLog.Employee.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.systemLog.Employee;\n  return proto.systemLog.Employee.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.systemLog.Employee} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.systemLog.Employee}\n */\nproto.systemLog.Employee.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmployeeCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmployeeName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.systemLog.Employee.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.systemLog.Employee.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.systemLog.Employee} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.Employee.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEmployeeCode();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getEmployeeName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string employee_code = 1;\n * @return {string}\n */\nproto.systemLog.Employee.prototype.getEmployeeCode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.Employee} returns this\n */\nproto.systemLog.Employee.prototype.setEmployeeCode = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string employee_name = 2;\n * @return {string}\n */\nproto.systemLog.Employee.prototype.getEmployeeName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.Employee} returns this\n */\nproto.systemLog.Employee.prototype.setEmployeeName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.systemLog.Brand.prototype.toObject = function(opt_includeInstance) {\n  return proto.systemLog.Brand.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.systemLog.Brand} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.Brand.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    brandCode: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    brandName: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.systemLog.Brand}\n */\nproto.systemLog.Brand.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.systemLog.Brand;\n  return proto.systemLog.Brand.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.systemLog.Brand} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.systemLog.Brand}\n */\nproto.systemLog.Brand.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandCode(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.systemLog.Brand.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.systemLog.Brand.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.systemLog.Brand} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.Brand.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getBrandCode();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getBrandName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string brand_id = 1;\n * @return {string}\n */\nproto.systemLog.Brand.prototype.getBrandId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.Brand} returns this\n */\nproto.systemLog.Brand.prototype.setBrandId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string brand_code = 2;\n * @return {string}\n */\nproto.systemLog.Brand.prototype.getBrandCode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.Brand} returns this\n */\nproto.systemLog.Brand.prototype.setBrandCode = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string brand_name = 3;\n * @return {string}\n */\nproto.systemLog.Brand.prototype.getBrandName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.Brand} returns this\n */\nproto.systemLog.Brand.prototype.setBrandName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.systemLog.SystemLog.prototype.toObject = function(opt_includeInstance) {\n  return proto.systemLog.SystemLog.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.systemLog.SystemLog} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.SystemLog.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    employee: (f = msg.getEmployee()) && proto.systemLog.Employee.toObject(includeInstance, f),\n    logType: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    description: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    brand: (f = msg.getBrand()) && proto.systemLog.Brand.toObject(includeInstance, f),\n    createdAtText: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.systemLog.SystemLog}\n */\nproto.systemLog.SystemLog.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.systemLog.SystemLog;\n  return proto.systemLog.SystemLog.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.systemLog.SystemLog} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.systemLog.SystemLog}\n */\nproto.systemLog.SystemLog.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = new proto.systemLog.Employee;\n      reader.readMessage(value,proto.systemLog.Employee.deserializeBinaryFromReader);\n      msg.setEmployee(value);\n      break;\n    case 3:\n      var value = /** @type {!proto.systemLog.SystemLogType} */ (reader.readEnum());\n      msg.setLogType(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 5:\n      var value = new proto.systemLog.Brand;\n      reader.readMessage(value,proto.systemLog.Brand.deserializeBinaryFromReader);\n      msg.setBrand(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAtText(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.systemLog.SystemLog.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.systemLog.SystemLog.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.systemLog.SystemLog} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.SystemLog.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getEmployee();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.systemLog.Employee.serializeBinaryToWriter\n    );\n  }\n  f = message.getLogType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getBrand();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.systemLog.Brand.serializeBinaryToWriter\n    );\n  }\n  f = message.getCreatedAtText();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.systemLog.SystemLog.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.SystemLog} returns this\n */\nproto.systemLog.SystemLog.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional Employee employee = 2;\n * @return {?proto.systemLog.Employee}\n */\nproto.systemLog.SystemLog.prototype.getEmployee = function() {\n  return /** @type{?proto.systemLog.Employee} */ (\n    jspb.Message.getWrapperField(this, proto.systemLog.Employee, 2));\n};\n\n\n/**\n * @param {?proto.systemLog.Employee|undefined} value\n * @return {!proto.systemLog.SystemLog} returns this\n*/\nproto.systemLog.SystemLog.prototype.setEmployee = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.systemLog.SystemLog} returns this\n */\nproto.systemLog.SystemLog.prototype.clearEmployee = function() {\n  return this.setEmployee(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.systemLog.SystemLog.prototype.hasEmployee = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional SystemLogType log_type = 3;\n * @return {!proto.systemLog.SystemLogType}\n */\nproto.systemLog.SystemLog.prototype.getLogType = function() {\n  return /** @type {!proto.systemLog.SystemLogType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!proto.systemLog.SystemLogType} value\n * @return {!proto.systemLog.SystemLog} returns this\n */\nproto.systemLog.SystemLog.prototype.setLogType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n/**\n * optional string description = 4;\n * @return {string}\n */\nproto.systemLog.SystemLog.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.SystemLog} returns this\n */\nproto.systemLog.SystemLog.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional Brand brand = 5;\n * @return {?proto.systemLog.Brand}\n */\nproto.systemLog.SystemLog.prototype.getBrand = function() {\n  return /** @type{?proto.systemLog.Brand} */ (\n    jspb.Message.getWrapperField(this, proto.systemLog.Brand, 5));\n};\n\n\n/**\n * @param {?proto.systemLog.Brand|undefined} value\n * @return {!proto.systemLog.SystemLog} returns this\n*/\nproto.systemLog.SystemLog.prototype.setBrand = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.systemLog.SystemLog} returns this\n */\nproto.systemLog.SystemLog.prototype.clearBrand = function() {\n  return this.setBrand(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.systemLog.SystemLog.prototype.hasBrand = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional string created_at_text = 6;\n * @return {string}\n */\nproto.systemLog.SystemLog.prototype.getCreatedAtText = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.SystemLog} returns this\n */\nproto.systemLog.SystemLog.prototype.setCreatedAtText = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.systemLog.CreateOrUpdateSystemLogRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.systemLog.CreateOrUpdateSystemLogRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.systemLog.CreateOrUpdateSystemLogRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.CreateOrUpdateSystemLogRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    systemLogId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    systemLog: (f = msg.getSystemLog()) && proto.systemLog.SystemLog.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.systemLog.CreateOrUpdateSystemLogRequest}\n */\nproto.systemLog.CreateOrUpdateSystemLogRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.systemLog.CreateOrUpdateSystemLogRequest;\n  return proto.systemLog.CreateOrUpdateSystemLogRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.systemLog.CreateOrUpdateSystemLogRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.systemLog.CreateOrUpdateSystemLogRequest}\n */\nproto.systemLog.CreateOrUpdateSystemLogRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSystemLogId(value);\n      break;\n    case 2:\n      var value = new proto.systemLog.SystemLog;\n      reader.readMessage(value,proto.systemLog.SystemLog.deserializeBinaryFromReader);\n      msg.setSystemLog(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.systemLog.CreateOrUpdateSystemLogRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.systemLog.CreateOrUpdateSystemLogRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.systemLog.CreateOrUpdateSystemLogRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.CreateOrUpdateSystemLogRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSystemLogId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getSystemLog();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.systemLog.SystemLog.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string system_log_id = 1;\n * @return {string}\n */\nproto.systemLog.CreateOrUpdateSystemLogRequest.prototype.getSystemLogId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.CreateOrUpdateSystemLogRequest} returns this\n */\nproto.systemLog.CreateOrUpdateSystemLogRequest.prototype.setSystemLogId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional SystemLog system_log = 2;\n * @return {?proto.systemLog.SystemLog}\n */\nproto.systemLog.CreateOrUpdateSystemLogRequest.prototype.getSystemLog = function() {\n  return /** @type{?proto.systemLog.SystemLog} */ (\n    jspb.Message.getWrapperField(this, proto.systemLog.SystemLog, 2));\n};\n\n\n/**\n * @param {?proto.systemLog.SystemLog|undefined} value\n * @return {!proto.systemLog.CreateOrUpdateSystemLogRequest} returns this\n*/\nproto.systemLog.CreateOrUpdateSystemLogRequest.prototype.setSystemLog = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.systemLog.CreateOrUpdateSystemLogRequest} returns this\n */\nproto.systemLog.CreateOrUpdateSystemLogRequest.prototype.clearSystemLog = function() {\n  return this.setSystemLog(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.systemLog.CreateOrUpdateSystemLogRequest.prototype.hasSystemLog = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.systemLog.CreateOrUpdateSystemLogResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.systemLog.CreateOrUpdateSystemLogResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    updatedSystemLog: (f = msg.getUpdatedSystemLog()) && proto.systemLog.SystemLog.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.systemLog.CreateOrUpdateSystemLogResponse}\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.systemLog.CreateOrUpdateSystemLogResponse;\n  return proto.systemLog.CreateOrUpdateSystemLogResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.systemLog.CreateOrUpdateSystemLogResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.systemLog.CreateOrUpdateSystemLogResponse}\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.systemLog.SystemLog;\n      reader.readMessage(value,proto.systemLog.SystemLog.deserializeBinaryFromReader);\n      msg.setUpdatedSystemLog(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.systemLog.CreateOrUpdateSystemLogResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.systemLog.CreateOrUpdateSystemLogResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUpdatedSystemLog();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.systemLog.SystemLog.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.systemLog.CreateOrUpdateSystemLogResponse} returns this\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.CreateOrUpdateSystemLogResponse} returns this\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional SystemLog updated_system_log = 3;\n * @return {?proto.systemLog.SystemLog}\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.prototype.getUpdatedSystemLog = function() {\n  return /** @type{?proto.systemLog.SystemLog} */ (\n    jspb.Message.getWrapperField(this, proto.systemLog.SystemLog, 3));\n};\n\n\n/**\n * @param {?proto.systemLog.SystemLog|undefined} value\n * @return {!proto.systemLog.CreateOrUpdateSystemLogResponse} returns this\n*/\nproto.systemLog.CreateOrUpdateSystemLogResponse.prototype.setUpdatedSystemLog = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.systemLog.CreateOrUpdateSystemLogResponse} returns this\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.prototype.clearUpdatedSystemLog = function() {\n  return this.setUpdatedSystemLog(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.systemLog.CreateOrUpdateSystemLogResponse.prototype.hasUpdatedSystemLog = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.systemLog.GetAllSystemLogsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.systemLog.GetAllSystemLogsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.GetAllSystemLogsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    from: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    to: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    logType: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    page: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    limit: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.systemLog.GetAllSystemLogsRequest}\n */\nproto.systemLog.GetAllSystemLogsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.systemLog.GetAllSystemLogsRequest;\n  return proto.systemLog.GetAllSystemLogsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.systemLog.GetAllSystemLogsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.systemLog.GetAllSystemLogsRequest}\n */\nproto.systemLog.GetAllSystemLogsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFrom(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTo(value);\n      break;\n    case 4:\n      var value = /** @type {!proto.systemLog.SystemLogType} */ (reader.readEnum());\n      msg.setLogType(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPage(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.systemLog.GetAllSystemLogsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.systemLog.GetAllSystemLogsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.GetAllSystemLogsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getFrom();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getTo();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {!proto.systemLog.SystemLogType} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeEnum(\n      4,\n      f\n    );\n  }\n  f = message.getPage();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string brand_id = 1;\n * @return {string}\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.getBrandId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.GetAllSystemLogsRequest} returns this\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.setBrandId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string from = 2;\n * @return {string}\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.getFrom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.GetAllSystemLogsRequest} returns this\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.setFrom = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string to = 3;\n * @return {string}\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.getTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.GetAllSystemLogsRequest} returns this\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.setTo = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional SystemLogType log_type = 4;\n * @return {!proto.systemLog.SystemLogType}\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.getLogType = function() {\n  return /** @type {!proto.systemLog.SystemLogType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {!proto.systemLog.SystemLogType} value\n * @return {!proto.systemLog.GetAllSystemLogsRequest} returns this\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.setLogType = function(value) {\n  return jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.systemLog.GetAllSystemLogsRequest} returns this\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.clearLogType = function() {\n  return jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.hasLogType = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional int32 page = 5;\n * @return {number}\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.getPage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.systemLog.GetAllSystemLogsRequest} returns this\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.setPage = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int32 limit = 6;\n * @return {number}\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.systemLog.GetAllSystemLogsRequest} returns this\n */\nproto.systemLog.GetAllSystemLogsRequest.prototype.setLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.systemLog.GetAllSystemLogsResponse.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.systemLog.GetAllSystemLogsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.systemLog.GetAllSystemLogsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.systemLog.GetAllSystemLogsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.GetAllSystemLogsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    systemLogItemsList: jspb.Message.toObjectList(msg.getSystemLogItemsList(),\n    proto.systemLog.SystemLog.toObject, includeInstance),\n    pagination: (f = msg.getPagination()) && common_pb.PaginationResponse.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.systemLog.GetAllSystemLogsResponse}\n */\nproto.systemLog.GetAllSystemLogsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.systemLog.GetAllSystemLogsResponse;\n  return proto.systemLog.GetAllSystemLogsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.systemLog.GetAllSystemLogsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.systemLog.GetAllSystemLogsResponse}\n */\nproto.systemLog.GetAllSystemLogsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.systemLog.SystemLog;\n      reader.readMessage(value,proto.systemLog.SystemLog.deserializeBinaryFromReader);\n      msg.addSystemLogItems(value);\n      break;\n    case 4:\n      var value = new common_pb.PaginationResponse;\n      reader.readMessage(value,common_pb.PaginationResponse.deserializeBinaryFromReader);\n      msg.setPagination(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.systemLog.GetAllSystemLogsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.systemLog.GetAllSystemLogsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.systemLog.GetAllSystemLogsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.systemLog.GetAllSystemLogsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getSystemLogItemsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.systemLog.SystemLog.serializeBinaryToWriter\n    );\n  }\n  f = message.getPagination();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      common_pb.PaginationResponse.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.systemLog.GetAllSystemLogsResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.systemLog.GetAllSystemLogsResponse} returns this\n */\nproto.systemLog.GetAllSystemLogsResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.systemLog.GetAllSystemLogsResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.systemLog.GetAllSystemLogsResponse} returns this\n */\nproto.systemLog.GetAllSystemLogsResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated SystemLog system_log_items = 3;\n * @return {!Array<!proto.systemLog.SystemLog>}\n */\nproto.systemLog.GetAllSystemLogsResponse.prototype.getSystemLogItemsList = function() {\n  return /** @type{!Array<!proto.systemLog.SystemLog>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.systemLog.SystemLog, 3));\n};\n\n\n/**\n * @param {!Array<!proto.systemLog.SystemLog>} value\n * @return {!proto.systemLog.GetAllSystemLogsResponse} returns this\n*/\nproto.systemLog.GetAllSystemLogsResponse.prototype.setSystemLogItemsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.systemLog.SystemLog=} opt_value\n * @param {number=} opt_index\n * @return {!proto.systemLog.SystemLog}\n */\nproto.systemLog.GetAllSystemLogsResponse.prototype.addSystemLogItems = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.systemLog.SystemLog, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.systemLog.GetAllSystemLogsResponse} returns this\n */\nproto.systemLog.GetAllSystemLogsResponse.prototype.clearSystemLogItemsList = function() {\n  return this.setSystemLogItemsList([]);\n};\n\n\n/**\n * optional common.PaginationResponse pagination = 4;\n * @return {?proto.common.PaginationResponse}\n */\nproto.systemLog.GetAllSystemLogsResponse.prototype.getPagination = function() {\n  return /** @type{?proto.common.PaginationResponse} */ (\n    jspb.Message.getWrapperField(this, common_pb.PaginationResponse, 4));\n};\n\n\n/**\n * @param {?proto.common.PaginationResponse|undefined} value\n * @return {!proto.systemLog.GetAllSystemLogsResponse} returns this\n*/\nproto.systemLog.GetAllSystemLogsResponse.prototype.setPagination = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.systemLog.GetAllSystemLogsResponse} returns this\n */\nproto.systemLog.GetAllSystemLogsResponse.prototype.clearPagination = function() {\n  return this.setPagination(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.systemLog.GetAllSystemLogsResponse.prototype.hasPagination = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * @enum {number}\n */\nproto.systemLog.SystemLogType = {\n  UNKNOWN: 0,\n  AUTH: 1,\n  CUSTOMER: 2,\n  LOYALTY: 3,\n  MARKETING: 4,\n  SETTING: 5\n};\n\ngoog.object.extend(exports, proto.systemLog);\n"],
  "mappings": "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",
  "names": []
}
