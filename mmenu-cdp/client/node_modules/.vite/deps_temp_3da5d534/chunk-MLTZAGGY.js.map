{
  "version": 3,
  "sources": ["../../grpc-web-client-gen/brand_pb.js"],
  "sourcesContent": ["// source: brand.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() {\n  if (this) { return this; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  if (typeof self !== 'undefined') { return self; }\n  return Function('return this')();\n}.call(null));\n\nvar merchant_pb = require('./merchant_pb.js');\ngoog.object.extend(proto, merchant_pb);\nvar country_pb = require('./country_pb.js');\ngoog.object.extend(proto, country_pb);\nvar common_pb = require('./common_pb.js');\ngoog.object.extend(proto, common_pb);\ngoog.exportSymbol('proto.brand.Brand', null, global);\ngoog.exportSymbol('proto.brand.Brand.ZaloMiniApp', null, global);\ngoog.exportSymbol('proto.brand.BrandShop', null, global);\ngoog.exportSymbol('proto.brand.BrandType', null, global);\ngoog.exportSymbol('proto.brand.CreateOrUpdateBrandRequest', null, global);\ngoog.exportSymbol('proto.brand.CreateOrUpdateBrandResponse', null, global);\ngoog.exportSymbol('proto.brand.CreateOrUpdateLineConnectionRequest', null, global);\ngoog.exportSymbol('proto.brand.CreateOrUpdateLineConnectionResponse', null, global);\ngoog.exportSymbol('proto.brand.CreateOrUpdateZaloConnectionRequest', null, global);\ngoog.exportSymbol('proto.brand.CreateOrUpdateZaloConnectionResponse', null, global);\ngoog.exportSymbol('proto.brand.CreateOrUpdateZaloMiniappConnectionRequest', null, global);\ngoog.exportSymbol('proto.brand.CreateOrUpdateZaloMiniappConnectionResponse', null, global);\ngoog.exportSymbol('proto.brand.DeleteBrandByIdRequest', null, global);\ngoog.exportSymbol('proto.brand.DeleteBrandByIdResponse', null, global);\ngoog.exportSymbol('proto.brand.GeneralSetting', null, global);\ngoog.exportSymbol('proto.brand.GeneralSetting.AutomaticReviewCustomerRankCycleType', null, global);\ngoog.exportSymbol('proto.brand.GetAllBrandRequest', null, global);\ngoog.exportSymbol('proto.brand.GetAllBrandResponse', null, global);\ngoog.exportSymbol('proto.brand.GetBrandByIdRequest', null, global);\ngoog.exportSymbol('proto.brand.GetBrandByIdResponse', null, global);\ngoog.exportSymbol('proto.brand.LineConnection', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.GeneralSetting = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.GeneralSetting, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.GeneralSetting.displayName = 'proto.brand.GeneralSetting';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.LineConnection = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.LineConnection, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.LineConnection.displayName = 'proto.brand.LineConnection';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.Brand = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.brand.Brand.repeatedFields_, null);\n};\ngoog.inherits(proto.brand.Brand, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.Brand.displayName = 'proto.brand.Brand';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.Brand.ZaloMiniApp = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.Brand.ZaloMiniApp, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.Brand.ZaloMiniApp.displayName = 'proto.brand.Brand.ZaloMiniApp';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.BrandShop = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.BrandShop, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.BrandShop.displayName = 'proto.brand.BrandShop';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.CreateOrUpdateBrandRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.brand.CreateOrUpdateBrandRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.brand.CreateOrUpdateBrandRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.CreateOrUpdateBrandRequest.displayName = 'proto.brand.CreateOrUpdateBrandRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.CreateOrUpdateBrandResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.CreateOrUpdateBrandResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.CreateOrUpdateBrandResponse.displayName = 'proto.brand.CreateOrUpdateBrandResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.GetBrandByIdRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.GetBrandByIdRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.GetBrandByIdRequest.displayName = 'proto.brand.GetBrandByIdRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.GetBrandByIdResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.GetBrandByIdResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.GetBrandByIdResponse.displayName = 'proto.brand.GetBrandByIdResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.DeleteBrandByIdRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.DeleteBrandByIdRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.DeleteBrandByIdRequest.displayName = 'proto.brand.DeleteBrandByIdRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.DeleteBrandByIdResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.DeleteBrandByIdResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.DeleteBrandByIdResponse.displayName = 'proto.brand.DeleteBrandByIdResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.CreateOrUpdateLineConnectionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.CreateOrUpdateLineConnectionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.CreateOrUpdateLineConnectionRequest.displayName = 'proto.brand.CreateOrUpdateLineConnectionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.CreateOrUpdateLineConnectionResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.CreateOrUpdateLineConnectionResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.CreateOrUpdateLineConnectionResponse.displayName = 'proto.brand.CreateOrUpdateLineConnectionResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.CreateOrUpdateZaloConnectionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.CreateOrUpdateZaloConnectionRequest.displayName = 'proto.brand.CreateOrUpdateZaloConnectionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.CreateOrUpdateZaloConnectionResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.CreateOrUpdateZaloConnectionResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.CreateOrUpdateZaloConnectionResponse.displayName = 'proto.brand.CreateOrUpdateZaloConnectionResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.CreateOrUpdateZaloMiniappConnectionRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.displayName = 'proto.brand.CreateOrUpdateZaloMiniappConnectionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.CreateOrUpdateZaloMiniappConnectionResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.displayName = 'proto.brand.CreateOrUpdateZaloMiniappConnectionResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.GetAllBrandRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.brand.GetAllBrandRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.GetAllBrandRequest.displayName = 'proto.brand.GetAllBrandRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.brand.GetAllBrandResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.brand.GetAllBrandResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.brand.GetAllBrandResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.brand.GetAllBrandResponse.displayName = 'proto.brand.GetAllBrandResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.GeneralSetting.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.GeneralSetting.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.GeneralSetting} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.GeneralSetting.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    customerRankReviewCycleType: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    customerRankReviewCycleValue: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    customerRankResetCycleValue: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.GeneralSetting}\n */\nproto.brand.GeneralSetting.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.GeneralSetting;\n  return proto.brand.GeneralSetting.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.GeneralSetting} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.GeneralSetting}\n */\nproto.brand.GeneralSetting.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.brand.GeneralSetting.AutomaticReviewCustomerRankCycleType} */ (reader.readEnum());\n      msg.setCustomerRankReviewCycleType(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCustomerRankReviewCycleValue(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCustomerRankResetCycleValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.GeneralSetting.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.GeneralSetting.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.GeneralSetting} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.GeneralSetting.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.brand.GeneralSetting.AutomaticReviewCustomerRankCycleType} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getCustomerRankReviewCycleValue();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getCustomerRankResetCycleValue();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.brand.GeneralSetting.AutomaticReviewCustomerRankCycleType = {\n  NO_CYCLE: 0,\n  DAYS_CYCLE: 1\n};\n\n/**\n * optional AutomaticReviewCustomerRankCycleType customer_rank_review_cycle_type = 1;\n * @return {!proto.brand.GeneralSetting.AutomaticReviewCustomerRankCycleType}\n */\nproto.brand.GeneralSetting.prototype.getCustomerRankReviewCycleType = function() {\n  return /** @type {!proto.brand.GeneralSetting.AutomaticReviewCustomerRankCycleType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.brand.GeneralSetting.AutomaticReviewCustomerRankCycleType} value\n * @return {!proto.brand.GeneralSetting} returns this\n */\nproto.brand.GeneralSetting.prototype.setCustomerRankReviewCycleType = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.brand.GeneralSetting} returns this\n */\nproto.brand.GeneralSetting.prototype.clearCustomerRankReviewCycleType = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.brand.GeneralSetting.prototype.hasCustomerRankReviewCycleType = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int32 customer_rank_review_cycle_value = 2;\n * @return {number}\n */\nproto.brand.GeneralSetting.prototype.getCustomerRankReviewCycleValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.brand.GeneralSetting} returns this\n */\nproto.brand.GeneralSetting.prototype.setCustomerRankReviewCycleValue = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 customer_rank_reset_cycle_value = 3;\n * @return {number}\n */\nproto.brand.GeneralSetting.prototype.getCustomerRankResetCycleValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.brand.GeneralSetting} returns this\n */\nproto.brand.GeneralSetting.prototype.setCustomerRankResetCycleValue = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.LineConnection.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.LineConnection.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.LineConnection} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.LineConnection.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    lineLoginChannelId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    clientSecretLoginChannelLine: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    clientIdMessageChannelLine: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    messageChannelTokenLine: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.LineConnection}\n */\nproto.brand.LineConnection.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.LineConnection;\n  return proto.brand.LineConnection.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.LineConnection} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.LineConnection}\n */\nproto.brand.LineConnection.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLineLoginChannelId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClientSecretLoginChannelLine(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClientIdMessageChannelLine(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessageChannelTokenLine(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.LineConnection.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.LineConnection.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.LineConnection} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.LineConnection.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLineLoginChannelId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getClientSecretLoginChannelLine();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getClientIdMessageChannelLine();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getMessageChannelTokenLine();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string line_login_channel_id = 1;\n * @return {string}\n */\nproto.brand.LineConnection.prototype.getLineLoginChannelId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.LineConnection} returns this\n */\nproto.brand.LineConnection.prototype.setLineLoginChannelId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string client_secret_login_channel_line = 2;\n * @return {string}\n */\nproto.brand.LineConnection.prototype.getClientSecretLoginChannelLine = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.LineConnection} returns this\n */\nproto.brand.LineConnection.prototype.setClientSecretLoginChannelLine = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string client_id_message_channel_line = 3;\n * @return {string}\n */\nproto.brand.LineConnection.prototype.getClientIdMessageChannelLine = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.LineConnection} returns this\n */\nproto.brand.LineConnection.prototype.setClientIdMessageChannelLine = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string message_channel_token_line = 4;\n * @return {string}\n */\nproto.brand.LineConnection.prototype.getMessageChannelTokenLine = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.LineConnection} returns this\n */\nproto.brand.LineConnection.prototype.setMessageChannelTokenLine = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.brand.Brand.repeatedFields_ = [5,13];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.Brand.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.Brand.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.Brand} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.Brand.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    code: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    companyCode: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    brandMerchantsList: jspb.Message.toObjectList(msg.getBrandMerchantsList(),\n    merchant_pb.Merchant.toObject, includeInstance),\n    generalSetting: (f = msg.getGeneralSetting()) && proto.brand.GeneralSetting.toObject(includeInstance, f),\n    type: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    country: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    lineConnection: (f = msg.getLineConnection()) && proto.brand.LineConnection.toObject(includeInstance, f),\n    zaloOaId: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n    zaloAppId: jspb.Message.getFieldWithDefault(msg, 11, \"\"),\n    secretKeyZalo: jspb.Message.getFieldWithDefault(msg, 12, \"\"),\n    zaloMiniAppList: jspb.Message.toObjectList(msg.getZaloMiniAppList(),\n    proto.brand.Brand.ZaloMiniApp.toObject, includeInstance),\n    ownerUserId: jspb.Message.getFieldWithDefault(msg, 14, \"\"),\n    ownerPhone: jspb.Message.getFieldWithDefault(msg, 15, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.Brand}\n */\nproto.brand.Brand.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.Brand;\n  return proto.brand.Brand.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.Brand} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.Brand}\n */\nproto.brand.Brand.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCode(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCompanyCode(value);\n      break;\n    case 5:\n      var value = new merchant_pb.Merchant;\n      reader.readMessage(value,merchant_pb.Merchant.deserializeBinaryFromReader);\n      msg.addBrandMerchants(value);\n      break;\n    case 6:\n      var value = new proto.brand.GeneralSetting;\n      reader.readMessage(value,proto.brand.GeneralSetting.deserializeBinaryFromReader);\n      msg.setGeneralSetting(value);\n      break;\n    case 7:\n      var value = /** @type {!proto.brand.BrandType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 8:\n      var value = /** @type {!proto.country.CountryName} */ (reader.readEnum());\n      msg.setCountry(value);\n      break;\n    case 9:\n      var value = new proto.brand.LineConnection;\n      reader.readMessage(value,proto.brand.LineConnection.deserializeBinaryFromReader);\n      msg.setLineConnection(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setZaloOaId(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setZaloAppId(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSecretKeyZalo(value);\n      break;\n    case 13:\n      var value = new proto.brand.Brand.ZaloMiniApp;\n      reader.readMessage(value,proto.brand.Brand.ZaloMiniApp.deserializeBinaryFromReader);\n      msg.addZaloMiniApp(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOwnerUserId(value);\n      break;\n    case 15:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOwnerPhone(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.Brand.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.Brand.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.Brand} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.Brand.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCode();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getCompanyCode();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getBrandMerchantsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      merchant_pb.Merchant.serializeBinaryToWriter\n    );\n  }\n  f = message.getGeneralSetting();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.brand.GeneralSetting.serializeBinaryToWriter\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      7,\n      f\n    );\n  }\n  f = message.getCountry();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      8,\n      f\n    );\n  }\n  f = message.getLineConnection();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      proto.brand.LineConnection.serializeBinaryToWriter\n    );\n  }\n  f = message.getZaloOaId();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = message.getZaloAppId();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = message.getSecretKeyZalo();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = message.getZaloMiniAppList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      13,\n      f,\n      proto.brand.Brand.ZaloMiniApp.serializeBinaryToWriter\n    );\n  }\n  f = message.getOwnerUserId();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = message.getOwnerPhone();\n  if (f.length > 0) {\n    writer.writeString(\n      15,\n      f\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.Brand.ZaloMiniApp.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.Brand.ZaloMiniApp.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.Brand.ZaloMiniApp} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.Brand.ZaloMiniApp.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    purchaseSdkPrivateKey: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.Brand.ZaloMiniApp}\n */\nproto.brand.Brand.ZaloMiniApp.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.Brand.ZaloMiniApp;\n  return proto.brand.Brand.ZaloMiniApp.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.Brand.ZaloMiniApp} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.Brand.ZaloMiniApp}\n */\nproto.brand.Brand.ZaloMiniApp.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPurchaseSdkPrivateKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.Brand.ZaloMiniApp.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.Brand.ZaloMiniApp.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.Brand.ZaloMiniApp} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.Brand.ZaloMiniApp.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPurchaseSdkPrivateKey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.brand.Brand.ZaloMiniApp.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.Brand.ZaloMiniApp} returns this\n */\nproto.brand.Brand.ZaloMiniApp.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string purchase_sdk_private_key = 2;\n * @return {string}\n */\nproto.brand.Brand.ZaloMiniApp.prototype.getPurchaseSdkPrivateKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.Brand.ZaloMiniApp} returns this\n */\nproto.brand.Brand.ZaloMiniApp.prototype.setPurchaseSdkPrivateKey = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.brand.Brand.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.brand.Brand.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string code = 3;\n * @return {string}\n */\nproto.brand.Brand.prototype.getCode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.setCode = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string company_code = 4;\n * @return {string}\n */\nproto.brand.Brand.prototype.getCompanyCode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.setCompanyCode = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * repeated merchant.Merchant brand_merchants = 5;\n * @return {!Array<!proto.merchant.Merchant>}\n */\nproto.brand.Brand.prototype.getBrandMerchantsList = function() {\n  return /** @type{!Array<!proto.merchant.Merchant>} */ (\n    jspb.Message.getRepeatedWrapperField(this, merchant_pb.Merchant, 5));\n};\n\n\n/**\n * @param {!Array<!proto.merchant.Merchant>} value\n * @return {!proto.brand.Brand} returns this\n*/\nproto.brand.Brand.prototype.setBrandMerchantsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.merchant.Merchant=} opt_value\n * @param {number=} opt_index\n * @return {!proto.merchant.Merchant}\n */\nproto.brand.Brand.prototype.addBrandMerchants = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.merchant.Merchant, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.clearBrandMerchantsList = function() {\n  return this.setBrandMerchantsList([]);\n};\n\n\n/**\n * optional GeneralSetting general_setting = 6;\n * @return {?proto.brand.GeneralSetting}\n */\nproto.brand.Brand.prototype.getGeneralSetting = function() {\n  return /** @type{?proto.brand.GeneralSetting} */ (\n    jspb.Message.getWrapperField(this, proto.brand.GeneralSetting, 6));\n};\n\n\n/**\n * @param {?proto.brand.GeneralSetting|undefined} value\n * @return {!proto.brand.Brand} returns this\n*/\nproto.brand.Brand.prototype.setGeneralSetting = function(value) {\n  return jspb.Message.setWrapperField(this, 6, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.clearGeneralSetting = function() {\n  return this.setGeneralSetting(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.brand.Brand.prototype.hasGeneralSetting = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional BrandType type = 7;\n * @return {!proto.brand.BrandType}\n */\nproto.brand.Brand.prototype.getType = function() {\n  return /** @type {!proto.brand.BrandType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {!proto.brand.BrandType} value\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 7, value);\n};\n\n\n/**\n * optional country.CountryName country = 8;\n * @return {!proto.country.CountryName}\n */\nproto.brand.Brand.prototype.getCountry = function() {\n  return /** @type {!proto.country.CountryName} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {!proto.country.CountryName} value\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.setCountry = function(value) {\n  return jspb.Message.setProto3EnumField(this, 8, value);\n};\n\n\n/**\n * optional LineConnection line_connection = 9;\n * @return {?proto.brand.LineConnection}\n */\nproto.brand.Brand.prototype.getLineConnection = function() {\n  return /** @type{?proto.brand.LineConnection} */ (\n    jspb.Message.getWrapperField(this, proto.brand.LineConnection, 9));\n};\n\n\n/**\n * @param {?proto.brand.LineConnection|undefined} value\n * @return {!proto.brand.Brand} returns this\n*/\nproto.brand.Brand.prototype.setLineConnection = function(value) {\n  return jspb.Message.setWrapperField(this, 9, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.clearLineConnection = function() {\n  return this.setLineConnection(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.brand.Brand.prototype.hasLineConnection = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional string zalo_oa_id = 10;\n * @return {string}\n */\nproto.brand.Brand.prototype.getZaloOaId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.setZaloOaId = function(value) {\n  return jspb.Message.setProto3StringField(this, 10, value);\n};\n\n\n/**\n * optional string zalo_app_id = 11;\n * @return {string}\n */\nproto.brand.Brand.prototype.getZaloAppId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.setZaloAppId = function(value) {\n  return jspb.Message.setProto3StringField(this, 11, value);\n};\n\n\n/**\n * optional string secret_key_zalo = 12;\n * @return {string}\n */\nproto.brand.Brand.prototype.getSecretKeyZalo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.setSecretKeyZalo = function(value) {\n  return jspb.Message.setProto3StringField(this, 12, value);\n};\n\n\n/**\n * repeated ZaloMiniApp zalo_mini_app = 13;\n * @return {!Array<!proto.brand.Brand.ZaloMiniApp>}\n */\nproto.brand.Brand.prototype.getZaloMiniAppList = function() {\n  return /** @type{!Array<!proto.brand.Brand.ZaloMiniApp>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.brand.Brand.ZaloMiniApp, 13));\n};\n\n\n/**\n * @param {!Array<!proto.brand.Brand.ZaloMiniApp>} value\n * @return {!proto.brand.Brand} returns this\n*/\nproto.brand.Brand.prototype.setZaloMiniAppList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 13, value);\n};\n\n\n/**\n * @param {!proto.brand.Brand.ZaloMiniApp=} opt_value\n * @param {number=} opt_index\n * @return {!proto.brand.Brand.ZaloMiniApp}\n */\nproto.brand.Brand.prototype.addZaloMiniApp = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.brand.Brand.ZaloMiniApp, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.clearZaloMiniAppList = function() {\n  return this.setZaloMiniAppList([]);\n};\n\n\n/**\n * optional string owner_user_id = 14;\n * @return {string}\n */\nproto.brand.Brand.prototype.getOwnerUserId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.setOwnerUserId = function(value) {\n  return jspb.Message.setProto3StringField(this, 14, value);\n};\n\n\n/**\n * optional string owner_phone = 15;\n * @return {string}\n */\nproto.brand.Brand.prototype.getOwnerPhone = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.Brand} returns this\n */\nproto.brand.Brand.prototype.setOwnerPhone = function(value) {\n  return jspb.Message.setProto3StringField(this, 15, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.BrandShop.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.BrandShop.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.BrandShop} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.BrandShop.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    merchantId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    shopId: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.BrandShop}\n */\nproto.brand.BrandShop.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.BrandShop;\n  return proto.brand.BrandShop.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.BrandShop} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.BrandShop}\n */\nproto.brand.BrandShop.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMerchantId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setShopId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.BrandShop.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.BrandShop.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.BrandShop} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.BrandShop.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getShopId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string merchant_id = 1;\n * @return {string}\n */\nproto.brand.BrandShop.prototype.getMerchantId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.BrandShop} returns this\n */\nproto.brand.BrandShop.prototype.setMerchantId = function(value) {\n  return jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.brand.BrandShop} returns this\n */\nproto.brand.BrandShop.prototype.clearMerchantId = function() {\n  return jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.brand.BrandShop.prototype.hasMerchantId = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string shop_id = 2;\n * @return {string}\n */\nproto.brand.BrandShop.prototype.getShopId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.BrandShop} returns this\n */\nproto.brand.BrandShop.prototype.setShopId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.brand.BrandShop.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.BrandShop} returns this\n */\nproto.brand.BrandShop.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.brand.CreateOrUpdateBrandRequest.repeatedFields_ = [5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.CreateOrUpdateBrandRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.CreateOrUpdateBrandRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateBrandRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    brand: (f = msg.getBrand()) && proto.brand.Brand.toObject(includeInstance, f),\n    phone: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    shopsList: jspb.Message.toObjectList(msg.getShopsList(),\n    proto.brand.BrandShop.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.CreateOrUpdateBrandRequest}\n */\nproto.brand.CreateOrUpdateBrandRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.CreateOrUpdateBrandRequest;\n  return proto.brand.CreateOrUpdateBrandRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.CreateOrUpdateBrandRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.CreateOrUpdateBrandRequest}\n */\nproto.brand.CreateOrUpdateBrandRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandId(value);\n      break;\n    case 2:\n      var value = new proto.brand.Brand;\n      reader.readMessage(value,proto.brand.Brand.deserializeBinaryFromReader);\n      msg.setBrand(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPhone(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    case 5:\n      var value = new proto.brand.BrandShop;\n      reader.readMessage(value,proto.brand.BrandShop.deserializeBinaryFromReader);\n      msg.addShops(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.CreateOrUpdateBrandRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.CreateOrUpdateBrandRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateBrandRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getBrand();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.brand.Brand.serializeBinaryToWriter\n    );\n  }\n  f = message.getPhone();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getShopsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.brand.BrandShop.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string brand_id = 1;\n * @return {string}\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.getBrandId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateBrandRequest} returns this\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.setBrandId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional Brand brand = 2;\n * @return {?proto.brand.Brand}\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.getBrand = function() {\n  return /** @type{?proto.brand.Brand} */ (\n    jspb.Message.getWrapperField(this, proto.brand.Brand, 2));\n};\n\n\n/**\n * @param {?proto.brand.Brand|undefined} value\n * @return {!proto.brand.CreateOrUpdateBrandRequest} returns this\n*/\nproto.brand.CreateOrUpdateBrandRequest.prototype.setBrand = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.brand.CreateOrUpdateBrandRequest} returns this\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.clearBrand = function() {\n  return this.setBrand(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.hasBrand = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string phone = 3;\n * @return {string}\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.getPhone = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateBrandRequest} returns this\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.setPhone = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string password = 4;\n * @return {string}\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateBrandRequest} returns this\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.setPassword = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * repeated BrandShop shops = 5;\n * @return {!Array<!proto.brand.BrandShop>}\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.getShopsList = function() {\n  return /** @type{!Array<!proto.brand.BrandShop>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.brand.BrandShop, 5));\n};\n\n\n/**\n * @param {!Array<!proto.brand.BrandShop>} value\n * @return {!proto.brand.CreateOrUpdateBrandRequest} returns this\n*/\nproto.brand.CreateOrUpdateBrandRequest.prototype.setShopsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.brand.BrandShop=} opt_value\n * @param {number=} opt_index\n * @return {!proto.brand.BrandShop}\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.addShops = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.brand.BrandShop, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.brand.CreateOrUpdateBrandRequest} returns this\n */\nproto.brand.CreateOrUpdateBrandRequest.prototype.clearShopsList = function() {\n  return this.setShopsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.CreateOrUpdateBrandResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.CreateOrUpdateBrandResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.CreateOrUpdateBrandResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateBrandResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    updatedBrand: (f = msg.getUpdatedBrand()) && proto.brand.Brand.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.CreateOrUpdateBrandResponse}\n */\nproto.brand.CreateOrUpdateBrandResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.CreateOrUpdateBrandResponse;\n  return proto.brand.CreateOrUpdateBrandResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.CreateOrUpdateBrandResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.CreateOrUpdateBrandResponse}\n */\nproto.brand.CreateOrUpdateBrandResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.brand.Brand;\n      reader.readMessage(value,proto.brand.Brand.deserializeBinaryFromReader);\n      msg.setUpdatedBrand(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.CreateOrUpdateBrandResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.CreateOrUpdateBrandResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.CreateOrUpdateBrandResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateBrandResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUpdatedBrand();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.brand.Brand.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.brand.CreateOrUpdateBrandResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.brand.CreateOrUpdateBrandResponse} returns this\n */\nproto.brand.CreateOrUpdateBrandResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.brand.CreateOrUpdateBrandResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateBrandResponse} returns this\n */\nproto.brand.CreateOrUpdateBrandResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional Brand updated_brand = 3;\n * @return {?proto.brand.Brand}\n */\nproto.brand.CreateOrUpdateBrandResponse.prototype.getUpdatedBrand = function() {\n  return /** @type{?proto.brand.Brand} */ (\n    jspb.Message.getWrapperField(this, proto.brand.Brand, 3));\n};\n\n\n/**\n * @param {?proto.brand.Brand|undefined} value\n * @return {!proto.brand.CreateOrUpdateBrandResponse} returns this\n*/\nproto.brand.CreateOrUpdateBrandResponse.prototype.setUpdatedBrand = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.brand.CreateOrUpdateBrandResponse} returns this\n */\nproto.brand.CreateOrUpdateBrandResponse.prototype.clearUpdatedBrand = function() {\n  return this.setUpdatedBrand(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.brand.CreateOrUpdateBrandResponse.prototype.hasUpdatedBrand = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.GetBrandByIdRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.GetBrandByIdRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.GetBrandByIdRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.GetBrandByIdRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.GetBrandByIdRequest}\n */\nproto.brand.GetBrandByIdRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.GetBrandByIdRequest;\n  return proto.brand.GetBrandByIdRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.GetBrandByIdRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.GetBrandByIdRequest}\n */\nproto.brand.GetBrandByIdRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.GetBrandByIdRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.GetBrandByIdRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.GetBrandByIdRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.GetBrandByIdRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string brand_id = 1;\n * @return {string}\n */\nproto.brand.GetBrandByIdRequest.prototype.getBrandId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.GetBrandByIdRequest} returns this\n */\nproto.brand.GetBrandByIdRequest.prototype.setBrandId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.GetBrandByIdResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.GetBrandByIdResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.GetBrandByIdResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.GetBrandByIdResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    brand: (f = msg.getBrand()) && proto.brand.Brand.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.GetBrandByIdResponse}\n */\nproto.brand.GetBrandByIdResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.GetBrandByIdResponse;\n  return proto.brand.GetBrandByIdResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.GetBrandByIdResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.GetBrandByIdResponse}\n */\nproto.brand.GetBrandByIdResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.brand.Brand;\n      reader.readMessage(value,proto.brand.Brand.deserializeBinaryFromReader);\n      msg.setBrand(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.GetBrandByIdResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.GetBrandByIdResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.GetBrandByIdResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.GetBrandByIdResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getBrand();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.brand.Brand.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.brand.GetBrandByIdResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.brand.GetBrandByIdResponse} returns this\n */\nproto.brand.GetBrandByIdResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.brand.GetBrandByIdResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.GetBrandByIdResponse} returns this\n */\nproto.brand.GetBrandByIdResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional Brand brand = 3;\n * @return {?proto.brand.Brand}\n */\nproto.brand.GetBrandByIdResponse.prototype.getBrand = function() {\n  return /** @type{?proto.brand.Brand} */ (\n    jspb.Message.getWrapperField(this, proto.brand.Brand, 3));\n};\n\n\n/**\n * @param {?proto.brand.Brand|undefined} value\n * @return {!proto.brand.GetBrandByIdResponse} returns this\n*/\nproto.brand.GetBrandByIdResponse.prototype.setBrand = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.brand.GetBrandByIdResponse} returns this\n */\nproto.brand.GetBrandByIdResponse.prototype.clearBrand = function() {\n  return this.setBrand(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.brand.GetBrandByIdResponse.prototype.hasBrand = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.DeleteBrandByIdRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.DeleteBrandByIdRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.DeleteBrandByIdRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.DeleteBrandByIdRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.DeleteBrandByIdRequest}\n */\nproto.brand.DeleteBrandByIdRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.DeleteBrandByIdRequest;\n  return proto.brand.DeleteBrandByIdRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.DeleteBrandByIdRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.DeleteBrandByIdRequest}\n */\nproto.brand.DeleteBrandByIdRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.DeleteBrandByIdRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.DeleteBrandByIdRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.DeleteBrandByIdRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.DeleteBrandByIdRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string brand_id = 1;\n * @return {string}\n */\nproto.brand.DeleteBrandByIdRequest.prototype.getBrandId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.DeleteBrandByIdRequest} returns this\n */\nproto.brand.DeleteBrandByIdRequest.prototype.setBrandId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.DeleteBrandByIdResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.DeleteBrandByIdResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.DeleteBrandByIdResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.DeleteBrandByIdResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.DeleteBrandByIdResponse}\n */\nproto.brand.DeleteBrandByIdResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.DeleteBrandByIdResponse;\n  return proto.brand.DeleteBrandByIdResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.DeleteBrandByIdResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.DeleteBrandByIdResponse}\n */\nproto.brand.DeleteBrandByIdResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.DeleteBrandByIdResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.DeleteBrandByIdResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.DeleteBrandByIdResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.DeleteBrandByIdResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.brand.DeleteBrandByIdResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.brand.DeleteBrandByIdResponse} returns this\n */\nproto.brand.DeleteBrandByIdResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.brand.DeleteBrandByIdResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.DeleteBrandByIdResponse} returns this\n */\nproto.brand.DeleteBrandByIdResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.CreateOrUpdateLineConnectionRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.CreateOrUpdateLineConnectionRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.CreateOrUpdateLineConnectionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateLineConnectionRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandCode: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    lineConnection: (f = msg.getLineConnection()) && proto.brand.LineConnection.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.CreateOrUpdateLineConnectionRequest}\n */\nproto.brand.CreateOrUpdateLineConnectionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.CreateOrUpdateLineConnectionRequest;\n  return proto.brand.CreateOrUpdateLineConnectionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.CreateOrUpdateLineConnectionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.CreateOrUpdateLineConnectionRequest}\n */\nproto.brand.CreateOrUpdateLineConnectionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandCode(value);\n      break;\n    case 2:\n      var value = new proto.brand.LineConnection;\n      reader.readMessage(value,proto.brand.LineConnection.deserializeBinaryFromReader);\n      msg.setLineConnection(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.CreateOrUpdateLineConnectionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.CreateOrUpdateLineConnectionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.CreateOrUpdateLineConnectionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateLineConnectionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandCode();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getLineConnection();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.brand.LineConnection.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string brand_code = 1;\n * @return {string}\n */\nproto.brand.CreateOrUpdateLineConnectionRequest.prototype.getBrandCode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateLineConnectionRequest} returns this\n */\nproto.brand.CreateOrUpdateLineConnectionRequest.prototype.setBrandCode = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional LineConnection line_connection = 2;\n * @return {?proto.brand.LineConnection}\n */\nproto.brand.CreateOrUpdateLineConnectionRequest.prototype.getLineConnection = function() {\n  return /** @type{?proto.brand.LineConnection} */ (\n    jspb.Message.getWrapperField(this, proto.brand.LineConnection, 2));\n};\n\n\n/**\n * @param {?proto.brand.LineConnection|undefined} value\n * @return {!proto.brand.CreateOrUpdateLineConnectionRequest} returns this\n*/\nproto.brand.CreateOrUpdateLineConnectionRequest.prototype.setLineConnection = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.brand.CreateOrUpdateLineConnectionRequest} returns this\n */\nproto.brand.CreateOrUpdateLineConnectionRequest.prototype.clearLineConnection = function() {\n  return this.setLineConnection(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.brand.CreateOrUpdateLineConnectionRequest.prototype.hasLineConnection = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.CreateOrUpdateLineConnectionResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.CreateOrUpdateLineConnectionResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    brand: (f = msg.getBrand()) && proto.brand.Brand.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.CreateOrUpdateLineConnectionResponse}\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.CreateOrUpdateLineConnectionResponse;\n  return proto.brand.CreateOrUpdateLineConnectionResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.CreateOrUpdateLineConnectionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.CreateOrUpdateLineConnectionResponse}\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.brand.Brand;\n      reader.readMessage(value,proto.brand.Brand.deserializeBinaryFromReader);\n      msg.setBrand(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.CreateOrUpdateLineConnectionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.CreateOrUpdateLineConnectionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getBrand();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.brand.Brand.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.brand.CreateOrUpdateLineConnectionResponse} returns this\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateLineConnectionResponse} returns this\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional Brand brand = 3;\n * @return {?proto.brand.Brand}\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.prototype.getBrand = function() {\n  return /** @type{?proto.brand.Brand} */ (\n    jspb.Message.getWrapperField(this, proto.brand.Brand, 3));\n};\n\n\n/**\n * @param {?proto.brand.Brand|undefined} value\n * @return {!proto.brand.CreateOrUpdateLineConnectionResponse} returns this\n*/\nproto.brand.CreateOrUpdateLineConnectionResponse.prototype.setBrand = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.brand.CreateOrUpdateLineConnectionResponse} returns this\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.prototype.clearBrand = function() {\n  return this.setBrand(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.brand.CreateOrUpdateLineConnectionResponse.prototype.hasBrand = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.CreateOrUpdateZaloConnectionRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.CreateOrUpdateZaloConnectionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandCode: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    zaloOaId: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    appId: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    secretKeyZalo: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.CreateOrUpdateZaloConnectionRequest}\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.CreateOrUpdateZaloConnectionRequest;\n  return proto.brand.CreateOrUpdateZaloConnectionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.CreateOrUpdateZaloConnectionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.CreateOrUpdateZaloConnectionRequest}\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setZaloOaId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAppId(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSecretKeyZalo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.CreateOrUpdateZaloConnectionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.CreateOrUpdateZaloConnectionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandCode();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getZaloOaId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAppId();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getSecretKeyZalo();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string brand_code = 1;\n * @return {string}\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.prototype.getBrandCode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateZaloConnectionRequest} returns this\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.prototype.setBrandCode = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string zalo_oa_id = 2;\n * @return {string}\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.prototype.getZaloOaId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateZaloConnectionRequest} returns this\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.prototype.setZaloOaId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string app_id = 3;\n * @return {string}\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.prototype.getAppId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateZaloConnectionRequest} returns this\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.prototype.setAppId = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string secret_key_zalo = 4;\n * @return {string}\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.prototype.getSecretKeyZalo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateZaloConnectionRequest} returns this\n */\nproto.brand.CreateOrUpdateZaloConnectionRequest.prototype.setSecretKeyZalo = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.CreateOrUpdateZaloConnectionResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.CreateOrUpdateZaloConnectionResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.CreateOrUpdateZaloConnectionResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateZaloConnectionResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.CreateOrUpdateZaloConnectionResponse}\n */\nproto.brand.CreateOrUpdateZaloConnectionResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.CreateOrUpdateZaloConnectionResponse;\n  return proto.brand.CreateOrUpdateZaloConnectionResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.CreateOrUpdateZaloConnectionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.CreateOrUpdateZaloConnectionResponse}\n */\nproto.brand.CreateOrUpdateZaloConnectionResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.CreateOrUpdateZaloConnectionResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.CreateOrUpdateZaloConnectionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.CreateOrUpdateZaloConnectionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateZaloConnectionResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.brand.CreateOrUpdateZaloConnectionResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.brand.CreateOrUpdateZaloConnectionResponse} returns this\n */\nproto.brand.CreateOrUpdateZaloConnectionResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.brand.CreateOrUpdateZaloConnectionResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateZaloConnectionResponse} returns this\n */\nproto.brand.CreateOrUpdateZaloConnectionResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.CreateOrUpdateZaloMiniappConnectionRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    brandCode: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    zaloMiniAppId: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    purchaseSdkPrivateKey: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.CreateOrUpdateZaloMiniappConnectionRequest}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.CreateOrUpdateZaloMiniappConnectionRequest;\n  return proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.CreateOrUpdateZaloMiniappConnectionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.CreateOrUpdateZaloMiniappConnectionRequest}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBrandCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setZaloMiniAppId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPurchaseSdkPrivateKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.CreateOrUpdateZaloMiniappConnectionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBrandCode();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getZaloMiniAppId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPurchaseSdkPrivateKey();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string brand_code = 1;\n * @return {string}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.getBrandCode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateZaloMiniappConnectionRequest} returns this\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.setBrandCode = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string zalo_mini_app_id = 2;\n * @return {string}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.getZaloMiniAppId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateZaloMiniappConnectionRequest} returns this\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.setZaloMiniAppId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string purchase_sdk_private_key = 3;\n * @return {string}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.getPurchaseSdkPrivateKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateZaloMiniappConnectionRequest} returns this\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.setPurchaseSdkPrivateKey = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.CreateOrUpdateZaloMiniappConnectionResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    brand: (f = msg.getBrand()) && proto.brand.Brand.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.CreateOrUpdateZaloMiniappConnectionResponse}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.CreateOrUpdateZaloMiniappConnectionResponse;\n  return proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.CreateOrUpdateZaloMiniappConnectionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.CreateOrUpdateZaloMiniappConnectionResponse}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.brand.Brand;\n      reader.readMessage(value,proto.brand.Brand.deserializeBinaryFromReader);\n      msg.setBrand(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.CreateOrUpdateZaloMiniappConnectionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getBrand();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.brand.Brand.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.brand.CreateOrUpdateZaloMiniappConnectionResponse} returns this\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.CreateOrUpdateZaloMiniappConnectionResponse} returns this\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional Brand brand = 3;\n * @return {?proto.brand.Brand}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.getBrand = function() {\n  return /** @type{?proto.brand.Brand} */ (\n    jspb.Message.getWrapperField(this, proto.brand.Brand, 3));\n};\n\n\n/**\n * @param {?proto.brand.Brand|undefined} value\n * @return {!proto.brand.CreateOrUpdateZaloMiniappConnectionResponse} returns this\n*/\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.setBrand = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.brand.CreateOrUpdateZaloMiniappConnectionResponse} returns this\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.clearBrand = function() {\n  return this.setBrand(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.hasBrand = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.GetAllBrandRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.GetAllBrandRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.GetAllBrandRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.GetAllBrandRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    searchText: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    paginationrequest: (f = msg.getPaginationrequest()) && common_pb.PaginationRequest.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.GetAllBrandRequest}\n */\nproto.brand.GetAllBrandRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.GetAllBrandRequest;\n  return proto.brand.GetAllBrandRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.GetAllBrandRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.GetAllBrandRequest}\n */\nproto.brand.GetAllBrandRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSearchText(value);\n      break;\n    case 2:\n      var value = new common_pb.PaginationRequest;\n      reader.readMessage(value,common_pb.PaginationRequest.deserializeBinaryFromReader);\n      msg.setPaginationrequest(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.GetAllBrandRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.GetAllBrandRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.GetAllBrandRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.GetAllBrandRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSearchText();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPaginationrequest();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      common_pb.PaginationRequest.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string search_text = 1;\n * @return {string}\n */\nproto.brand.GetAllBrandRequest.prototype.getSearchText = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.GetAllBrandRequest} returns this\n */\nproto.brand.GetAllBrandRequest.prototype.setSearchText = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional common.PaginationRequest paginationRequest = 2;\n * @return {?proto.common.PaginationRequest}\n */\nproto.brand.GetAllBrandRequest.prototype.getPaginationrequest = function() {\n  return /** @type{?proto.common.PaginationRequest} */ (\n    jspb.Message.getWrapperField(this, common_pb.PaginationRequest, 2));\n};\n\n\n/**\n * @param {?proto.common.PaginationRequest|undefined} value\n * @return {!proto.brand.GetAllBrandRequest} returns this\n*/\nproto.brand.GetAllBrandRequest.prototype.setPaginationrequest = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.brand.GetAllBrandRequest} returns this\n */\nproto.brand.GetAllBrandRequest.prototype.clearPaginationrequest = function() {\n  return this.setPaginationrequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.brand.GetAllBrandRequest.prototype.hasPaginationrequest = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.brand.GetAllBrandResponse.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.brand.GetAllBrandResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.brand.GetAllBrandResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.brand.GetAllBrandResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.GetAllBrandResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    brandsList: jspb.Message.toObjectList(msg.getBrandsList(),\n    proto.brand.Brand.toObject, includeInstance),\n    pagination: (f = msg.getPagination()) && common_pb.PaginationResponse.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.brand.GetAllBrandResponse}\n */\nproto.brand.GetAllBrandResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.brand.GetAllBrandResponse;\n  return proto.brand.GetAllBrandResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.brand.GetAllBrandResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.brand.GetAllBrandResponse}\n */\nproto.brand.GetAllBrandResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.brand.Brand;\n      reader.readMessage(value,proto.brand.Brand.deserializeBinaryFromReader);\n      msg.addBrands(value);\n      break;\n    case 4:\n      var value = new common_pb.PaginationResponse;\n      reader.readMessage(value,common_pb.PaginationResponse.deserializeBinaryFromReader);\n      msg.setPagination(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.brand.GetAllBrandResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.brand.GetAllBrandResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.brand.GetAllBrandResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.brand.GetAllBrandResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getBrandsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.brand.Brand.serializeBinaryToWriter\n    );\n  }\n  f = message.getPagination();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      common_pb.PaginationResponse.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.brand.GetAllBrandResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.brand.GetAllBrandResponse} returns this\n */\nproto.brand.GetAllBrandResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.brand.GetAllBrandResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.brand.GetAllBrandResponse} returns this\n */\nproto.brand.GetAllBrandResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated Brand brands = 3;\n * @return {!Array<!proto.brand.Brand>}\n */\nproto.brand.GetAllBrandResponse.prototype.getBrandsList = function() {\n  return /** @type{!Array<!proto.brand.Brand>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.brand.Brand, 3));\n};\n\n\n/**\n * @param {!Array<!proto.brand.Brand>} value\n * @return {!proto.brand.GetAllBrandResponse} returns this\n*/\nproto.brand.GetAllBrandResponse.prototype.setBrandsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.brand.Brand=} opt_value\n * @param {number=} opt_index\n * @return {!proto.brand.Brand}\n */\nproto.brand.GetAllBrandResponse.prototype.addBrands = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.brand.Brand, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.brand.GetAllBrandResponse} returns this\n */\nproto.brand.GetAllBrandResponse.prototype.clearBrandsList = function() {\n  return this.setBrandsList([]);\n};\n\n\n/**\n * optional common.PaginationResponse pagination = 4;\n * @return {?proto.common.PaginationResponse}\n */\nproto.brand.GetAllBrandResponse.prototype.getPagination = function() {\n  return /** @type{?proto.common.PaginationResponse} */ (\n    jspb.Message.getWrapperField(this, common_pb.PaginationResponse, 4));\n};\n\n\n/**\n * @param {?proto.common.PaginationResponse|undefined} value\n * @return {!proto.brand.GetAllBrandResponse} returns this\n*/\nproto.brand.GetAllBrandResponse.prototype.setPagination = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.brand.GetAllBrandResponse} returns this\n */\nproto.brand.GetAllBrandResponse.prototype.clearPagination = function() {\n  return this.setPagination(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.brand.GetAllBrandResponse.prototype.hasPagination = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * @enum {number}\n */\nproto.brand.BrandType = {\n  RESTAURANT: 0,\n  LAUNDRY: 1\n};\n\ngoog.object.extend(exports, proto.brand);\n"],
  "mappings": "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",
  "names": []
}
