{
  "version": 3,
  "sources": ["../../grpc-web-client-gen/country_pb.js"],
  "sourcesContent": ["// source: country.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() {\n  if (this) { return this; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  if (typeof self !== 'undefined') { return self; }\n  return Function('return this')();\n}.call(null));\n\ngoog.exportSymbol('proto.country.City', null, global);\ngoog.exportSymbol('proto.country.CountryName', null, global);\ngoog.exportSymbol('proto.country.District', null, global);\ngoog.exportSymbol('proto.country.GetCitiesByCountryRequest', null, global);\ngoog.exportSymbol('proto.country.GetCitiesByCountryResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.country.District = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.country.District, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.country.District.displayName = 'proto.country.District';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.country.City = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.country.City.repeatedFields_, null);\n};\ngoog.inherits(proto.country.City, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.country.City.displayName = 'proto.country.City';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.country.GetCitiesByCountryRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.country.GetCitiesByCountryRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.country.GetCitiesByCountryRequest.displayName = 'proto.country.GetCitiesByCountryRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.country.GetCitiesByCountryResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.country.GetCitiesByCountryResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.country.GetCitiesByCountryResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.country.GetCitiesByCountryResponse.displayName = 'proto.country.GetCitiesByCountryResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.country.District.prototype.toObject = function(opt_includeInstance) {\n  return proto.country.District.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.country.District} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.country.District.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    districtName: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.country.District}\n */\nproto.country.District.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.country.District;\n  return proto.country.District.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.country.District} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.country.District}\n */\nproto.country.District.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDistrictName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.country.District.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.country.District.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.country.District} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.country.District.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDistrictName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string district_name = 2;\n * @return {string}\n */\nproto.country.District.prototype.getDistrictName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.country.District} returns this\n */\nproto.country.District.prototype.setDistrictName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.country.City.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.country.City.prototype.toObject = function(opt_includeInstance) {\n  return proto.country.City.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.country.City} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.country.City.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cityName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    districtsList: jspb.Message.toObjectList(msg.getDistrictsList(),\n    proto.country.District.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.country.City}\n */\nproto.country.City.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.country.City;\n  return proto.country.City.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.country.City} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.country.City}\n */\nproto.country.City.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCityName(value);\n      break;\n    case 3:\n      var value = new proto.country.District;\n      reader.readMessage(value,proto.country.District.deserializeBinaryFromReader);\n      msg.addDistricts(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.country.City.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.country.City.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.country.City} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.country.City.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCityName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDistrictsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.country.District.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string city_name = 2;\n * @return {string}\n */\nproto.country.City.prototype.getCityName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.country.City} returns this\n */\nproto.country.City.prototype.setCityName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated District districts = 3;\n * @return {!Array<!proto.country.District>}\n */\nproto.country.City.prototype.getDistrictsList = function() {\n  return /** @type{!Array<!proto.country.District>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.country.District, 3));\n};\n\n\n/**\n * @param {!Array<!proto.country.District>} value\n * @return {!proto.country.City} returns this\n*/\nproto.country.City.prototype.setDistrictsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.country.District=} opt_value\n * @param {number=} opt_index\n * @return {!proto.country.District}\n */\nproto.country.City.prototype.addDistricts = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.country.District, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.country.City} returns this\n */\nproto.country.City.prototype.clearDistrictsList = function() {\n  return this.setDistrictsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.country.GetCitiesByCountryRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.country.GetCitiesByCountryRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.country.GetCitiesByCountryRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.country.GetCitiesByCountryRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    countryName: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.country.GetCitiesByCountryRequest}\n */\nproto.country.GetCitiesByCountryRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.country.GetCitiesByCountryRequest;\n  return proto.country.GetCitiesByCountryRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.country.GetCitiesByCountryRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.country.GetCitiesByCountryRequest}\n */\nproto.country.GetCitiesByCountryRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.country.CountryName} */ (reader.readEnum());\n      msg.setCountryName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.country.GetCitiesByCountryRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.country.GetCitiesByCountryRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.country.GetCitiesByCountryRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.country.GetCitiesByCountryRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCountryName();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional CountryName country_name = 1;\n * @return {!proto.country.CountryName}\n */\nproto.country.GetCitiesByCountryRequest.prototype.getCountryName = function() {\n  return /** @type {!proto.country.CountryName} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.country.CountryName} value\n * @return {!proto.country.GetCitiesByCountryRequest} returns this\n */\nproto.country.GetCitiesByCountryRequest.prototype.setCountryName = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.country.GetCitiesByCountryResponse.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.country.GetCitiesByCountryResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.country.GetCitiesByCountryResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.country.GetCitiesByCountryResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.country.GetCitiesByCountryResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    citiesList: jspb.Message.toObjectList(msg.getCitiesList(),\n    proto.country.City.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.country.GetCitiesByCountryResponse}\n */\nproto.country.GetCitiesByCountryResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.country.GetCitiesByCountryResponse;\n  return proto.country.GetCitiesByCountryResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.country.GetCitiesByCountryResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.country.GetCitiesByCountryResponse}\n */\nproto.country.GetCitiesByCountryResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    case 3:\n      var value = new proto.country.City;\n      reader.readMessage(value,proto.country.City.deserializeBinaryFromReader);\n      msg.addCities(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.country.GetCitiesByCountryResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.country.GetCitiesByCountryResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.country.GetCitiesByCountryResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.country.GetCitiesByCountryResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCitiesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.country.City.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 code = 1;\n * @return {number}\n */\nproto.country.GetCitiesByCountryResponse.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.country.GetCitiesByCountryResponse} returns this\n */\nproto.country.GetCitiesByCountryResponse.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.country.GetCitiesByCountryResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.country.GetCitiesByCountryResponse} returns this\n */\nproto.country.GetCitiesByCountryResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated City cities = 3;\n * @return {!Array<!proto.country.City>}\n */\nproto.country.GetCitiesByCountryResponse.prototype.getCitiesList = function() {\n  return /** @type{!Array<!proto.country.City>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.country.City, 3));\n};\n\n\n/**\n * @param {!Array<!proto.country.City>} value\n * @return {!proto.country.GetCitiesByCountryResponse} returns this\n*/\nproto.country.GetCitiesByCountryResponse.prototype.setCitiesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.country.City=} opt_value\n * @param {number=} opt_index\n * @return {!proto.country.City}\n */\nproto.country.GetCitiesByCountryResponse.prototype.addCities = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.country.City, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.country.GetCitiesByCountryResponse} returns this\n */\nproto.country.GetCitiesByCountryResponse.prototype.clearCitiesList = function() {\n  return this.setCitiesList([]);\n};\n\n\n/**\n * @enum {number}\n */\nproto.country.CountryName = {\n  VIETNAM: 0,\n  THAILAND: 1,\n  JAPAN: 2\n};\n\ngoog.object.extend(exports, proto.country);\n"],
  "mappings": "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",
  "names": []
}
