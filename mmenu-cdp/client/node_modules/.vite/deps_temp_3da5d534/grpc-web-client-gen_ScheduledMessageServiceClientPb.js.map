{
  "version": 3,
  "sources": ["../../grpc-web-client-gen/ScheduledMessageServiceClientPb.ts"],
  "sourcesContent": ["/**\n * @fileoverview gRPC-Web generated client stub for scheduledMessage\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.5.0\n// \tprotoc              v3.19.1\n// source: scheduledMessage.proto\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\nimport * as grpcWeb from 'grpc-web';\n\nimport * as scheduledMessage_pb from './scheduledMessage_pb'; // proto import: \"scheduledMessage.proto\"\n\n\nexport class ScheduledMessageRoutesClient {\n  client_: grpcWeb.AbstractClientBase;\n  hostname_: string;\n  credentials_: null | { [index: string]: string; };\n  options_: null | { [index: string]: any; };\n\n  constructor (hostname: string,\n               credentials?: null | { [index: string]: string; },\n               options?: null | { [index: string]: any; }) {\n    if (!options) options = {};\n    if (!credentials) credentials = {};\n    options['format'] = 'text';\n\n    this.client_ = new grpcWeb.GrpcWebClientBase(options);\n    this.hostname_ = hostname.replace(/\\/+$/, '');\n    this.credentials_ = credentials;\n    this.options_ = options;\n  }\n\n  methodDescriptorcreateScheduledMessage = new grpcWeb.MethodDescriptor(\n    '/scheduledMessage.ScheduledMessageRoutes/createScheduledMessage',\n    grpcWeb.MethodType.UNARY,\n    scheduledMessage_pb.CreateScheduledMessageRequest,\n    scheduledMessage_pb.CreateScheduledMessageResponse,\n    (request: scheduledMessage_pb.CreateScheduledMessageRequest) => {\n      return request.serializeBinary();\n    },\n    scheduledMessage_pb.CreateScheduledMessageResponse.deserializeBinary\n  );\n\n  createScheduledMessage(\n    request: scheduledMessage_pb.CreateScheduledMessageRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<scheduledMessage_pb.CreateScheduledMessageResponse>;\n\n  createScheduledMessage(\n    request: scheduledMessage_pb.CreateScheduledMessageRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: scheduledMessage_pb.CreateScheduledMessageResponse) => void): grpcWeb.ClientReadableStream<scheduledMessage_pb.CreateScheduledMessageResponse>;\n\n  createScheduledMessage(\n    request: scheduledMessage_pb.CreateScheduledMessageRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: scheduledMessage_pb.CreateScheduledMessageResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/scheduledMessage.ScheduledMessageRoutes/createScheduledMessage',\n        request,\n        metadata || {},\n        this.methodDescriptorcreateScheduledMessage,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/scheduledMessage.ScheduledMessageRoutes/createScheduledMessage',\n    request,\n    metadata || {},\n    this.methodDescriptorcreateScheduledMessage);\n  }\n\n  methodDescriptorgetAllScheduledMessages = new grpcWeb.MethodDescriptor(\n    '/scheduledMessage.ScheduledMessageRoutes/getAllScheduledMessages',\n    grpcWeb.MethodType.UNARY,\n    scheduledMessage_pb.GetAllScheduledMessagesRequest,\n    scheduledMessage_pb.GetAllScheduledMessagesResponse,\n    (request: scheduledMessage_pb.GetAllScheduledMessagesRequest) => {\n      return request.serializeBinary();\n    },\n    scheduledMessage_pb.GetAllScheduledMessagesResponse.deserializeBinary\n  );\n\n  getAllScheduledMessages(\n    request: scheduledMessage_pb.GetAllScheduledMessagesRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<scheduledMessage_pb.GetAllScheduledMessagesResponse>;\n\n  getAllScheduledMessages(\n    request: scheduledMessage_pb.GetAllScheduledMessagesRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: scheduledMessage_pb.GetAllScheduledMessagesResponse) => void): grpcWeb.ClientReadableStream<scheduledMessage_pb.GetAllScheduledMessagesResponse>;\n\n  getAllScheduledMessages(\n    request: scheduledMessage_pb.GetAllScheduledMessagesRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: scheduledMessage_pb.GetAllScheduledMessagesResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/scheduledMessage.ScheduledMessageRoutes/getAllScheduledMessages',\n        request,\n        metadata || {},\n        this.methodDescriptorgetAllScheduledMessages,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/scheduledMessage.ScheduledMessageRoutes/getAllScheduledMessages',\n    request,\n    metadata || {},\n    this.methodDescriptorgetAllScheduledMessages);\n  }\n\n  methodDescriptorgetScheduledMessage = new grpcWeb.MethodDescriptor(\n    '/scheduledMessage.ScheduledMessageRoutes/getScheduledMessage',\n    grpcWeb.MethodType.UNARY,\n    scheduledMessage_pb.GetScheduledMessageRequest,\n    scheduledMessage_pb.GetScheduledMessageResponse,\n    (request: scheduledMessage_pb.GetScheduledMessageRequest) => {\n      return request.serializeBinary();\n    },\n    scheduledMessage_pb.GetScheduledMessageResponse.deserializeBinary\n  );\n\n  getScheduledMessage(\n    request: scheduledMessage_pb.GetScheduledMessageRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<scheduledMessage_pb.GetScheduledMessageResponse>;\n\n  getScheduledMessage(\n    request: scheduledMessage_pb.GetScheduledMessageRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: scheduledMessage_pb.GetScheduledMessageResponse) => void): grpcWeb.ClientReadableStream<scheduledMessage_pb.GetScheduledMessageResponse>;\n\n  getScheduledMessage(\n    request: scheduledMessage_pb.GetScheduledMessageRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: scheduledMessage_pb.GetScheduledMessageResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/scheduledMessage.ScheduledMessageRoutes/getScheduledMessage',\n        request,\n        metadata || {},\n        this.methodDescriptorgetScheduledMessage,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/scheduledMessage.ScheduledMessageRoutes/getScheduledMessage',\n    request,\n    metadata || {},\n    this.methodDescriptorgetScheduledMessage);\n  }\n\n  methodDescriptordeleteScheduledMessage = new grpcWeb.MethodDescriptor(\n    '/scheduledMessage.ScheduledMessageRoutes/deleteScheduledMessage',\n    grpcWeb.MethodType.UNARY,\n    scheduledMessage_pb.DeleteScheduledMessageRequest,\n    scheduledMessage_pb.DeleteScheduledMessageResponse,\n    (request: scheduledMessage_pb.DeleteScheduledMessageRequest) => {\n      return request.serializeBinary();\n    },\n    scheduledMessage_pb.DeleteScheduledMessageResponse.deserializeBinary\n  );\n\n  deleteScheduledMessage(\n    request: scheduledMessage_pb.DeleteScheduledMessageRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<scheduledMessage_pb.DeleteScheduledMessageResponse>;\n\n  deleteScheduledMessage(\n    request: scheduledMessage_pb.DeleteScheduledMessageRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: scheduledMessage_pb.DeleteScheduledMessageResponse) => void): grpcWeb.ClientReadableStream<scheduledMessage_pb.DeleteScheduledMessageResponse>;\n\n  deleteScheduledMessage(\n    request: scheduledMessage_pb.DeleteScheduledMessageRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: scheduledMessage_pb.DeleteScheduledMessageResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/scheduledMessage.ScheduledMessageRoutes/deleteScheduledMessage',\n        request,\n        metadata || {},\n        this.methodDescriptordeleteScheduledMessage,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/scheduledMessage.ScheduledMessageRoutes/deleteScheduledMessage',\n    request,\n    metadata || {},\n    this.methodDescriptordeleteScheduledMessage);\n  }\n\n}\n\n"],
  "mappings": "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",
  "names": []
}
