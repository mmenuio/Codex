import {
  require_country_pb
} from "./chunk-O4IWROO5.js";
import {
  require_merchant_pb
} from "./chunk-ANXG7VLJ.js";
import {
  require_common_pb
} from "./chunk-SZ7F7SCX.js";
import {
  require_google_protobuf
} from "./chunk-RB4XWN7V.js";
import {
  __commonJS
} from "./chunk-EWTE5DHJ.js";

// node_modules/grpc-web-client-gen/brand_pb.js
var require_brand_pb = __commonJS({
  "node_modules/grpc-web-client-gen/brand_pb.js"(exports) {
    var jspb = require_google_protobuf();
    var goog = jspb;
    var global = (function() {
      if (this) {
        return this;
      }
      if (typeof window !== "undefined") {
        return window;
      }
      if (typeof global !== "undefined") {
        return global;
      }
      if (typeof self !== "undefined") {
        return self;
      }
      return Function("return this")();
    }).call(null);
    var merchant_pb = require_merchant_pb();
    goog.object.extend(proto, merchant_pb);
    var country_pb = require_country_pb();
    goog.object.extend(proto, country_pb);
    var common_pb = require_common_pb();
    goog.object.extend(proto, common_pb);
    goog.exportSymbol("proto.brand.Brand", null, global);
    goog.exportSymbol("proto.brand.Brand.ZaloMiniApp", null, global);
    goog.exportSymbol("proto.brand.BrandShop", null, global);
    goog.exportSymbol("proto.brand.BrandType", null, global);
    goog.exportSymbol("proto.brand.CreateOrUpdateBrandRequest", null, global);
    goog.exportSymbol("proto.brand.CreateOrUpdateBrandResponse", null, global);
    goog.exportSymbol("proto.brand.CreateOrUpdateLineConnectionRequest", null, global);
    goog.exportSymbol("proto.brand.CreateOrUpdateLineConnectionResponse", null, global);
    goog.exportSymbol("proto.brand.CreateOrUpdateZaloConnectionRequest", null, global);
    goog.exportSymbol("proto.brand.CreateOrUpdateZaloConnectionResponse", null, global);
    goog.exportSymbol("proto.brand.CreateOrUpdateZaloMiniappConnectionRequest", null, global);
    goog.exportSymbol("proto.brand.CreateOrUpdateZaloMiniappConnectionResponse", null, global);
    goog.exportSymbol("proto.brand.DeleteBrandByIdRequest", null, global);
    goog.exportSymbol("proto.brand.DeleteBrandByIdResponse", null, global);
    goog.exportSymbol("proto.brand.GeneralSetting", null, global);
    goog.exportSymbol("proto.brand.GeneralSetting.AutomaticReviewCustomerRankCycleType", null, global);
    goog.exportSymbol("proto.brand.GetAllBrandRequest", null, global);
    goog.exportSymbol("proto.brand.GetAllBrandResponse", null, global);
    goog.exportSymbol("proto.brand.GetBrandByIdRequest", null, global);
    goog.exportSymbol("proto.brand.GetBrandByIdResponse", null, global);
    goog.exportSymbol("proto.brand.LineConnection", null, global);
    proto.brand.GeneralSetting = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.GeneralSetting, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.GeneralSetting.displayName = "proto.brand.GeneralSetting";
    }
    proto.brand.LineConnection = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.LineConnection, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.LineConnection.displayName = "proto.brand.LineConnection";
    }
    proto.brand.Brand = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.brand.Brand.repeatedFields_, null);
    };
    goog.inherits(proto.brand.Brand, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.Brand.displayName = "proto.brand.Brand";
    }
    proto.brand.Brand.ZaloMiniApp = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.Brand.ZaloMiniApp, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.Brand.ZaloMiniApp.displayName = "proto.brand.Brand.ZaloMiniApp";
    }
    proto.brand.BrandShop = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.BrandShop, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.BrandShop.displayName = "proto.brand.BrandShop";
    }
    proto.brand.CreateOrUpdateBrandRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.brand.CreateOrUpdateBrandRequest.repeatedFields_, null);
    };
    goog.inherits(proto.brand.CreateOrUpdateBrandRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.CreateOrUpdateBrandRequest.displayName = "proto.brand.CreateOrUpdateBrandRequest";
    }
    proto.brand.CreateOrUpdateBrandResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.CreateOrUpdateBrandResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.CreateOrUpdateBrandResponse.displayName = "proto.brand.CreateOrUpdateBrandResponse";
    }
    proto.brand.GetBrandByIdRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.GetBrandByIdRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.GetBrandByIdRequest.displayName = "proto.brand.GetBrandByIdRequest";
    }
    proto.brand.GetBrandByIdResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.GetBrandByIdResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.GetBrandByIdResponse.displayName = "proto.brand.GetBrandByIdResponse";
    }
    proto.brand.DeleteBrandByIdRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.DeleteBrandByIdRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.DeleteBrandByIdRequest.displayName = "proto.brand.DeleteBrandByIdRequest";
    }
    proto.brand.DeleteBrandByIdResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.DeleteBrandByIdResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.DeleteBrandByIdResponse.displayName = "proto.brand.DeleteBrandByIdResponse";
    }
    proto.brand.CreateOrUpdateLineConnectionRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.CreateOrUpdateLineConnectionRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.CreateOrUpdateLineConnectionRequest.displayName = "proto.brand.CreateOrUpdateLineConnectionRequest";
    }
    proto.brand.CreateOrUpdateLineConnectionResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.CreateOrUpdateLineConnectionResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.CreateOrUpdateLineConnectionResponse.displayName = "proto.brand.CreateOrUpdateLineConnectionResponse";
    }
    proto.brand.CreateOrUpdateZaloConnectionRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.CreateOrUpdateZaloConnectionRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.CreateOrUpdateZaloConnectionRequest.displayName = "proto.brand.CreateOrUpdateZaloConnectionRequest";
    }
    proto.brand.CreateOrUpdateZaloConnectionResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.CreateOrUpdateZaloConnectionResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.CreateOrUpdateZaloConnectionResponse.displayName = "proto.brand.CreateOrUpdateZaloConnectionResponse";
    }
    proto.brand.CreateOrUpdateZaloMiniappConnectionRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.CreateOrUpdateZaloMiniappConnectionRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.displayName = "proto.brand.CreateOrUpdateZaloMiniappConnectionRequest";
    }
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.CreateOrUpdateZaloMiniappConnectionResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.displayName = "proto.brand.CreateOrUpdateZaloMiniappConnectionResponse";
    }
    proto.brand.GetAllBrandRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.brand.GetAllBrandRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.GetAllBrandRequest.displayName = "proto.brand.GetAllBrandRequest";
    }
    proto.brand.GetAllBrandResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.brand.GetAllBrandResponse.repeatedFields_, null);
    };
    goog.inherits(proto.brand.GetAllBrandResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.brand.GetAllBrandResponse.displayName = "proto.brand.GetAllBrandResponse";
    }
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.GeneralSetting.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.GeneralSetting.toObject(opt_includeInstance, this);
      };
      proto.brand.GeneralSetting.toObject = function(includeInstance, msg) {
        var f, obj = {
          customerRankReviewCycleType: jspb.Message.getFieldWithDefault(msg, 1, 0),
          customerRankReviewCycleValue: jspb.Message.getFieldWithDefault(msg, 2, 0),
          customerRankResetCycleValue: jspb.Message.getFieldWithDefault(msg, 3, 0)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.GeneralSetting.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.GeneralSetting();
      return proto.brand.GeneralSetting.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.GeneralSetting.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {!proto.brand.GeneralSetting.AutomaticReviewCustomerRankCycleType} */
              reader.readEnum()
            );
            msg.setCustomerRankReviewCycleType(value);
            break;
          case 2:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCustomerRankReviewCycleValue(value);
            break;
          case 3:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCustomerRankResetCycleValue(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.GeneralSetting.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.GeneralSetting.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.GeneralSetting.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = /** @type {!proto.brand.GeneralSetting.AutomaticReviewCustomerRankCycleType} */
      jspb.Message.getField(message, 1);
      if (f != null) {
        writer.writeEnum(
          1,
          f
        );
      }
      f = message.getCustomerRankReviewCycleValue();
      if (f !== 0) {
        writer.writeInt32(
          2,
          f
        );
      }
      f = message.getCustomerRankResetCycleValue();
      if (f !== 0) {
        writer.writeInt32(
          3,
          f
        );
      }
    };
    proto.brand.GeneralSetting.AutomaticReviewCustomerRankCycleType = {
      NO_CYCLE: 0,
      DAYS_CYCLE: 1
    };
    proto.brand.GeneralSetting.prototype.getCustomerRankReviewCycleType = function() {
      return (
        /** @type {!proto.brand.GeneralSetting.AutomaticReviewCustomerRankCycleType} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.brand.GeneralSetting.prototype.setCustomerRankReviewCycleType = function(value) {
      return jspb.Message.setField(this, 1, value);
    };
    proto.brand.GeneralSetting.prototype.clearCustomerRankReviewCycleType = function() {
      return jspb.Message.setField(this, 1, void 0);
    };
    proto.brand.GeneralSetting.prototype.hasCustomerRankReviewCycleType = function() {
      return jspb.Message.getField(this, 1) != null;
    };
    proto.brand.GeneralSetting.prototype.getCustomerRankReviewCycleValue = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 2, 0)
      );
    };
    proto.brand.GeneralSetting.prototype.setCustomerRankReviewCycleValue = function(value) {
      return jspb.Message.setProto3IntField(this, 2, value);
    };
    proto.brand.GeneralSetting.prototype.getCustomerRankResetCycleValue = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 3, 0)
      );
    };
    proto.brand.GeneralSetting.prototype.setCustomerRankResetCycleValue = function(value) {
      return jspb.Message.setProto3IntField(this, 3, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.LineConnection.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.LineConnection.toObject(opt_includeInstance, this);
      };
      proto.brand.LineConnection.toObject = function(includeInstance, msg) {
        var f, obj = {
          lineLoginChannelId: jspb.Message.getFieldWithDefault(msg, 1, ""),
          clientSecretLoginChannelLine: jspb.Message.getFieldWithDefault(msg, 2, ""),
          clientIdMessageChannelLine: jspb.Message.getFieldWithDefault(msg, 3, ""),
          messageChannelTokenLine: jspb.Message.getFieldWithDefault(msg, 4, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.LineConnection.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.LineConnection();
      return proto.brand.LineConnection.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.LineConnection.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setLineLoginChannelId(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setClientSecretLoginChannelLine(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setClientIdMessageChannelLine(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessageChannelTokenLine(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.LineConnection.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.LineConnection.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.LineConnection.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getLineLoginChannelId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getClientSecretLoginChannelLine();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getClientIdMessageChannelLine();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getMessageChannelTokenLine();
      if (f.length > 0) {
        writer.writeString(
          4,
          f
        );
      }
    };
    proto.brand.LineConnection.prototype.getLineLoginChannelId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.brand.LineConnection.prototype.setLineLoginChannelId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.brand.LineConnection.prototype.getClientSecretLoginChannelLine = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.LineConnection.prototype.setClientSecretLoginChannelLine = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.brand.LineConnection.prototype.getClientIdMessageChannelLine = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.brand.LineConnection.prototype.setClientIdMessageChannelLine = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.brand.LineConnection.prototype.getMessageChannelTokenLine = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 4, "")
      );
    };
    proto.brand.LineConnection.prototype.setMessageChannelTokenLine = function(value) {
      return jspb.Message.setProto3StringField(this, 4, value);
    };
    proto.brand.Brand.repeatedFields_ = [5, 13];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.Brand.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.Brand.toObject(opt_includeInstance, this);
      };
      proto.brand.Brand.toObject = function(includeInstance, msg) {
        var f, obj = {
          id: jspb.Message.getFieldWithDefault(msg, 1, ""),
          name: jspb.Message.getFieldWithDefault(msg, 2, ""),
          code: jspb.Message.getFieldWithDefault(msg, 3, ""),
          companyCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
          brandMerchantsList: jspb.Message.toObjectList(
            msg.getBrandMerchantsList(),
            merchant_pb.Merchant.toObject,
            includeInstance
          ),
          generalSetting: (f = msg.getGeneralSetting()) && proto.brand.GeneralSetting.toObject(includeInstance, f),
          type: jspb.Message.getFieldWithDefault(msg, 7, 0),
          country: jspb.Message.getFieldWithDefault(msg, 8, 0),
          lineConnection: (f = msg.getLineConnection()) && proto.brand.LineConnection.toObject(includeInstance, f),
          zaloOaId: jspb.Message.getFieldWithDefault(msg, 10, ""),
          zaloAppId: jspb.Message.getFieldWithDefault(msg, 11, ""),
          secretKeyZalo: jspb.Message.getFieldWithDefault(msg, 12, ""),
          zaloMiniAppList: jspb.Message.toObjectList(
            msg.getZaloMiniAppList(),
            proto.brand.Brand.ZaloMiniApp.toObject,
            includeInstance
          ),
          ownerUserId: jspb.Message.getFieldWithDefault(msg, 14, ""),
          ownerPhone: jspb.Message.getFieldWithDefault(msg, 15, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.Brand.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.Brand();
      return proto.brand.Brand.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.Brand.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setId(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setName(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setCode(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setCompanyCode(value);
            break;
          case 5:
            var value = new merchant_pb.Merchant();
            reader.readMessage(value, merchant_pb.Merchant.deserializeBinaryFromReader);
            msg.addBrandMerchants(value);
            break;
          case 6:
            var value = new proto.brand.GeneralSetting();
            reader.readMessage(value, proto.brand.GeneralSetting.deserializeBinaryFromReader);
            msg.setGeneralSetting(value);
            break;
          case 7:
            var value = (
              /** @type {!proto.brand.BrandType} */
              reader.readEnum()
            );
            msg.setType(value);
            break;
          case 8:
            var value = (
              /** @type {!proto.country.CountryName} */
              reader.readEnum()
            );
            msg.setCountry(value);
            break;
          case 9:
            var value = new proto.brand.LineConnection();
            reader.readMessage(value, proto.brand.LineConnection.deserializeBinaryFromReader);
            msg.setLineConnection(value);
            break;
          case 10:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setZaloOaId(value);
            break;
          case 11:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setZaloAppId(value);
            break;
          case 12:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setSecretKeyZalo(value);
            break;
          case 13:
            var value = new proto.brand.Brand.ZaloMiniApp();
            reader.readMessage(value, proto.brand.Brand.ZaloMiniApp.deserializeBinaryFromReader);
            msg.addZaloMiniApp(value);
            break;
          case 14:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setOwnerUserId(value);
            break;
          case 15:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setOwnerPhone(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.Brand.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.Brand.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.Brand.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getName();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getCode();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getCompanyCode();
      if (f.length > 0) {
        writer.writeString(
          4,
          f
        );
      }
      f = message.getBrandMerchantsList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          5,
          f,
          merchant_pb.Merchant.serializeBinaryToWriter
        );
      }
      f = message.getGeneralSetting();
      if (f != null) {
        writer.writeMessage(
          6,
          f,
          proto.brand.GeneralSetting.serializeBinaryToWriter
        );
      }
      f = message.getType();
      if (f !== 0) {
        writer.writeEnum(
          7,
          f
        );
      }
      f = message.getCountry();
      if (f !== 0) {
        writer.writeEnum(
          8,
          f
        );
      }
      f = message.getLineConnection();
      if (f != null) {
        writer.writeMessage(
          9,
          f,
          proto.brand.LineConnection.serializeBinaryToWriter
        );
      }
      f = message.getZaloOaId();
      if (f.length > 0) {
        writer.writeString(
          10,
          f
        );
      }
      f = message.getZaloAppId();
      if (f.length > 0) {
        writer.writeString(
          11,
          f
        );
      }
      f = message.getSecretKeyZalo();
      if (f.length > 0) {
        writer.writeString(
          12,
          f
        );
      }
      f = message.getZaloMiniAppList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          13,
          f,
          proto.brand.Brand.ZaloMiniApp.serializeBinaryToWriter
        );
      }
      f = message.getOwnerUserId();
      if (f.length > 0) {
        writer.writeString(
          14,
          f
        );
      }
      f = message.getOwnerPhone();
      if (f.length > 0) {
        writer.writeString(
          15,
          f
        );
      }
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.Brand.ZaloMiniApp.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.Brand.ZaloMiniApp.toObject(opt_includeInstance, this);
      };
      proto.brand.Brand.ZaloMiniApp.toObject = function(includeInstance, msg) {
        var f, obj = {
          id: jspb.Message.getFieldWithDefault(msg, 1, ""),
          purchaseSdkPrivateKey: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.Brand.ZaloMiniApp.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.Brand.ZaloMiniApp();
      return proto.brand.Brand.ZaloMiniApp.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.Brand.ZaloMiniApp.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setId(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setPurchaseSdkPrivateKey(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.Brand.ZaloMiniApp.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.Brand.ZaloMiniApp.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.Brand.ZaloMiniApp.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getPurchaseSdkPrivateKey();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
    };
    proto.brand.Brand.ZaloMiniApp.prototype.getId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.brand.Brand.ZaloMiniApp.prototype.setId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.brand.Brand.ZaloMiniApp.prototype.getPurchaseSdkPrivateKey = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.Brand.ZaloMiniApp.prototype.setPurchaseSdkPrivateKey = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.brand.Brand.prototype.getId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.brand.Brand.prototype.setId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.brand.Brand.prototype.getName = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.Brand.prototype.setName = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.brand.Brand.prototype.getCode = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.brand.Brand.prototype.setCode = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.brand.Brand.prototype.getCompanyCode = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 4, "")
      );
    };
    proto.brand.Brand.prototype.setCompanyCode = function(value) {
      return jspb.Message.setProto3StringField(this, 4, value);
    };
    proto.brand.Brand.prototype.getBrandMerchantsList = function() {
      return (
        /** @type{!Array<!proto.merchant.Merchant>} */
        jspb.Message.getRepeatedWrapperField(this, merchant_pb.Merchant, 5)
      );
    };
    proto.brand.Brand.prototype.setBrandMerchantsList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 5, value);
    };
    proto.brand.Brand.prototype.addBrandMerchants = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.merchant.Merchant, opt_index);
    };
    proto.brand.Brand.prototype.clearBrandMerchantsList = function() {
      return this.setBrandMerchantsList([]);
    };
    proto.brand.Brand.prototype.getGeneralSetting = function() {
      return (
        /** @type{?proto.brand.GeneralSetting} */
        jspb.Message.getWrapperField(this, proto.brand.GeneralSetting, 6)
      );
    };
    proto.brand.Brand.prototype.setGeneralSetting = function(value) {
      return jspb.Message.setWrapperField(this, 6, value);
    };
    proto.brand.Brand.prototype.clearGeneralSetting = function() {
      return this.setGeneralSetting(void 0);
    };
    proto.brand.Brand.prototype.hasGeneralSetting = function() {
      return jspb.Message.getField(this, 6) != null;
    };
    proto.brand.Brand.prototype.getType = function() {
      return (
        /** @type {!proto.brand.BrandType} */
        jspb.Message.getFieldWithDefault(this, 7, 0)
      );
    };
    proto.brand.Brand.prototype.setType = function(value) {
      return jspb.Message.setProto3EnumField(this, 7, value);
    };
    proto.brand.Brand.prototype.getCountry = function() {
      return (
        /** @type {!proto.country.CountryName} */
        jspb.Message.getFieldWithDefault(this, 8, 0)
      );
    };
    proto.brand.Brand.prototype.setCountry = function(value) {
      return jspb.Message.setProto3EnumField(this, 8, value);
    };
    proto.brand.Brand.prototype.getLineConnection = function() {
      return (
        /** @type{?proto.brand.LineConnection} */
        jspb.Message.getWrapperField(this, proto.brand.LineConnection, 9)
      );
    };
    proto.brand.Brand.prototype.setLineConnection = function(value) {
      return jspb.Message.setWrapperField(this, 9, value);
    };
    proto.brand.Brand.prototype.clearLineConnection = function() {
      return this.setLineConnection(void 0);
    };
    proto.brand.Brand.prototype.hasLineConnection = function() {
      return jspb.Message.getField(this, 9) != null;
    };
    proto.brand.Brand.prototype.getZaloOaId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 10, "")
      );
    };
    proto.brand.Brand.prototype.setZaloOaId = function(value) {
      return jspb.Message.setProto3StringField(this, 10, value);
    };
    proto.brand.Brand.prototype.getZaloAppId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 11, "")
      );
    };
    proto.brand.Brand.prototype.setZaloAppId = function(value) {
      return jspb.Message.setProto3StringField(this, 11, value);
    };
    proto.brand.Brand.prototype.getSecretKeyZalo = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 12, "")
      );
    };
    proto.brand.Brand.prototype.setSecretKeyZalo = function(value) {
      return jspb.Message.setProto3StringField(this, 12, value);
    };
    proto.brand.Brand.prototype.getZaloMiniAppList = function() {
      return (
        /** @type{!Array<!proto.brand.Brand.ZaloMiniApp>} */
        jspb.Message.getRepeatedWrapperField(this, proto.brand.Brand.ZaloMiniApp, 13)
      );
    };
    proto.brand.Brand.prototype.setZaloMiniAppList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 13, value);
    };
    proto.brand.Brand.prototype.addZaloMiniApp = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.brand.Brand.ZaloMiniApp, opt_index);
    };
    proto.brand.Brand.prototype.clearZaloMiniAppList = function() {
      return this.setZaloMiniAppList([]);
    };
    proto.brand.Brand.prototype.getOwnerUserId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 14, "")
      );
    };
    proto.brand.Brand.prototype.setOwnerUserId = function(value) {
      return jspb.Message.setProto3StringField(this, 14, value);
    };
    proto.brand.Brand.prototype.getOwnerPhone = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 15, "")
      );
    };
    proto.brand.Brand.prototype.setOwnerPhone = function(value) {
      return jspb.Message.setProto3StringField(this, 15, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.BrandShop.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.BrandShop.toObject(opt_includeInstance, this);
      };
      proto.brand.BrandShop.toObject = function(includeInstance, msg) {
        var f, obj = {
          merchantId: jspb.Message.getFieldWithDefault(msg, 1, ""),
          shopId: jspb.Message.getFieldWithDefault(msg, 2, ""),
          name: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.BrandShop.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.BrandShop();
      return proto.brand.BrandShop.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.BrandShop.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMerchantId(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setShopId(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setName(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.BrandShop.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.BrandShop.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.BrandShop.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = /** @type {string} */
      jspb.Message.getField(message, 1);
      if (f != null) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getShopId();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getName();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
    };
    proto.brand.BrandShop.prototype.getMerchantId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.brand.BrandShop.prototype.setMerchantId = function(value) {
      return jspb.Message.setField(this, 1, value);
    };
    proto.brand.BrandShop.prototype.clearMerchantId = function() {
      return jspb.Message.setField(this, 1, void 0);
    };
    proto.brand.BrandShop.prototype.hasMerchantId = function() {
      return jspb.Message.getField(this, 1) != null;
    };
    proto.brand.BrandShop.prototype.getShopId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.BrandShop.prototype.setShopId = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.brand.BrandShop.prototype.getName = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.brand.BrandShop.prototype.setName = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.brand.CreateOrUpdateBrandRequest.repeatedFields_ = [5];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.CreateOrUpdateBrandRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.CreateOrUpdateBrandRequest.toObject(opt_includeInstance, this);
      };
      proto.brand.CreateOrUpdateBrandRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          brandId: jspb.Message.getFieldWithDefault(msg, 1, ""),
          brand: (f = msg.getBrand()) && proto.brand.Brand.toObject(includeInstance, f),
          phone: jspb.Message.getFieldWithDefault(msg, 3, ""),
          password: jspb.Message.getFieldWithDefault(msg, 4, ""),
          shopsList: jspb.Message.toObjectList(
            msg.getShopsList(),
            proto.brand.BrandShop.toObject,
            includeInstance
          )
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.CreateOrUpdateBrandRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.CreateOrUpdateBrandRequest();
      return proto.brand.CreateOrUpdateBrandRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.CreateOrUpdateBrandRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setBrandId(value);
            break;
          case 2:
            var value = new proto.brand.Brand();
            reader.readMessage(value, proto.brand.Brand.deserializeBinaryFromReader);
            msg.setBrand(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setPhone(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setPassword(value);
            break;
          case 5:
            var value = new proto.brand.BrandShop();
            reader.readMessage(value, proto.brand.BrandShop.deserializeBinaryFromReader);
            msg.addShops(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.CreateOrUpdateBrandRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.CreateOrUpdateBrandRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getBrandId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getBrand();
      if (f != null) {
        writer.writeMessage(
          2,
          f,
          proto.brand.Brand.serializeBinaryToWriter
        );
      }
      f = message.getPhone();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getPassword();
      if (f.length > 0) {
        writer.writeString(
          4,
          f
        );
      }
      f = message.getShopsList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          5,
          f,
          proto.brand.BrandShop.serializeBinaryToWriter
        );
      }
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.getBrandId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.setBrandId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.getBrand = function() {
      return (
        /** @type{?proto.brand.Brand} */
        jspb.Message.getWrapperField(this, proto.brand.Brand, 2)
      );
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.setBrand = function(value) {
      return jspb.Message.setWrapperField(this, 2, value);
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.clearBrand = function() {
      return this.setBrand(void 0);
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.hasBrand = function() {
      return jspb.Message.getField(this, 2) != null;
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.getPhone = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.setPhone = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.getPassword = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 4, "")
      );
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.setPassword = function(value) {
      return jspb.Message.setProto3StringField(this, 4, value);
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.getShopsList = function() {
      return (
        /** @type{!Array<!proto.brand.BrandShop>} */
        jspb.Message.getRepeatedWrapperField(this, proto.brand.BrandShop, 5)
      );
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.setShopsList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 5, value);
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.addShops = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.brand.BrandShop, opt_index);
    };
    proto.brand.CreateOrUpdateBrandRequest.prototype.clearShopsList = function() {
      return this.setShopsList([]);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.CreateOrUpdateBrandResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.CreateOrUpdateBrandResponse.toObject(opt_includeInstance, this);
      };
      proto.brand.CreateOrUpdateBrandResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, ""),
          updatedBrand: (f = msg.getUpdatedBrand()) && proto.brand.Brand.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.CreateOrUpdateBrandResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.CreateOrUpdateBrandResponse();
      return proto.brand.CreateOrUpdateBrandResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.CreateOrUpdateBrandResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          case 3:
            var value = new proto.brand.Brand();
            reader.readMessage(value, proto.brand.Brand.deserializeBinaryFromReader);
            msg.setUpdatedBrand(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.CreateOrUpdateBrandResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.CreateOrUpdateBrandResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.CreateOrUpdateBrandResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getUpdatedBrand();
      if (f != null) {
        writer.writeMessage(
          3,
          f,
          proto.brand.Brand.serializeBinaryToWriter
        );
      }
    };
    proto.brand.CreateOrUpdateBrandResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.brand.CreateOrUpdateBrandResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.brand.CreateOrUpdateBrandResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.CreateOrUpdateBrandResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.brand.CreateOrUpdateBrandResponse.prototype.getUpdatedBrand = function() {
      return (
        /** @type{?proto.brand.Brand} */
        jspb.Message.getWrapperField(this, proto.brand.Brand, 3)
      );
    };
    proto.brand.CreateOrUpdateBrandResponse.prototype.setUpdatedBrand = function(value) {
      return jspb.Message.setWrapperField(this, 3, value);
    };
    proto.brand.CreateOrUpdateBrandResponse.prototype.clearUpdatedBrand = function() {
      return this.setUpdatedBrand(void 0);
    };
    proto.brand.CreateOrUpdateBrandResponse.prototype.hasUpdatedBrand = function() {
      return jspb.Message.getField(this, 3) != null;
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.GetBrandByIdRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.GetBrandByIdRequest.toObject(opt_includeInstance, this);
      };
      proto.brand.GetBrandByIdRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          brandId: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.GetBrandByIdRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.GetBrandByIdRequest();
      return proto.brand.GetBrandByIdRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.GetBrandByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setBrandId(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.GetBrandByIdRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.GetBrandByIdRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.GetBrandByIdRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getBrandId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
    };
    proto.brand.GetBrandByIdRequest.prototype.getBrandId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.brand.GetBrandByIdRequest.prototype.setBrandId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.GetBrandByIdResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.GetBrandByIdResponse.toObject(opt_includeInstance, this);
      };
      proto.brand.GetBrandByIdResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, ""),
          brand: (f = msg.getBrand()) && proto.brand.Brand.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.GetBrandByIdResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.GetBrandByIdResponse();
      return proto.brand.GetBrandByIdResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.GetBrandByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          case 3:
            var value = new proto.brand.Brand();
            reader.readMessage(value, proto.brand.Brand.deserializeBinaryFromReader);
            msg.setBrand(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.GetBrandByIdResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.GetBrandByIdResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.GetBrandByIdResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getBrand();
      if (f != null) {
        writer.writeMessage(
          3,
          f,
          proto.brand.Brand.serializeBinaryToWriter
        );
      }
    };
    proto.brand.GetBrandByIdResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.brand.GetBrandByIdResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.brand.GetBrandByIdResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.GetBrandByIdResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.brand.GetBrandByIdResponse.prototype.getBrand = function() {
      return (
        /** @type{?proto.brand.Brand} */
        jspb.Message.getWrapperField(this, proto.brand.Brand, 3)
      );
    };
    proto.brand.GetBrandByIdResponse.prototype.setBrand = function(value) {
      return jspb.Message.setWrapperField(this, 3, value);
    };
    proto.brand.GetBrandByIdResponse.prototype.clearBrand = function() {
      return this.setBrand(void 0);
    };
    proto.brand.GetBrandByIdResponse.prototype.hasBrand = function() {
      return jspb.Message.getField(this, 3) != null;
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.DeleteBrandByIdRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.DeleteBrandByIdRequest.toObject(opt_includeInstance, this);
      };
      proto.brand.DeleteBrandByIdRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          brandId: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.DeleteBrandByIdRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.DeleteBrandByIdRequest();
      return proto.brand.DeleteBrandByIdRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.DeleteBrandByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setBrandId(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.DeleteBrandByIdRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.DeleteBrandByIdRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.DeleteBrandByIdRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getBrandId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
    };
    proto.brand.DeleteBrandByIdRequest.prototype.getBrandId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.brand.DeleteBrandByIdRequest.prototype.setBrandId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.DeleteBrandByIdResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.DeleteBrandByIdResponse.toObject(opt_includeInstance, this);
      };
      proto.brand.DeleteBrandByIdResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.DeleteBrandByIdResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.DeleteBrandByIdResponse();
      return proto.brand.DeleteBrandByIdResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.DeleteBrandByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.DeleteBrandByIdResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.DeleteBrandByIdResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.DeleteBrandByIdResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
    };
    proto.brand.DeleteBrandByIdResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.brand.DeleteBrandByIdResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.brand.DeleteBrandByIdResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.DeleteBrandByIdResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.CreateOrUpdateLineConnectionRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.CreateOrUpdateLineConnectionRequest.toObject(opt_includeInstance, this);
      };
      proto.brand.CreateOrUpdateLineConnectionRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          brandCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
          lineConnection: (f = msg.getLineConnection()) && proto.brand.LineConnection.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.CreateOrUpdateLineConnectionRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.CreateOrUpdateLineConnectionRequest();
      return proto.brand.CreateOrUpdateLineConnectionRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.CreateOrUpdateLineConnectionRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setBrandCode(value);
            break;
          case 2:
            var value = new proto.brand.LineConnection();
            reader.readMessage(value, proto.brand.LineConnection.deserializeBinaryFromReader);
            msg.setLineConnection(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.CreateOrUpdateLineConnectionRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.CreateOrUpdateLineConnectionRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.CreateOrUpdateLineConnectionRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getBrandCode();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getLineConnection();
      if (f != null) {
        writer.writeMessage(
          2,
          f,
          proto.brand.LineConnection.serializeBinaryToWriter
        );
      }
    };
    proto.brand.CreateOrUpdateLineConnectionRequest.prototype.getBrandCode = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.brand.CreateOrUpdateLineConnectionRequest.prototype.setBrandCode = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.brand.CreateOrUpdateLineConnectionRequest.prototype.getLineConnection = function() {
      return (
        /** @type{?proto.brand.LineConnection} */
        jspb.Message.getWrapperField(this, proto.brand.LineConnection, 2)
      );
    };
    proto.brand.CreateOrUpdateLineConnectionRequest.prototype.setLineConnection = function(value) {
      return jspb.Message.setWrapperField(this, 2, value);
    };
    proto.brand.CreateOrUpdateLineConnectionRequest.prototype.clearLineConnection = function() {
      return this.setLineConnection(void 0);
    };
    proto.brand.CreateOrUpdateLineConnectionRequest.prototype.hasLineConnection = function() {
      return jspb.Message.getField(this, 2) != null;
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.CreateOrUpdateLineConnectionResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.CreateOrUpdateLineConnectionResponse.toObject(opt_includeInstance, this);
      };
      proto.brand.CreateOrUpdateLineConnectionResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, ""),
          brand: (f = msg.getBrand()) && proto.brand.Brand.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.CreateOrUpdateLineConnectionResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.CreateOrUpdateLineConnectionResponse();
      return proto.brand.CreateOrUpdateLineConnectionResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.CreateOrUpdateLineConnectionResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          case 3:
            var value = new proto.brand.Brand();
            reader.readMessage(value, proto.brand.Brand.deserializeBinaryFromReader);
            msg.setBrand(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.CreateOrUpdateLineConnectionResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.CreateOrUpdateLineConnectionResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.CreateOrUpdateLineConnectionResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getBrand();
      if (f != null) {
        writer.writeMessage(
          3,
          f,
          proto.brand.Brand.serializeBinaryToWriter
        );
      }
    };
    proto.brand.CreateOrUpdateLineConnectionResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.brand.CreateOrUpdateLineConnectionResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.brand.CreateOrUpdateLineConnectionResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.CreateOrUpdateLineConnectionResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.brand.CreateOrUpdateLineConnectionResponse.prototype.getBrand = function() {
      return (
        /** @type{?proto.brand.Brand} */
        jspb.Message.getWrapperField(this, proto.brand.Brand, 3)
      );
    };
    proto.brand.CreateOrUpdateLineConnectionResponse.prototype.setBrand = function(value) {
      return jspb.Message.setWrapperField(this, 3, value);
    };
    proto.brand.CreateOrUpdateLineConnectionResponse.prototype.clearBrand = function() {
      return this.setBrand(void 0);
    };
    proto.brand.CreateOrUpdateLineConnectionResponse.prototype.hasBrand = function() {
      return jspb.Message.getField(this, 3) != null;
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.CreateOrUpdateZaloConnectionRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.CreateOrUpdateZaloConnectionRequest.toObject(opt_includeInstance, this);
      };
      proto.brand.CreateOrUpdateZaloConnectionRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          brandCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
          zaloOaId: jspb.Message.getFieldWithDefault(msg, 2, ""),
          appId: jspb.Message.getFieldWithDefault(msg, 3, ""),
          secretKeyZalo: jspb.Message.getFieldWithDefault(msg, 4, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.CreateOrUpdateZaloConnectionRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.CreateOrUpdateZaloConnectionRequest();
      return proto.brand.CreateOrUpdateZaloConnectionRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.CreateOrUpdateZaloConnectionRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setBrandCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setZaloOaId(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setAppId(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setSecretKeyZalo(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.CreateOrUpdateZaloConnectionRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.CreateOrUpdateZaloConnectionRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.CreateOrUpdateZaloConnectionRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getBrandCode();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getZaloOaId();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getAppId();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getSecretKeyZalo();
      if (f.length > 0) {
        writer.writeString(
          4,
          f
        );
      }
    };
    proto.brand.CreateOrUpdateZaloConnectionRequest.prototype.getBrandCode = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.brand.CreateOrUpdateZaloConnectionRequest.prototype.setBrandCode = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.brand.CreateOrUpdateZaloConnectionRequest.prototype.getZaloOaId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.CreateOrUpdateZaloConnectionRequest.prototype.setZaloOaId = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.brand.CreateOrUpdateZaloConnectionRequest.prototype.getAppId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.brand.CreateOrUpdateZaloConnectionRequest.prototype.setAppId = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.brand.CreateOrUpdateZaloConnectionRequest.prototype.getSecretKeyZalo = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 4, "")
      );
    };
    proto.brand.CreateOrUpdateZaloConnectionRequest.prototype.setSecretKeyZalo = function(value) {
      return jspb.Message.setProto3StringField(this, 4, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.CreateOrUpdateZaloConnectionResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.CreateOrUpdateZaloConnectionResponse.toObject(opt_includeInstance, this);
      };
      proto.brand.CreateOrUpdateZaloConnectionResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.CreateOrUpdateZaloConnectionResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.CreateOrUpdateZaloConnectionResponse();
      return proto.brand.CreateOrUpdateZaloConnectionResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.CreateOrUpdateZaloConnectionResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.CreateOrUpdateZaloConnectionResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.CreateOrUpdateZaloConnectionResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.CreateOrUpdateZaloConnectionResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
    };
    proto.brand.CreateOrUpdateZaloConnectionResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.brand.CreateOrUpdateZaloConnectionResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.brand.CreateOrUpdateZaloConnectionResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.CreateOrUpdateZaloConnectionResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.toObject(opt_includeInstance, this);
      };
      proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          brandCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
          zaloMiniAppId: jspb.Message.getFieldWithDefault(msg, 2, ""),
          purchaseSdkPrivateKey: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.CreateOrUpdateZaloMiniappConnectionRequest();
      return proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setBrandCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setZaloMiniAppId(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setPurchaseSdkPrivateKey(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getBrandCode();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getZaloMiniAppId();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getPurchaseSdkPrivateKey();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.getBrandCode = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.setBrandCode = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.getZaloMiniAppId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.setZaloMiniAppId = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.getPurchaseSdkPrivateKey = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionRequest.prototype.setPurchaseSdkPrivateKey = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.toObject(opt_includeInstance, this);
      };
      proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, ""),
          brand: (f = msg.getBrand()) && proto.brand.Brand.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.CreateOrUpdateZaloMiniappConnectionResponse();
      return proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          case 3:
            var value = new proto.brand.Brand();
            reader.readMessage(value, proto.brand.Brand.deserializeBinaryFromReader);
            msg.setBrand(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getBrand();
      if (f != null) {
        writer.writeMessage(
          3,
          f,
          proto.brand.Brand.serializeBinaryToWriter
        );
      }
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.getBrand = function() {
      return (
        /** @type{?proto.brand.Brand} */
        jspb.Message.getWrapperField(this, proto.brand.Brand, 3)
      );
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.setBrand = function(value) {
      return jspb.Message.setWrapperField(this, 3, value);
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.clearBrand = function() {
      return this.setBrand(void 0);
    };
    proto.brand.CreateOrUpdateZaloMiniappConnectionResponse.prototype.hasBrand = function() {
      return jspb.Message.getField(this, 3) != null;
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.GetAllBrandRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.GetAllBrandRequest.toObject(opt_includeInstance, this);
      };
      proto.brand.GetAllBrandRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          searchText: jspb.Message.getFieldWithDefault(msg, 1, ""),
          paginationrequest: (f = msg.getPaginationrequest()) && common_pb.PaginationRequest.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.GetAllBrandRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.GetAllBrandRequest();
      return proto.brand.GetAllBrandRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.GetAllBrandRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setSearchText(value);
            break;
          case 2:
            var value = new common_pb.PaginationRequest();
            reader.readMessage(value, common_pb.PaginationRequest.deserializeBinaryFromReader);
            msg.setPaginationrequest(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.GetAllBrandRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.GetAllBrandRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.GetAllBrandRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getSearchText();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getPaginationrequest();
      if (f != null) {
        writer.writeMessage(
          2,
          f,
          common_pb.PaginationRequest.serializeBinaryToWriter
        );
      }
    };
    proto.brand.GetAllBrandRequest.prototype.getSearchText = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.brand.GetAllBrandRequest.prototype.setSearchText = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.brand.GetAllBrandRequest.prototype.getPaginationrequest = function() {
      return (
        /** @type{?proto.common.PaginationRequest} */
        jspb.Message.getWrapperField(this, common_pb.PaginationRequest, 2)
      );
    };
    proto.brand.GetAllBrandRequest.prototype.setPaginationrequest = function(value) {
      return jspb.Message.setWrapperField(this, 2, value);
    };
    proto.brand.GetAllBrandRequest.prototype.clearPaginationrequest = function() {
      return this.setPaginationrequest(void 0);
    };
    proto.brand.GetAllBrandRequest.prototype.hasPaginationrequest = function() {
      return jspb.Message.getField(this, 2) != null;
    };
    proto.brand.GetAllBrandResponse.repeatedFields_ = [3];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.brand.GetAllBrandResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.brand.GetAllBrandResponse.toObject(opt_includeInstance, this);
      };
      proto.brand.GetAllBrandResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          code: jspb.Message.getFieldWithDefault(msg, 1, 0),
          message: jspb.Message.getFieldWithDefault(msg, 2, ""),
          brandsList: jspb.Message.toObjectList(
            msg.getBrandsList(),
            proto.brand.Brand.toObject,
            includeInstance
          ),
          pagination: (f = msg.getPagination()) && common_pb.PaginationResponse.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.brand.GetAllBrandResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.brand.GetAllBrandResponse();
      return proto.brand.GetAllBrandResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.brand.GetAllBrandResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {number} */
              reader.readInt32()
            );
            msg.setCode(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMessage(value);
            break;
          case 3:
            var value = new proto.brand.Brand();
            reader.readMessage(value, proto.brand.Brand.deserializeBinaryFromReader);
            msg.addBrands(value);
            break;
          case 4:
            var value = new common_pb.PaginationResponse();
            reader.readMessage(value, common_pb.PaginationResponse.deserializeBinaryFromReader);
            msg.setPagination(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.brand.GetAllBrandResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.brand.GetAllBrandResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.brand.GetAllBrandResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCode();
      if (f !== 0) {
        writer.writeInt32(
          1,
          f
        );
      }
      f = message.getMessage();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getBrandsList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          3,
          f,
          proto.brand.Brand.serializeBinaryToWriter
        );
      }
      f = message.getPagination();
      if (f != null) {
        writer.writeMessage(
          4,
          f,
          common_pb.PaginationResponse.serializeBinaryToWriter
        );
      }
    };
    proto.brand.GetAllBrandResponse.prototype.getCode = function() {
      return (
        /** @type {number} */
        jspb.Message.getFieldWithDefault(this, 1, 0)
      );
    };
    proto.brand.GetAllBrandResponse.prototype.setCode = function(value) {
      return jspb.Message.setProto3IntField(this, 1, value);
    };
    proto.brand.GetAllBrandResponse.prototype.getMessage = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.brand.GetAllBrandResponse.prototype.setMessage = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.brand.GetAllBrandResponse.prototype.getBrandsList = function() {
      return (
        /** @type{!Array<!proto.brand.Brand>} */
        jspb.Message.getRepeatedWrapperField(this, proto.brand.Brand, 3)
      );
    };
    proto.brand.GetAllBrandResponse.prototype.setBrandsList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 3, value);
    };
    proto.brand.GetAllBrandResponse.prototype.addBrands = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.brand.Brand, opt_index);
    };
    proto.brand.GetAllBrandResponse.prototype.clearBrandsList = function() {
      return this.setBrandsList([]);
    };
    proto.brand.GetAllBrandResponse.prototype.getPagination = function() {
      return (
        /** @type{?proto.common.PaginationResponse} */
        jspb.Message.getWrapperField(this, common_pb.PaginationResponse, 4)
      );
    };
    proto.brand.GetAllBrandResponse.prototype.setPagination = function(value) {
      return jspb.Message.setWrapperField(this, 4, value);
    };
    proto.brand.GetAllBrandResponse.prototype.clearPagination = function() {
      return this.setPagination(void 0);
    };
    proto.brand.GetAllBrandResponse.prototype.hasPagination = function() {
      return jspb.Message.getField(this, 4) != null;
    };
    proto.brand.BrandType = {
      RESTAURANT: 0,
      LAUNDRY: 1
    };
    goog.object.extend(exports, proto.brand);
  }
});

export {
  require_brand_pb
};
//# sourceMappingURL=chunk-MLTZAGGY.js.map
