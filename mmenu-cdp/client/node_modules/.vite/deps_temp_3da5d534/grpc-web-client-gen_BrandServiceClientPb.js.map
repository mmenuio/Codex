{
  "version": 3,
  "sources": ["../../grpc-web-client-gen/BrandServiceClientPb.ts"],
  "sourcesContent": ["/**\n * @fileoverview gRPC-Web generated client stub for brand\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.5.0\n// \tprotoc              v3.19.1\n// source: brand.proto\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\nimport * as grpcWeb from 'grpc-web';\n\nimport * as brand_pb from './brand_pb'; // proto import: \"brand.proto\"\n\n\nexport class BrandRoutesClient {\n  client_: grpcWeb.AbstractClientBase;\n  hostname_: string;\n  credentials_: null | { [index: string]: string; };\n  options_: null | { [index: string]: any; };\n\n  constructor (hostname: string,\n               credentials?: null | { [index: string]: string; },\n               options?: null | { [index: string]: any; }) {\n    if (!options) options = {};\n    if (!credentials) credentials = {};\n    options['format'] = 'text';\n\n    this.client_ = new grpcWeb.GrpcWebClientBase(options);\n    this.hostname_ = hostname.replace(/\\/+$/, '');\n    this.credentials_ = credentials;\n    this.options_ = options;\n  }\n\n  methodDescriptorcreateOrUpdateBrand = new grpcWeb.MethodDescriptor(\n    '/brand.BrandRoutes/createOrUpdateBrand',\n    grpcWeb.MethodType.UNARY,\n    brand_pb.CreateOrUpdateBrandRequest,\n    brand_pb.CreateOrUpdateBrandResponse,\n    (request: brand_pb.CreateOrUpdateBrandRequest) => {\n      return request.serializeBinary();\n    },\n    brand_pb.CreateOrUpdateBrandResponse.deserializeBinary\n  );\n\n  createOrUpdateBrand(\n    request: brand_pb.CreateOrUpdateBrandRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<brand_pb.CreateOrUpdateBrandResponse>;\n\n  createOrUpdateBrand(\n    request: brand_pb.CreateOrUpdateBrandRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: brand_pb.CreateOrUpdateBrandResponse) => void): grpcWeb.ClientReadableStream<brand_pb.CreateOrUpdateBrandResponse>;\n\n  createOrUpdateBrand(\n    request: brand_pb.CreateOrUpdateBrandRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: brand_pb.CreateOrUpdateBrandResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/brand.BrandRoutes/createOrUpdateBrand',\n        request,\n        metadata || {},\n        this.methodDescriptorcreateOrUpdateBrand,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/brand.BrandRoutes/createOrUpdateBrand',\n    request,\n    metadata || {},\n    this.methodDescriptorcreateOrUpdateBrand);\n  }\n\n  methodDescriptorgetBrandById = new grpcWeb.MethodDescriptor(\n    '/brand.BrandRoutes/getBrandById',\n    grpcWeb.MethodType.UNARY,\n    brand_pb.GetBrandByIdRequest,\n    brand_pb.GetBrandByIdResponse,\n    (request: brand_pb.GetBrandByIdRequest) => {\n      return request.serializeBinary();\n    },\n    brand_pb.GetBrandByIdResponse.deserializeBinary\n  );\n\n  getBrandById(\n    request: brand_pb.GetBrandByIdRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<brand_pb.GetBrandByIdResponse>;\n\n  getBrandById(\n    request: brand_pb.GetBrandByIdRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: brand_pb.GetBrandByIdResponse) => void): grpcWeb.ClientReadableStream<brand_pb.GetBrandByIdResponse>;\n\n  getBrandById(\n    request: brand_pb.GetBrandByIdRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: brand_pb.GetBrandByIdResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/brand.BrandRoutes/getBrandById',\n        request,\n        metadata || {},\n        this.methodDescriptorgetBrandById,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/brand.BrandRoutes/getBrandById',\n    request,\n    metadata || {},\n    this.methodDescriptorgetBrandById);\n  }\n\n  methodDescriptordeleteBrandById = new grpcWeb.MethodDescriptor(\n    '/brand.BrandRoutes/deleteBrandById',\n    grpcWeb.MethodType.UNARY,\n    brand_pb.DeleteBrandByIdRequest,\n    brand_pb.DeleteBrandByIdResponse,\n    (request: brand_pb.DeleteBrandByIdRequest) => {\n      return request.serializeBinary();\n    },\n    brand_pb.DeleteBrandByIdResponse.deserializeBinary\n  );\n\n  deleteBrandById(\n    request: brand_pb.DeleteBrandByIdRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<brand_pb.DeleteBrandByIdResponse>;\n\n  deleteBrandById(\n    request: brand_pb.DeleteBrandByIdRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: brand_pb.DeleteBrandByIdResponse) => void): grpcWeb.ClientReadableStream<brand_pb.DeleteBrandByIdResponse>;\n\n  deleteBrandById(\n    request: brand_pb.DeleteBrandByIdRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: brand_pb.DeleteBrandByIdResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/brand.BrandRoutes/deleteBrandById',\n        request,\n        metadata || {},\n        this.methodDescriptordeleteBrandById,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/brand.BrandRoutes/deleteBrandById',\n    request,\n    metadata || {},\n    this.methodDescriptordeleteBrandById);\n  }\n\n  methodDescriptorcreateOrUpdateLineConnection = new grpcWeb.MethodDescriptor(\n    '/brand.BrandRoutes/createOrUpdateLineConnection',\n    grpcWeb.MethodType.UNARY,\n    brand_pb.CreateOrUpdateLineConnectionRequest,\n    brand_pb.CreateOrUpdateLineConnectionResponse,\n    (request: brand_pb.CreateOrUpdateLineConnectionRequest) => {\n      return request.serializeBinary();\n    },\n    brand_pb.CreateOrUpdateLineConnectionResponse.deserializeBinary\n  );\n\n  createOrUpdateLineConnection(\n    request: brand_pb.CreateOrUpdateLineConnectionRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<brand_pb.CreateOrUpdateLineConnectionResponse>;\n\n  createOrUpdateLineConnection(\n    request: brand_pb.CreateOrUpdateLineConnectionRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: brand_pb.CreateOrUpdateLineConnectionResponse) => void): grpcWeb.ClientReadableStream<brand_pb.CreateOrUpdateLineConnectionResponse>;\n\n  createOrUpdateLineConnection(\n    request: brand_pb.CreateOrUpdateLineConnectionRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: brand_pb.CreateOrUpdateLineConnectionResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/brand.BrandRoutes/createOrUpdateLineConnection',\n        request,\n        metadata || {},\n        this.methodDescriptorcreateOrUpdateLineConnection,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/brand.BrandRoutes/createOrUpdateLineConnection',\n    request,\n    metadata || {},\n    this.methodDescriptorcreateOrUpdateLineConnection);\n  }\n\n  methodDescriptorcreateOrUpdateZaloConnection = new grpcWeb.MethodDescriptor(\n    '/brand.BrandRoutes/createOrUpdateZaloConnection',\n    grpcWeb.MethodType.UNARY,\n    brand_pb.CreateOrUpdateZaloConnectionRequest,\n    brand_pb.CreateOrUpdateZaloConnectionResponse,\n    (request: brand_pb.CreateOrUpdateZaloConnectionRequest) => {\n      return request.serializeBinary();\n    },\n    brand_pb.CreateOrUpdateZaloConnectionResponse.deserializeBinary\n  );\n\n  createOrUpdateZaloConnection(\n    request: brand_pb.CreateOrUpdateZaloConnectionRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<brand_pb.CreateOrUpdateZaloConnectionResponse>;\n\n  createOrUpdateZaloConnection(\n    request: brand_pb.CreateOrUpdateZaloConnectionRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: brand_pb.CreateOrUpdateZaloConnectionResponse) => void): grpcWeb.ClientReadableStream<brand_pb.CreateOrUpdateZaloConnectionResponse>;\n\n  createOrUpdateZaloConnection(\n    request: brand_pb.CreateOrUpdateZaloConnectionRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: brand_pb.CreateOrUpdateZaloConnectionResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/brand.BrandRoutes/createOrUpdateZaloConnection',\n        request,\n        metadata || {},\n        this.methodDescriptorcreateOrUpdateZaloConnection,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/brand.BrandRoutes/createOrUpdateZaloConnection',\n    request,\n    metadata || {},\n    this.methodDescriptorcreateOrUpdateZaloConnection);\n  }\n\n  methodDescriptorcreateOrUpdateZaloMiniappConnection = new grpcWeb.MethodDescriptor(\n    '/brand.BrandRoutes/createOrUpdateZaloMiniappConnection',\n    grpcWeb.MethodType.UNARY,\n    brand_pb.CreateOrUpdateZaloMiniappConnectionRequest,\n    brand_pb.CreateOrUpdateZaloMiniappConnectionResponse,\n    (request: brand_pb.CreateOrUpdateZaloMiniappConnectionRequest) => {\n      return request.serializeBinary();\n    },\n    brand_pb.CreateOrUpdateZaloMiniappConnectionResponse.deserializeBinary\n  );\n\n  createOrUpdateZaloMiniappConnection(\n    request: brand_pb.CreateOrUpdateZaloMiniappConnectionRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<brand_pb.CreateOrUpdateZaloMiniappConnectionResponse>;\n\n  createOrUpdateZaloMiniappConnection(\n    request: brand_pb.CreateOrUpdateZaloMiniappConnectionRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: brand_pb.CreateOrUpdateZaloMiniappConnectionResponse) => void): grpcWeb.ClientReadableStream<brand_pb.CreateOrUpdateZaloMiniappConnectionResponse>;\n\n  createOrUpdateZaloMiniappConnection(\n    request: brand_pb.CreateOrUpdateZaloMiniappConnectionRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: brand_pb.CreateOrUpdateZaloMiniappConnectionResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/brand.BrandRoutes/createOrUpdateZaloMiniappConnection',\n        request,\n        metadata || {},\n        this.methodDescriptorcreateOrUpdateZaloMiniappConnection,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/brand.BrandRoutes/createOrUpdateZaloMiniappConnection',\n    request,\n    metadata || {},\n    this.methodDescriptorcreateOrUpdateZaloMiniappConnection);\n  }\n\n  methodDescriptorgetAllBrand = new grpcWeb.MethodDescriptor(\n    '/brand.BrandRoutes/getAllBrand',\n    grpcWeb.MethodType.UNARY,\n    brand_pb.GetAllBrandRequest,\n    brand_pb.GetAllBrandResponse,\n    (request: brand_pb.GetAllBrandRequest) => {\n      return request.serializeBinary();\n    },\n    brand_pb.GetAllBrandResponse.deserializeBinary\n  );\n\n  getAllBrand(\n    request: brand_pb.GetAllBrandRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<brand_pb.GetAllBrandResponse>;\n\n  getAllBrand(\n    request: brand_pb.GetAllBrandRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: brand_pb.GetAllBrandResponse) => void): grpcWeb.ClientReadableStream<brand_pb.GetAllBrandResponse>;\n\n  getAllBrand(\n    request: brand_pb.GetAllBrandRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: brand_pb.GetAllBrandResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/brand.BrandRoutes/getAllBrand',\n        request,\n        metadata || {},\n        this.methodDescriptorgetAllBrand,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/brand.BrandRoutes/getAllBrand',\n    request,\n    metadata || {},\n    this.methodDescriptorgetAllBrand);\n  }\n\n}\n\n"],
  "mappings": "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",
  "names": []
}
