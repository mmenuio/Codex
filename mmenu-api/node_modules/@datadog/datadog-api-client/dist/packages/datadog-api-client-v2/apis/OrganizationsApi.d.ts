import { BaseAPIRequestFactory } from "../../datadog-api-client-common/baseapi";
import { Configuration } from "../../datadog-api-client-common/configuration";
import { RequestContext, ResponseContext, HttpFile } from "../../datadog-api-client-common/http/http";
export declare class OrganizationsApiRequestFactory extends BaseAPIRequestFactory {
    uploadIdPMetadata(idpFile?: HttpFile, _options?: Configuration): Promise<RequestContext>;
}
export declare class OrganizationsApiResponseProcessor {
    /**
     * Unwraps the actual response sent by the server from the response context and deserializes the response content
     * to the expected objects
     *
     * @params response Response returned by the server for a request to uploadIdPMetadata
     * @throws ApiException if the response code was not in [200, 299]
     */
    uploadIdPMetadata(response: ResponseContext): Promise<void>;
}
export interface OrganizationsApiUploadIdPMetadataRequest {
    /**
     * The IdP metadata XML file
     * @type HttpFile
     */
    idpFile?: HttpFile;
}
export declare class OrganizationsApi {
    private requestFactory;
    private responseProcessor;
    private configuration;
    constructor(configuration: Configuration, requestFactory?: OrganizationsApiRequestFactory, responseProcessor?: OrganizationsApiResponseProcessor);
    /**
     * Endpoint for uploading IdP metadata for SAML setup.
     *
     * Use this endpoint to upload or replace IdP metadata for SAML login configuration.
     * @param param The request object
     */
    uploadIdPMetadata(param?: OrganizationsApiUploadIdPMetadataRequest, options?: Configuration): Promise<void>;
}
