import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ListScheduleGroupsInput,
  ListScheduleGroupsOutput,
} from "../models/models_0";
import {
  SchedulerClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../SchedulerClient";
export { __MetadataBearer, $Command };
export interface ListScheduleGroupsCommandInput
  extends ListScheduleGroupsInput {}
export interface ListScheduleGroupsCommandOutput
  extends ListScheduleGroupsOutput,
    __MetadataBearer {}
export declare class ListScheduleGroupsCommand extends $Command<
  ListScheduleGroupsCommandInput,
  ListScheduleGroupsCommandOutput,
  SchedulerClientResolvedConfig
> {
  readonly input: ListScheduleGroupsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: ListScheduleGroupsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: SchedulerClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<ListScheduleGroupsCommandInput, ListScheduleGroupsCommandOutput>;
  private serialize;
  private deserialize;
}
