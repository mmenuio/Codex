import {
  require_grpc_web
} from "./chunk-VUKTO5OO.js";
import {
  require_attendance_pb
} from "./chunk-B6F5A3QR.js";
import "./chunk-FIDJL5JN.js";
import "./chunk-RUVG32OF.js";
import {
  require_common_pb
} from "./chunk-3UWK2XUZ.js";
import {
  __publicField,
  __toESM
} from "./chunk-2GTGKKMZ.js";

// node_modules/grpc-web-client-gen/serving/services/Attendance_serviceServiceClientPb.ts
var grpcWeb = __toESM(require_grpc_web());
var serving_models_attendance_pb = __toESM(require_attendance_pb());
var serving_models_common_pb = __toESM(require_common_pb());
var AttendanceServiceClient = class {
  constructor(hostname, credentials, options) {
    __publicField(this, "client_");
    __publicField(this, "hostname_");
    __publicField(this, "credentials_");
    __publicField(this, "options_");
    __publicField(this, "methodDescriptorGetAttendance", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.AttendanceService/GetAttendance",
      grpcWeb.MethodType.UNARY,
      serving_models_attendance_pb.GetAttendanceRequest,
      serving_models_attendance_pb.GetAttendanceResponse,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_attendance_pb.GetAttendanceResponse.deserializeBinary
    ));
    __publicField(this, "methodDescriptorGetAttendances", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.AttendanceService/GetAttendances",
      grpcWeb.MethodType.UNARY,
      serving_models_attendance_pb.GetAttendancesRequest,
      serving_models_attendance_pb.GetAttendancesResponse,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_attendance_pb.GetAttendancesResponse.deserializeBinary
    ));
    __publicField(this, "methodDescriptorCreateAttendance", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.AttendanceService/CreateAttendance",
      grpcWeb.MethodType.UNARY,
      serving_models_attendance_pb.CreateAttendanceRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    __publicField(this, "methodDescriptorUpdateAttendance", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.AttendanceService/UpdateAttendance",
      grpcWeb.MethodType.UNARY,
      serving_models_attendance_pb.UpdateAttendanceRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    __publicField(this, "methodDescriptorDeleteAttendance", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.AttendanceService/DeleteAttendance",
      grpcWeb.MethodType.UNARY,
      serving_models_attendance_pb.DeleteAttendanceRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    __publicField(this, "methodDescriptorRequestAttendanceChange", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.AttendanceService/RequestAttendanceChange",
      grpcWeb.MethodType.UNARY,
      serving_models_attendance_pb.RequestAttendanceChangeRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    __publicField(this, "methodDescriptorApproveAttendanceChange", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.AttendanceService/ApproveAttendanceChange",
      grpcWeb.MethodType.UNARY,
      serving_models_attendance_pb.ApproveAttendanceChangeRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    __publicField(this, "methodDescriptorGetAttendanceChangeRequests", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.AttendanceService/GetAttendanceChangeRequests",
      grpcWeb.MethodType.UNARY,
      serving_models_attendance_pb.GetAttendanceChangeRequestsRequest,
      serving_models_attendance_pb.GetAttendanceChangeRequestsResponse,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_attendance_pb.GetAttendanceChangeRequestsResponse.deserializeBinary
    ));
    __publicField(this, "methodDescriptorSyncAttendanceDataFromDevice", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.AttendanceService/SyncAttendanceDataFromDevice",
      grpcWeb.MethodType.UNARY,
      serving_models_attendance_pb.SyncAttendanceDataFromDeviceRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    if (!options)
      options = {};
    if (!credentials)
      credentials = {};
    options["format"] = "text";
    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, "");
    this.credentials_ = credentials;
    this.options_ = options;
  }
  getAttendance(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.AttendanceService/GetAttendance",
        request,
        metadata || {},
        this.methodDescriptorGetAttendance,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.AttendanceService/GetAttendance",
      request,
      metadata || {},
      this.methodDescriptorGetAttendance
    );
  }
  getAttendances(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.AttendanceService/GetAttendances",
        request,
        metadata || {},
        this.methodDescriptorGetAttendances,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.AttendanceService/GetAttendances",
      request,
      metadata || {},
      this.methodDescriptorGetAttendances
    );
  }
  createAttendance(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.AttendanceService/CreateAttendance",
        request,
        metadata || {},
        this.methodDescriptorCreateAttendance,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.AttendanceService/CreateAttendance",
      request,
      metadata || {},
      this.methodDescriptorCreateAttendance
    );
  }
  updateAttendance(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.AttendanceService/UpdateAttendance",
        request,
        metadata || {},
        this.methodDescriptorUpdateAttendance,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.AttendanceService/UpdateAttendance",
      request,
      metadata || {},
      this.methodDescriptorUpdateAttendance
    );
  }
  deleteAttendance(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.AttendanceService/DeleteAttendance",
        request,
        metadata || {},
        this.methodDescriptorDeleteAttendance,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.AttendanceService/DeleteAttendance",
      request,
      metadata || {},
      this.methodDescriptorDeleteAttendance
    );
  }
  requestAttendanceChange(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.AttendanceService/RequestAttendanceChange",
        request,
        metadata || {},
        this.methodDescriptorRequestAttendanceChange,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.AttendanceService/RequestAttendanceChange",
      request,
      metadata || {},
      this.methodDescriptorRequestAttendanceChange
    );
  }
  approveAttendanceChange(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.AttendanceService/ApproveAttendanceChange",
        request,
        metadata || {},
        this.methodDescriptorApproveAttendanceChange,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.AttendanceService/ApproveAttendanceChange",
      request,
      metadata || {},
      this.methodDescriptorApproveAttendanceChange
    );
  }
  getAttendanceChangeRequests(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.AttendanceService/GetAttendanceChangeRequests",
        request,
        metadata || {},
        this.methodDescriptorGetAttendanceChangeRequests,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.AttendanceService/GetAttendanceChangeRequests",
      request,
      metadata || {},
      this.methodDescriptorGetAttendanceChangeRequests
    );
  }
  syncAttendanceDataFromDevice(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.AttendanceService/SyncAttendanceDataFromDevice",
        request,
        metadata || {},
        this.methodDescriptorSyncAttendanceDataFromDevice,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.AttendanceService/SyncAttendanceDataFromDevice",
      request,
      metadata || {},
      this.methodDescriptorSyncAttendanceDataFromDevice
    );
  }
};
export {
  AttendanceServiceClient
};
//# sourceMappingURL=grpc-web-client-gen_serving_services_Attendance_serviceServiceClientPb.js.map
