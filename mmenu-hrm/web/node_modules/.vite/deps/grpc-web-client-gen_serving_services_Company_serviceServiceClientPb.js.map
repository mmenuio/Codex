{
  "version": 3,
  "sources": ["../../grpc-web-client-gen/serving/services/Company_serviceServiceClientPb.ts"],
  "sourcesContent": ["/**\n * @fileoverview gRPC-Web generated client stub for mmenu.hrm.serving\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.5.0\n// \tprotoc              v3.19.1\n// source: serving/services/company_service.proto\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\nimport * as grpcWeb from 'grpc-web';\n\nimport * as serving_models_company_pb from '../../serving/models/company_pb'; // proto import: \"serving/models/company.proto\"\nimport * as serving_models_common_pb from '../../serving/models/common_pb'; // proto import: \"serving/models/common.proto\"\n\n\nexport class CompanyServiceClient {\n  client_: grpcWeb.AbstractClientBase;\n  hostname_: string;\n  credentials_: null | { [index: string]: string; };\n  options_: null | { [index: string]: any; };\n\n  constructor (hostname: string,\n               credentials?: null | { [index: string]: string; },\n               options?: null | { [index: string]: any; }) {\n    if (!options) options = {};\n    if (!credentials) credentials = {};\n    options['format'] = 'text';\n\n    this.client_ = new grpcWeb.GrpcWebClientBase(options);\n    this.hostname_ = hostname.replace(/\\/+$/, '');\n    this.credentials_ = credentials;\n    this.options_ = options;\n  }\n\n  methodDescriptorGetCompany = new grpcWeb.MethodDescriptor(\n    '/mmenu.hrm.serving.CompanyService/GetCompany',\n    grpcWeb.MethodType.UNARY,\n    serving_models_company_pb.GetCompanyRequest,\n    serving_models_company_pb.GetCompanyResponse,\n    (request: serving_models_company_pb.GetCompanyRequest) => {\n      return request.serializeBinary();\n    },\n    serving_models_company_pb.GetCompanyResponse.deserializeBinary\n  );\n\n  getCompany(\n    request: serving_models_company_pb.GetCompanyRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<serving_models_company_pb.GetCompanyResponse>;\n\n  getCompany(\n    request: serving_models_company_pb.GetCompanyRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: serving_models_company_pb.GetCompanyResponse) => void): grpcWeb.ClientReadableStream<serving_models_company_pb.GetCompanyResponse>;\n\n  getCompany(\n    request: serving_models_company_pb.GetCompanyRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: serving_models_company_pb.GetCompanyResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/mmenu.hrm.serving.CompanyService/GetCompany',\n        request,\n        metadata || {},\n        this.methodDescriptorGetCompany,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/mmenu.hrm.serving.CompanyService/GetCompany',\n    request,\n    metadata || {},\n    this.methodDescriptorGetCompany);\n  }\n\n  methodDescriptorGetCompanies = new grpcWeb.MethodDescriptor(\n    '/mmenu.hrm.serving.CompanyService/GetCompanies',\n    grpcWeb.MethodType.UNARY,\n    serving_models_company_pb.GetCompaniesRequest,\n    serving_models_company_pb.GetCompaniesResponse,\n    (request: serving_models_company_pb.GetCompaniesRequest) => {\n      return request.serializeBinary();\n    },\n    serving_models_company_pb.GetCompaniesResponse.deserializeBinary\n  );\n\n  getCompanies(\n    request: serving_models_company_pb.GetCompaniesRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<serving_models_company_pb.GetCompaniesResponse>;\n\n  getCompanies(\n    request: serving_models_company_pb.GetCompaniesRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: serving_models_company_pb.GetCompaniesResponse) => void): grpcWeb.ClientReadableStream<serving_models_company_pb.GetCompaniesResponse>;\n\n  getCompanies(\n    request: serving_models_company_pb.GetCompaniesRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: serving_models_company_pb.GetCompaniesResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/mmenu.hrm.serving.CompanyService/GetCompanies',\n        request,\n        metadata || {},\n        this.methodDescriptorGetCompanies,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/mmenu.hrm.serving.CompanyService/GetCompanies',\n    request,\n    metadata || {},\n    this.methodDescriptorGetCompanies);\n  }\n\n  methodDescriptorCreateCompany = new grpcWeb.MethodDescriptor(\n    '/mmenu.hrm.serving.CompanyService/CreateCompany',\n    grpcWeb.MethodType.UNARY,\n    serving_models_company_pb.CreateCompanyRequest,\n    serving_models_common_pb.Response,\n    (request: serving_models_company_pb.CreateCompanyRequest) => {\n      return request.serializeBinary();\n    },\n    serving_models_common_pb.Response.deserializeBinary\n  );\n\n  createCompany(\n    request: serving_models_company_pb.CreateCompanyRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<serving_models_common_pb.Response>;\n\n  createCompany(\n    request: serving_models_company_pb.CreateCompanyRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: serving_models_common_pb.Response) => void): grpcWeb.ClientReadableStream<serving_models_common_pb.Response>;\n\n  createCompany(\n    request: serving_models_company_pb.CreateCompanyRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: serving_models_common_pb.Response) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/mmenu.hrm.serving.CompanyService/CreateCompany',\n        request,\n        metadata || {},\n        this.methodDescriptorCreateCompany,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/mmenu.hrm.serving.CompanyService/CreateCompany',\n    request,\n    metadata || {},\n    this.methodDescriptorCreateCompany);\n  }\n\n  methodDescriptorUpdateCompany = new grpcWeb.MethodDescriptor(\n    '/mmenu.hrm.serving.CompanyService/UpdateCompany',\n    grpcWeb.MethodType.UNARY,\n    serving_models_company_pb.UpdateCompanyRequest,\n    serving_models_common_pb.Response,\n    (request: serving_models_company_pb.UpdateCompanyRequest) => {\n      return request.serializeBinary();\n    },\n    serving_models_common_pb.Response.deserializeBinary\n  );\n\n  updateCompany(\n    request: serving_models_company_pb.UpdateCompanyRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<serving_models_common_pb.Response>;\n\n  updateCompany(\n    request: serving_models_company_pb.UpdateCompanyRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: serving_models_common_pb.Response) => void): grpcWeb.ClientReadableStream<serving_models_common_pb.Response>;\n\n  updateCompany(\n    request: serving_models_company_pb.UpdateCompanyRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: serving_models_common_pb.Response) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/mmenu.hrm.serving.CompanyService/UpdateCompany',\n        request,\n        metadata || {},\n        this.methodDescriptorUpdateCompany,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/mmenu.hrm.serving.CompanyService/UpdateCompany',\n    request,\n    metadata || {},\n    this.methodDescriptorUpdateCompany);\n  }\n\n  methodDescriptorDeleteCompany = new grpcWeb.MethodDescriptor(\n    '/mmenu.hrm.serving.CompanyService/DeleteCompany',\n    grpcWeb.MethodType.UNARY,\n    serving_models_company_pb.DeleteCompanyRequest,\n    serving_models_common_pb.Response,\n    (request: serving_models_company_pb.DeleteCompanyRequest) => {\n      return request.serializeBinary();\n    },\n    serving_models_common_pb.Response.deserializeBinary\n  );\n\n  deleteCompany(\n    request: serving_models_company_pb.DeleteCompanyRequest,\n    metadata?: grpcWeb.Metadata | null): Promise<serving_models_common_pb.Response>;\n\n  deleteCompany(\n    request: serving_models_company_pb.DeleteCompanyRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: serving_models_common_pb.Response) => void): grpcWeb.ClientReadableStream<serving_models_common_pb.Response>;\n\n  deleteCompany(\n    request: serving_models_company_pb.DeleteCompanyRequest,\n    metadata?: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: serving_models_common_pb.Response) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/mmenu.hrm.serving.CompanyService/DeleteCompany',\n        request,\n        metadata || {},\n        this.methodDescriptorDeleteCompany,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/mmenu.hrm.serving.CompanyService/DeleteCompany',\n    request,\n    metadata || {},\n    this.methodDescriptorDeleteCompany);\n  }\n\n}\n\n"],
  "mappings": "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",
  "names": []
}
