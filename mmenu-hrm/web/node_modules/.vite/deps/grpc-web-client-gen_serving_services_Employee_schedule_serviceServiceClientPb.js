import {
  require_employee_schedule_pb
} from "./chunk-FS6K7DZB.js";
import {
  require_grpc_web
} from "./chunk-VUKTO5OO.js";
import "./chunk-L6Y2ZZQ2.js";
import {
  require_common_pb
} from "./chunk-3UWK2XUZ.js";
import {
  __publicField,
  __toESM
} from "./chunk-2GTGKKMZ.js";

// node_modules/grpc-web-client-gen/serving/services/Employee_schedule_serviceServiceClientPb.ts
var grpcWeb = __toESM(require_grpc_web());
var serving_models_employee_schedule_pb = __toESM(require_employee_schedule_pb());
var serving_models_common_pb = __toESM(require_common_pb());
var EmployeeScheduleServiceClient = class {
  constructor(hostname, credentials, options) {
    __publicField(this, "client_");
    __publicField(this, "hostname_");
    __publicField(this, "credentials_");
    __publicField(this, "options_");
    __publicField(this, "methodDescriptorGetEmployeeSchedule", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.EmployeeScheduleService/GetEmployeeSchedule",
      grpcWeb.MethodType.UNARY,
      serving_models_employee_schedule_pb.GetScheduleRequest,
      serving_models_employee_schedule_pb.GetScheduleResponse,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_employee_schedule_pb.GetScheduleResponse.deserializeBinary
    ));
    __publicField(this, "methodDescriptorGetEmployeeSchedules", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.EmployeeScheduleService/GetEmployeeSchedules",
      grpcWeb.MethodType.UNARY,
      serving_models_employee_schedule_pb.GetEmployeeSchedulesRequest,
      serving_models_employee_schedule_pb.GetEmployeeSchedulesResponse,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_employee_schedule_pb.GetEmployeeSchedulesResponse.deserializeBinary
    ));
    __publicField(this, "methodDescriptorCreateEmployeeSchedule", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.EmployeeScheduleService/CreateEmployeeSchedule",
      grpcWeb.MethodType.UNARY,
      serving_models_employee_schedule_pb.CreateScheduleRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    __publicField(this, "methodDescriptorUpdateEmployeeSchedule", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.EmployeeScheduleService/UpdateEmployeeSchedule",
      grpcWeb.MethodType.UNARY,
      serving_models_employee_schedule_pb.UpdateScheduleRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    __publicField(this, "methodDescriptorDeleteEmployeeSchedule", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.EmployeeScheduleService/DeleteEmployeeSchedule",
      grpcWeb.MethodType.UNARY,
      serving_models_employee_schedule_pb.DeleteScheduleRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    if (!options)
      options = {};
    if (!credentials)
      credentials = {};
    options["format"] = "text";
    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, "");
    this.credentials_ = credentials;
    this.options_ = options;
  }
  getEmployeeSchedule(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.EmployeeScheduleService/GetEmployeeSchedule",
        request,
        metadata || {},
        this.methodDescriptorGetEmployeeSchedule,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.EmployeeScheduleService/GetEmployeeSchedule",
      request,
      metadata || {},
      this.methodDescriptorGetEmployeeSchedule
    );
  }
  getEmployeeSchedules(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.EmployeeScheduleService/GetEmployeeSchedules",
        request,
        metadata || {},
        this.methodDescriptorGetEmployeeSchedules,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.EmployeeScheduleService/GetEmployeeSchedules",
      request,
      metadata || {},
      this.methodDescriptorGetEmployeeSchedules
    );
  }
  createEmployeeSchedule(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.EmployeeScheduleService/CreateEmployeeSchedule",
        request,
        metadata || {},
        this.methodDescriptorCreateEmployeeSchedule,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.EmployeeScheduleService/CreateEmployeeSchedule",
      request,
      metadata || {},
      this.methodDescriptorCreateEmployeeSchedule
    );
  }
  updateEmployeeSchedule(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.EmployeeScheduleService/UpdateEmployeeSchedule",
        request,
        metadata || {},
        this.methodDescriptorUpdateEmployeeSchedule,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.EmployeeScheduleService/UpdateEmployeeSchedule",
      request,
      metadata || {},
      this.methodDescriptorUpdateEmployeeSchedule
    );
  }
  deleteEmployeeSchedule(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.EmployeeScheduleService/DeleteEmployeeSchedule",
        request,
        metadata || {},
        this.methodDescriptorDeleteEmployeeSchedule,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.EmployeeScheduleService/DeleteEmployeeSchedule",
      request,
      metadata || {},
      this.methodDescriptorDeleteEmployeeSchedule
    );
  }
};
export {
  EmployeeScheduleServiceClient
};
//# sourceMappingURL=grpc-web-client-gen_serving_services_Employee_schedule_serviceServiceClientPb.js.map
