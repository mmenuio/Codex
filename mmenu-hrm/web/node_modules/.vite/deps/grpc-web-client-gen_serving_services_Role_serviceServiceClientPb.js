import {
  require_grpc_web
} from "./chunk-VUKTO5OO.js";
import {
  require_role_pb
} from "./chunk-RUVG32OF.js";
import {
  require_common_pb
} from "./chunk-3UWK2XUZ.js";
import {
  __publicField,
  __toESM
} from "./chunk-2GTGKKMZ.js";

// node_modules/grpc-web-client-gen/serving/services/Role_serviceServiceClientPb.ts
var grpcWeb = __toESM(require_grpc_web());
var serving_models_role_pb = __toESM(require_role_pb());
var serving_models_common_pb = __toESM(require_common_pb());
var RoleServiceClient = class {
  constructor(hostname, credentials, options) {
    __publicField(this, "client_");
    __publicField(this, "hostname_");
    __publicField(this, "credentials_");
    __publicField(this, "options_");
    __publicField(this, "methodDescriptorCreateRole", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.RoleService/CreateRole",
      grpcWeb.MethodType.UNARY,
      serving_models_role_pb.CreateRoleRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    __publicField(this, "methodDescriptorUpdateRole", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.RoleService/UpdateRole",
      grpcWeb.MethodType.UNARY,
      serving_models_role_pb.UpdateRoleRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    __publicField(this, "methodDescriptorGetRole", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.RoleService/GetRole",
      grpcWeb.MethodType.UNARY,
      serving_models_role_pb.GetRoleRequest,
      serving_models_role_pb.GetRoleResponse,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_role_pb.GetRoleResponse.deserializeBinary
    ));
    __publicField(this, "methodDescriptorGetRoles", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.RoleService/GetRoles",
      grpcWeb.MethodType.UNARY,
      serving_models_role_pb.GetRolesRequest,
      serving_models_role_pb.GetRolesResponse,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_role_pb.GetRolesResponse.deserializeBinary
    ));
    if (!options)
      options = {};
    if (!credentials)
      credentials = {};
    options["format"] = "text";
    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, "");
    this.credentials_ = credentials;
    this.options_ = options;
  }
  createRole(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.RoleService/CreateRole",
        request,
        metadata || {},
        this.methodDescriptorCreateRole,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.RoleService/CreateRole",
      request,
      metadata || {},
      this.methodDescriptorCreateRole
    );
  }
  updateRole(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.RoleService/UpdateRole",
        request,
        metadata || {},
        this.methodDescriptorUpdateRole,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.RoleService/UpdateRole",
      request,
      metadata || {},
      this.methodDescriptorUpdateRole
    );
  }
  getRole(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.RoleService/GetRole",
        request,
        metadata || {},
        this.methodDescriptorGetRole,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.RoleService/GetRole",
      request,
      metadata || {},
      this.methodDescriptorGetRole
    );
  }
  getRoles(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.RoleService/GetRoles",
        request,
        metadata || {},
        this.methodDescriptorGetRoles,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.RoleService/GetRoles",
      request,
      metadata || {},
      this.methodDescriptorGetRoles
    );
  }
};
export {
  RoleServiceClient
};
//# sourceMappingURL=grpc-web-client-gen_serving_services_Role_serviceServiceClientPb.js.map
