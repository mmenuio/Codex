import {
  require_employee_pb
} from "./chunk-L6Y2ZZQ2.js";
import {
  require_common_pb,
  require_google_protobuf
} from "./chunk-3UWK2XUZ.js";
import {
  __commonJS
} from "./chunk-2GTGKKMZ.js";

// node_modules/grpc-web-client-gen/serving/models/payroll_pb.js
var require_payroll_pb = __commonJS({
  "node_modules/grpc-web-client-gen/serving/models/payroll_pb.js"(exports) {
    var jspb = require_google_protobuf();
    var goog = jspb;
    var global = (function() {
      if (this) {
        return this;
      }
      if (typeof window !== "undefined") {
        return window;
      }
      if (typeof global !== "undefined") {
        return global;
      }
      if (typeof self !== "undefined") {
        return self;
      }
      return Function("return this")();
    }).call(null);
    var serving_models_common_pb = require_common_pb();
    goog.object.extend(proto, serving_models_common_pb);
    var serving_models_employee_pb = require_employee_pb();
    goog.object.extend(proto, serving_models_employee_pb);
    goog.exportSymbol("proto.mmenu.hrm.serving.EmployeePayroll", null, global);
    goog.exportSymbol("proto.mmenu.hrm.serving.GetCompanyPayrollRequest", null, global);
    goog.exportSymbol("proto.mmenu.hrm.serving.GetCompanyPayrollResponse", null, global);
    proto.mmenu.hrm.serving.EmployeePayroll = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.EmployeePayroll, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.EmployeePayroll.displayName = "proto.mmenu.hrm.serving.EmployeePayroll";
    }
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.GetCompanyPayrollRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.GetCompanyPayrollRequest.displayName = "proto.mmenu.hrm.serving.GetCompanyPayrollRequest";
    }
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.mmenu.hrm.serving.GetCompanyPayrollResponse.repeatedFields_, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.GetCompanyPayrollResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.GetCompanyPayrollResponse.displayName = "proto.mmenu.hrm.serving.GetCompanyPayrollResponse";
    }
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.EmployeePayroll.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.EmployeePayroll.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.EmployeePayroll.toObject = function(includeInstance, msg) {
        var f, obj = {
          employeeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
          employeeName: jspb.Message.getFieldWithDefault(msg, 2, ""),
          departmentId: jspb.Message.getFieldWithDefault(msg, 3, ""),
          departmentName: jspb.Message.getFieldWithDefault(msg, 4, ""),
          salary: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0),
          salaryType: jspb.Message.getFieldWithDefault(msg, 6, 0),
          hourWorked: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0),
          totalSalary: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0),
          totalOvertimeHours: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0),
          totalWorkdays: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0),
          totalStandardWorkdays: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.EmployeePayroll.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.EmployeePayroll();
      return proto.mmenu.hrm.serving.EmployeePayroll.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.EmployeePayroll.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setEmployeeId(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setEmployeeName(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setDepartmentId(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setDepartmentName(value);
            break;
          case 5:
            var value = (
              /** @type {number} */
              reader.readDouble()
            );
            msg.setSalary(value);
            break;
          case 6:
            var value = (
              /** @type {!proto.mmenu.hrm.serving.SalaryType} */
              reader.readEnum()
            );
            msg.setSalaryType(value);
            break;
          case 7:
            var value = (
              /** @type {number} */
              reader.readDouble()
            );
            msg.setHourWorked(value);
            break;
          case 8:
            var value = (
              /** @type {number} */
              reader.readDouble()
            );
            msg.setTotalSalary(value);
            break;
          case 9:
            var value = (
              /** @type {number} */
              reader.readDouble()
            );
            msg.setTotalOvertimeHours(value);
            break;
          case 10:
            var value = (
              /** @type {number} */
              reader.readDouble()
            );
            msg.setTotalWorkdays(value);
            break;
          case 11:
            var value = (
              /** @type {number} */
              reader.readDouble()
            );
            msg.setTotalStandardWorkdays(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.EmployeePayroll.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.EmployeePayroll.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getEmployeeId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getEmployeeName();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getDepartmentId();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getDepartmentName();
      if (f.length > 0) {
        writer.writeString(
          4,
          f
        );
      }
      f = message.getSalary();
      if (f !== 0) {
        writer.writeDouble(
          5,
          f
        );
      }
      f = message.getSalaryType();
      if (f !== 0) {
        writer.writeEnum(
          6,
          f
        );
      }
      f = message.getHourWorked();
      if (f !== 0) {
        writer.writeDouble(
          7,
          f
        );
      }
      f = message.getTotalSalary();
      if (f !== 0) {
        writer.writeDouble(
          8,
          f
        );
      }
      f = /** @type {number} */
      jspb.Message.getField(message, 9);
      if (f != null) {
        writer.writeDouble(
          9,
          f
        );
      }
      f = message.getTotalWorkdays();
      if (f !== 0) {
        writer.writeDouble(
          10,
          f
        );
      }
      f = message.getTotalStandardWorkdays();
      if (f !== 0) {
        writer.writeDouble(
          11,
          f
        );
      }
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.getEmployeeId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.setEmployeeId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.getEmployeeName = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.setEmployeeName = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.getDepartmentId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.setDepartmentId = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.getDepartmentName = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 4, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.setDepartmentName = function(value) {
      return jspb.Message.setProto3StringField(this, 4, value);
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.getSalary = function() {
      return (
        /** @type {number} */
        jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0)
      );
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.setSalary = function(value) {
      return jspb.Message.setProto3FloatField(this, 5, value);
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.getSalaryType = function() {
      return (
        /** @type {!proto.mmenu.hrm.serving.SalaryType} */
        jspb.Message.getFieldWithDefault(this, 6, 0)
      );
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.setSalaryType = function(value) {
      return jspb.Message.setProto3EnumField(this, 6, value);
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.getHourWorked = function() {
      return (
        /** @type {number} */
        jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0)
      );
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.setHourWorked = function(value) {
      return jspb.Message.setProto3FloatField(this, 7, value);
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.getTotalSalary = function() {
      return (
        /** @type {number} */
        jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0)
      );
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.setTotalSalary = function(value) {
      return jspb.Message.setProto3FloatField(this, 8, value);
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.getTotalOvertimeHours = function() {
      return (
        /** @type {number} */
        jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0)
      );
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.setTotalOvertimeHours = function(value) {
      return jspb.Message.setField(this, 9, value);
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.clearTotalOvertimeHours = function() {
      return jspb.Message.setField(this, 9, void 0);
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.hasTotalOvertimeHours = function() {
      return jspb.Message.getField(this, 9) != null;
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.getTotalWorkdays = function() {
      return (
        /** @type {number} */
        jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0)
      );
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.setTotalWorkdays = function(value) {
      return jspb.Message.setProto3FloatField(this, 10, value);
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.getTotalStandardWorkdays = function() {
      return (
        /** @type {number} */
        jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0)
      );
    };
    proto.mmenu.hrm.serving.EmployeePayroll.prototype.setTotalStandardWorkdays = function(value) {
      return jspb.Message.setProto3FloatField(this, 11, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.GetCompanyPayrollRequest.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.GetCompanyPayrollRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
          searchText: jspb.Message.getFieldWithDefault(msg, 2, ""),
          month: jspb.Message.getFieldWithDefault(msg, 3, ""),
          year: jspb.Message.getFieldWithDefault(msg, 4, ""),
          pagination: (f = msg.getPagination()) && serving_models_common_pb.PaginationParams.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.GetCompanyPayrollRequest();
      return proto.mmenu.hrm.serving.GetCompanyPayrollRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setCompanyId(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setSearchText(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setMonth(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setYear(value);
            break;
          case 5:
            var value = new serving_models_common_pb.PaginationParams();
            reader.readMessage(value, serving_models_common_pb.PaginationParams.deserializeBinaryFromReader);
            msg.setPagination(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.GetCompanyPayrollRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCompanyId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = /** @type {string} */
      jspb.Message.getField(message, 2);
      if (f != null) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getMonth();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getYear();
      if (f.length > 0) {
        writer.writeString(
          4,
          f
        );
      }
      f = message.getPagination();
      if (f != null) {
        writer.writeMessage(
          5,
          f,
          serving_models_common_pb.PaginationParams.serializeBinaryToWriter
        );
      }
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.getCompanyId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.setCompanyId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.getSearchText = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.setSearchText = function(value) {
      return jspb.Message.setField(this, 2, value);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.clearSearchText = function() {
      return jspb.Message.setField(this, 2, void 0);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.hasSearchText = function() {
      return jspb.Message.getField(this, 2) != null;
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.getMonth = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.setMonth = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.getYear = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 4, "")
      );
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.setYear = function(value) {
      return jspb.Message.setProto3StringField(this, 4, value);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.getPagination = function() {
      return (
        /** @type{?proto.mmenu.hrm.serving.PaginationParams} */
        jspb.Message.getWrapperField(this, serving_models_common_pb.PaginationParams, 5)
      );
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.setPagination = function(value) {
      return jspb.Message.setWrapperField(this, 5, value);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.clearPagination = function() {
      return this.setPagination(void 0);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollRequest.prototype.hasPagination = function() {
      return jspb.Message.getField(this, 5) != null;
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.repeatedFields_ = [2];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.GetCompanyPayrollResponse.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.GetCompanyPayrollResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          response: (f = msg.getResponse()) && serving_models_common_pb.Response.toObject(includeInstance, f),
          employeePayrollsList: jspb.Message.toObjectList(
            msg.getEmployeePayrollsList(),
            proto.mmenu.hrm.serving.EmployeePayroll.toObject,
            includeInstance
          ),
          pagination: (f = msg.getPagination()) && serving_models_common_pb.PaginationResponse.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.GetCompanyPayrollResponse();
      return proto.mmenu.hrm.serving.GetCompanyPayrollResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = new serving_models_common_pb.Response();
            reader.readMessage(value, serving_models_common_pb.Response.deserializeBinaryFromReader);
            msg.setResponse(value);
            break;
          case 2:
            var value = new proto.mmenu.hrm.serving.EmployeePayroll();
            reader.readMessage(value, proto.mmenu.hrm.serving.EmployeePayroll.deserializeBinaryFromReader);
            msg.addEmployeePayrolls(value);
            break;
          case 3:
            var value = new serving_models_common_pb.PaginationResponse();
            reader.readMessage(value, serving_models_common_pb.PaginationResponse.deserializeBinaryFromReader);
            msg.setPagination(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.GetCompanyPayrollResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getResponse();
      if (f != null) {
        writer.writeMessage(
          1,
          f,
          serving_models_common_pb.Response.serializeBinaryToWriter
        );
      }
      f = message.getEmployeePayrollsList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          2,
          f,
          proto.mmenu.hrm.serving.EmployeePayroll.serializeBinaryToWriter
        );
      }
      f = message.getPagination();
      if (f != null) {
        writer.writeMessage(
          3,
          f,
          serving_models_common_pb.PaginationResponse.serializeBinaryToWriter
        );
      }
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.getResponse = function() {
      return (
        /** @type{?proto.mmenu.hrm.serving.Response} */
        jspb.Message.getWrapperField(this, serving_models_common_pb.Response, 1)
      );
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.setResponse = function(value) {
      return jspb.Message.setWrapperField(this, 1, value);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.clearResponse = function() {
      return this.setResponse(void 0);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.hasResponse = function() {
      return jspb.Message.getField(this, 1) != null;
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.getEmployeePayrollsList = function() {
      return (
        /** @type{!Array<!proto.mmenu.hrm.serving.EmployeePayroll>} */
        jspb.Message.getRepeatedWrapperField(this, proto.mmenu.hrm.serving.EmployeePayroll, 2)
      );
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.setEmployeePayrollsList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.addEmployeePayrolls = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mmenu.hrm.serving.EmployeePayroll, opt_index);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.clearEmployeePayrollsList = function() {
      return this.setEmployeePayrollsList([]);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.getPagination = function() {
      return (
        /** @type{?proto.mmenu.hrm.serving.PaginationResponse} */
        jspb.Message.getWrapperField(this, serving_models_common_pb.PaginationResponse, 3)
      );
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.setPagination = function(value) {
      return jspb.Message.setWrapperField(this, 3, value);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.clearPagination = function() {
      return this.setPagination(void 0);
    };
    proto.mmenu.hrm.serving.GetCompanyPayrollResponse.prototype.hasPagination = function() {
      return jspb.Message.getField(this, 3) != null;
    };
    goog.object.extend(exports, proto.mmenu.hrm.serving);
  }
});

export {
  require_payroll_pb
};
//# sourceMappingURL=chunk-UVW7XRCU.js.map
