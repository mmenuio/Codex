import {
  require_employee_pb
} from "./chunk-L6Y2ZZQ2.js";
import {
  require_common_pb,
  require_google_protobuf
} from "./chunk-3UWK2XUZ.js";
import {
  __commonJS
} from "./chunk-2GTGKKMZ.js";

// node_modules/grpc-web-client-gen/serving/models/employee_schedule_pb.js
var require_employee_schedule_pb = __commonJS({
  "node_modules/grpc-web-client-gen/serving/models/employee_schedule_pb.js"(exports) {
    var jspb = require_google_protobuf();
    var goog = jspb;
    var global = (function() {
      if (this) {
        return this;
      }
      if (typeof window !== "undefined") {
        return window;
      }
      if (typeof global !== "undefined") {
        return global;
      }
      if (typeof self !== "undefined") {
        return self;
      }
      return Function("return this")();
    }).call(null);
    var serving_models_common_pb = require_common_pb();
    goog.object.extend(proto, serving_models_common_pb);
    var serving_models_employee_pb = require_employee_pb();
    goog.object.extend(proto, serving_models_employee_pb);
    goog.exportSymbol("proto.mmenu.hrm.serving.CreateScheduleRequest", null, global);
    goog.exportSymbol("proto.mmenu.hrm.serving.DeleteScheduleRequest", null, global);
    goog.exportSymbol("proto.mmenu.hrm.serving.EmployeeSchedule", null, global);
    goog.exportSymbol("proto.mmenu.hrm.serving.EmployeeSchedule.Employee", null, global);
    goog.exportSymbol("proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift", null, global);
    goog.exportSymbol("proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest", null, global);
    goog.exportSymbol("proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse", null, global);
    goog.exportSymbol("proto.mmenu.hrm.serving.GetScheduleRequest", null, global);
    goog.exportSymbol("proto.mmenu.hrm.serving.GetScheduleResponse", null, global);
    goog.exportSymbol("proto.mmenu.hrm.serving.UpdateScheduleRequest", null, global);
    proto.mmenu.hrm.serving.EmployeeSchedule = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.mmenu.hrm.serving.EmployeeSchedule.repeatedFields_, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.EmployeeSchedule, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.EmployeeSchedule.displayName = "proto.mmenu.hrm.serving.EmployeeSchedule";
    }
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.EmployeeSchedule.Employee, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.EmployeeSchedule.Employee.displayName = "proto.mmenu.hrm.serving.EmployeeSchedule.Employee";
    }
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.displayName = "proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift";
    }
    proto.mmenu.hrm.serving.GetScheduleRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.GetScheduleRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.GetScheduleRequest.displayName = "proto.mmenu.hrm.serving.GetScheduleRequest";
    }
    proto.mmenu.hrm.serving.GetScheduleResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.GetScheduleResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.GetScheduleResponse.displayName = "proto.mmenu.hrm.serving.GetScheduleResponse";
    }
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.repeatedFields_, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.displayName = "proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest";
    }
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.repeatedFields_, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.displayName = "proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse";
    }
    proto.mmenu.hrm.serving.CreateScheduleRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.mmenu.hrm.serving.CreateScheduleRequest.repeatedFields_, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.CreateScheduleRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.CreateScheduleRequest.displayName = "proto.mmenu.hrm.serving.CreateScheduleRequest";
    }
    proto.mmenu.hrm.serving.UpdateScheduleRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, proto.mmenu.hrm.serving.UpdateScheduleRequest.repeatedFields_, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.UpdateScheduleRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.UpdateScheduleRequest.displayName = "proto.mmenu.hrm.serving.UpdateScheduleRequest";
    }
    proto.mmenu.hrm.serving.DeleteScheduleRequest = function(opt_data) {
      jspb.Message.initialize(this, opt_data, 0, -1, null, null);
    };
    goog.inherits(proto.mmenu.hrm.serving.DeleteScheduleRequest, jspb.Message);
    if (goog.DEBUG && !COMPILED) {
      proto.mmenu.hrm.serving.DeleteScheduleRequest.displayName = "proto.mmenu.hrm.serving.DeleteScheduleRequest";
    }
    proto.mmenu.hrm.serving.EmployeeSchedule.repeatedFields_ = [5];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.EmployeeSchedule.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.EmployeeSchedule.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.EmployeeSchedule.toObject = function(includeInstance, msg) {
        var f, obj = {
          id: jspb.Message.getFieldWithDefault(msg, 1, ""),
          employee: (f = msg.getEmployee()) && proto.mmenu.hrm.serving.EmployeeSchedule.Employee.toObject(includeInstance, f),
          companyId: jspb.Message.getFieldWithDefault(msg, 3, ""),
          scheduleDate: jspb.Message.getFieldWithDefault(msg, 4, ""),
          workShiftsList: jspb.Message.toObjectList(
            msg.getWorkShiftsList(),
            proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.toObject,
            includeInstance
          )
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.EmployeeSchedule.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.EmployeeSchedule();
      return proto.mmenu.hrm.serving.EmployeeSchedule.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setId(value);
            break;
          case 2:
            var value = new proto.mmenu.hrm.serving.EmployeeSchedule.Employee();
            reader.readMessage(value, proto.mmenu.hrm.serving.EmployeeSchedule.Employee.deserializeBinaryFromReader);
            msg.setEmployee(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setCompanyId(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setScheduleDate(value);
            break;
          case 5:
            var value = new proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift();
            reader.readMessage(value, proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.deserializeBinaryFromReader);
            msg.addWorkShifts(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.EmployeeSchedule.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = /** @type {string} */
      jspb.Message.getField(message, 1);
      if (f != null) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getEmployee();
      if (f != null) {
        writer.writeMessage(
          2,
          f,
          proto.mmenu.hrm.serving.EmployeeSchedule.Employee.serializeBinaryToWriter
        );
      }
      f = message.getCompanyId();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getScheduleDate();
      if (f.length > 0) {
        writer.writeString(
          4,
          f
        );
      }
      f = message.getWorkShiftsList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          5,
          f,
          proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.serializeBinaryToWriter
        );
      }
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.EmployeeSchedule.Employee.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.EmployeeSchedule.Employee.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.EmployeeSchedule.Employee.toObject = function(includeInstance, msg) {
        var f, obj = {
          id: jspb.Message.getFieldWithDefault(msg, 1, ""),
          fullName: jspb.Message.getFieldWithDefault(msg, 2, ""),
          profilePicture: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.EmployeeSchedule.Employee();
      return proto.mmenu.hrm.serving.EmployeeSchedule.Employee.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setId(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setFullName(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setProfilePicture(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.EmployeeSchedule.Employee.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getFullName();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = /** @type {string} */
      jspb.Message.getField(message, 3);
      if (f != null) {
        writer.writeString(
          3,
          f
        );
      }
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee.prototype.getId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee.prototype.setId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee.prototype.getFullName = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee.prototype.setFullName = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee.prototype.getProfilePicture = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee.prototype.setProfilePicture = function(value) {
      return jspb.Message.setField(this, 3, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee.prototype.clearProfilePicture = function() {
      return jspb.Message.setField(this, 3, void 0);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.Employee.prototype.hasProfilePicture = function() {
      return jspb.Message.getField(this, 3) != null;
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.toObject = function(includeInstance, msg) {
        var f, obj = {
          id: jspb.Message.getFieldWithDefault(msg, 1, ""),
          name: jspb.Message.getFieldWithDefault(msg, 2, ""),
          startTime: jspb.Message.getFieldWithDefault(msg, 3, ""),
          endTime: jspb.Message.getFieldWithDefault(msg, 4, ""),
          displayColor: jspb.Message.getFieldWithDefault(msg, 5, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift();
      return proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setId(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setName(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setStartTime(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setEndTime(value);
            break;
          case 5:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setDisplayColor(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getName();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getStartTime();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getEndTime();
      if (f.length > 0) {
        writer.writeString(
          4,
          f
        );
      }
      f = message.getDisplayColor();
      if (f.length > 0) {
        writer.writeString(
          5,
          f
        );
      }
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.prototype.getId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.prototype.setId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.prototype.getName = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.prototype.setName = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.prototype.getStartTime = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.prototype.setStartTime = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.prototype.getEndTime = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 4, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.prototype.setEndTime = function(value) {
      return jspb.Message.setProto3StringField(this, 4, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.prototype.getDisplayColor = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 5, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift.prototype.setDisplayColor = function(value) {
      return jspb.Message.setProto3StringField(this, 5, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.getId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.setId = function(value) {
      return jspb.Message.setField(this, 1, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.clearId = function() {
      return jspb.Message.setField(this, 1, void 0);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.hasId = function() {
      return jspb.Message.getField(this, 1) != null;
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.getEmployee = function() {
      return (
        /** @type{?proto.mmenu.hrm.serving.EmployeeSchedule.Employee} */
        jspb.Message.getWrapperField(this, proto.mmenu.hrm.serving.EmployeeSchedule.Employee, 2)
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.setEmployee = function(value) {
      return jspb.Message.setWrapperField(this, 2, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.clearEmployee = function() {
      return this.setEmployee(void 0);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.hasEmployee = function() {
      return jspb.Message.getField(this, 2) != null;
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.getCompanyId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.setCompanyId = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.getScheduleDate = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 4, "")
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.setScheduleDate = function(value) {
      return jspb.Message.setProto3StringField(this, 4, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.getWorkShiftsList = function() {
      return (
        /** @type{!Array<!proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift>} */
        jspb.Message.getRepeatedWrapperField(this, proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift, 5)
      );
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.setWorkShiftsList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 5, value);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.addWorkShifts = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.mmenu.hrm.serving.EmployeeSchedule.WorkShift, opt_index);
    };
    proto.mmenu.hrm.serving.EmployeeSchedule.prototype.clearWorkShiftsList = function() {
      return this.setWorkShiftsList([]);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.GetScheduleRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.GetScheduleRequest.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.GetScheduleRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          id: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.GetScheduleRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.GetScheduleRequest();
      return proto.mmenu.hrm.serving.GetScheduleRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.GetScheduleRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setId(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.GetScheduleRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.GetScheduleRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.GetScheduleRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
    };
    proto.mmenu.hrm.serving.GetScheduleRequest.prototype.getId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.mmenu.hrm.serving.GetScheduleRequest.prototype.setId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.GetScheduleResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.GetScheduleResponse.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.GetScheduleResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          response: (f = msg.getResponse()) && serving_models_common_pb.Response.toObject(includeInstance, f),
          schedule: (f = msg.getSchedule()) && proto.mmenu.hrm.serving.EmployeeSchedule.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.GetScheduleResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.GetScheduleResponse();
      return proto.mmenu.hrm.serving.GetScheduleResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.GetScheduleResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = new serving_models_common_pb.Response();
            reader.readMessage(value, serving_models_common_pb.Response.deserializeBinaryFromReader);
            msg.setResponse(value);
            break;
          case 2:
            var value = new proto.mmenu.hrm.serving.EmployeeSchedule();
            reader.readMessage(value, proto.mmenu.hrm.serving.EmployeeSchedule.deserializeBinaryFromReader);
            msg.setSchedule(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.GetScheduleResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.GetScheduleResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.GetScheduleResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getResponse();
      if (f != null) {
        writer.writeMessage(
          1,
          f,
          serving_models_common_pb.Response.serializeBinaryToWriter
        );
      }
      f = message.getSchedule();
      if (f != null) {
        writer.writeMessage(
          2,
          f,
          proto.mmenu.hrm.serving.EmployeeSchedule.serializeBinaryToWriter
        );
      }
    };
    proto.mmenu.hrm.serving.GetScheduleResponse.prototype.getResponse = function() {
      return (
        /** @type{?proto.mmenu.hrm.serving.Response} */
        jspb.Message.getWrapperField(this, serving_models_common_pb.Response, 1)
      );
    };
    proto.mmenu.hrm.serving.GetScheduleResponse.prototype.setResponse = function(value) {
      return jspb.Message.setWrapperField(this, 1, value);
    };
    proto.mmenu.hrm.serving.GetScheduleResponse.prototype.clearResponse = function() {
      return this.setResponse(void 0);
    };
    proto.mmenu.hrm.serving.GetScheduleResponse.prototype.hasResponse = function() {
      return jspb.Message.getField(this, 1) != null;
    };
    proto.mmenu.hrm.serving.GetScheduleResponse.prototype.getSchedule = function() {
      return (
        /** @type{?proto.mmenu.hrm.serving.EmployeeSchedule} */
        jspb.Message.getWrapperField(this, proto.mmenu.hrm.serving.EmployeeSchedule, 2)
      );
    };
    proto.mmenu.hrm.serving.GetScheduleResponse.prototype.setSchedule = function(value) {
      return jspb.Message.setWrapperField(this, 2, value);
    };
    proto.mmenu.hrm.serving.GetScheduleResponse.prototype.clearSchedule = function() {
      return this.setSchedule(void 0);
    };
    proto.mmenu.hrm.serving.GetScheduleResponse.prototype.hasSchedule = function() {
      return jspb.Message.getField(this, 2) != null;
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.repeatedFields_ = [4];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
          dateRange: (f = msg.getDateRange()) && serving_models_common_pb.DateRange.toObject(includeInstance, f),
          searchText: jspb.Message.getFieldWithDefault(msg, 3, ""),
          shiftIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? void 0 : f,
          pagination: (f = msg.getPagination()) && serving_models_common_pb.PaginationParams.toObject(includeInstance, f)
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest();
      return proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setCompanyId(value);
            break;
          case 2:
            var value = new serving_models_common_pb.DateRange();
            reader.readMessage(value, serving_models_common_pb.DateRange.deserializeBinaryFromReader);
            msg.setDateRange(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setSearchText(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.addShiftIds(value);
            break;
          case 5:
            var value = new serving_models_common_pb.PaginationParams();
            reader.readMessage(value, serving_models_common_pb.PaginationParams.deserializeBinaryFromReader);
            msg.setPagination(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getCompanyId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getDateRange();
      if (f != null) {
        writer.writeMessage(
          2,
          f,
          serving_models_common_pb.DateRange.serializeBinaryToWriter
        );
      }
      f = message.getSearchText();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getShiftIdsList();
      if (f.length > 0) {
        writer.writeRepeatedString(
          4,
          f
        );
      }
      f = message.getPagination();
      if (f != null) {
        writer.writeMessage(
          5,
          f,
          serving_models_common_pb.PaginationParams.serializeBinaryToWriter
        );
      }
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.getCompanyId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.setCompanyId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.getDateRange = function() {
      return (
        /** @type{?proto.mmenu.hrm.serving.DateRange} */
        jspb.Message.getWrapperField(this, serving_models_common_pb.DateRange, 2)
      );
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.setDateRange = function(value) {
      return jspb.Message.setWrapperField(this, 2, value);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.clearDateRange = function() {
      return this.setDateRange(void 0);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.hasDateRange = function() {
      return jspb.Message.getField(this, 2) != null;
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.getSearchText = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.setSearchText = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.getShiftIdsList = function() {
      return (
        /** @type {!Array<string>} */
        jspb.Message.getRepeatedField(this, 4)
      );
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.setShiftIdsList = function(value) {
      return jspb.Message.setField(this, 4, value || []);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.addShiftIds = function(value, opt_index) {
      return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.clearShiftIdsList = function() {
      return this.setShiftIdsList([]);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.getPagination = function() {
      return (
        /** @type{?proto.mmenu.hrm.serving.PaginationParams} */
        jspb.Message.getWrapperField(this, serving_models_common_pb.PaginationParams, 5)
      );
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.setPagination = function(value) {
      return jspb.Message.setWrapperField(this, 5, value);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.clearPagination = function() {
      return this.setPagination(void 0);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesRequest.prototype.hasPagination = function() {
      return jspb.Message.getField(this, 5) != null;
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.repeatedFields_ = [2, 4];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
          response: (f = msg.getResponse()) && serving_models_common_pb.Response.toObject(includeInstance, f),
          schedulesList: jspb.Message.toObjectList(
            msg.getSchedulesList(),
            proto.mmenu.hrm.serving.EmployeeSchedule.toObject,
            includeInstance
          ),
          pagination: (f = msg.getPagination()) && serving_models_common_pb.PaginationResponse.toObject(includeInstance, f),
          employeesList: jspb.Message.toObjectList(
            msg.getEmployeesList(),
            serving_models_employee_pb.Employee.toObject,
            includeInstance
          )
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse();
      return proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = new serving_models_common_pb.Response();
            reader.readMessage(value, serving_models_common_pb.Response.deserializeBinaryFromReader);
            msg.setResponse(value);
            break;
          case 2:
            var value = new proto.mmenu.hrm.serving.EmployeeSchedule();
            reader.readMessage(value, proto.mmenu.hrm.serving.EmployeeSchedule.deserializeBinaryFromReader);
            msg.addSchedules(value);
            break;
          case 3:
            var value = new serving_models_common_pb.PaginationResponse();
            reader.readMessage(value, serving_models_common_pb.PaginationResponse.deserializeBinaryFromReader);
            msg.setPagination(value);
            break;
          case 4:
            var value = new serving_models_employee_pb.Employee();
            reader.readMessage(value, serving_models_employee_pb.Employee.deserializeBinaryFromReader);
            msg.addEmployees(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getResponse();
      if (f != null) {
        writer.writeMessage(
          1,
          f,
          serving_models_common_pb.Response.serializeBinaryToWriter
        );
      }
      f = message.getSchedulesList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          2,
          f,
          proto.mmenu.hrm.serving.EmployeeSchedule.serializeBinaryToWriter
        );
      }
      f = message.getPagination();
      if (f != null) {
        writer.writeMessage(
          3,
          f,
          serving_models_common_pb.PaginationResponse.serializeBinaryToWriter
        );
      }
      f = message.getEmployeesList();
      if (f.length > 0) {
        writer.writeRepeatedMessage(
          4,
          f,
          serving_models_employee_pb.Employee.serializeBinaryToWriter
        );
      }
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.getResponse = function() {
      return (
        /** @type{?proto.mmenu.hrm.serving.Response} */
        jspb.Message.getWrapperField(this, serving_models_common_pb.Response, 1)
      );
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.setResponse = function(value) {
      return jspb.Message.setWrapperField(this, 1, value);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.clearResponse = function() {
      return this.setResponse(void 0);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.hasResponse = function() {
      return jspb.Message.getField(this, 1) != null;
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.getSchedulesList = function() {
      return (
        /** @type{!Array<!proto.mmenu.hrm.serving.EmployeeSchedule>} */
        jspb.Message.getRepeatedWrapperField(this, proto.mmenu.hrm.serving.EmployeeSchedule, 2)
      );
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.setSchedulesList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 2, value);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.addSchedules = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mmenu.hrm.serving.EmployeeSchedule, opt_index);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.clearSchedulesList = function() {
      return this.setSchedulesList([]);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.getPagination = function() {
      return (
        /** @type{?proto.mmenu.hrm.serving.PaginationResponse} */
        jspb.Message.getWrapperField(this, serving_models_common_pb.PaginationResponse, 3)
      );
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.setPagination = function(value) {
      return jspb.Message.setWrapperField(this, 3, value);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.clearPagination = function() {
      return this.setPagination(void 0);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.hasPagination = function() {
      return jspb.Message.getField(this, 3) != null;
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.getEmployeesList = function() {
      return (
        /** @type{!Array<!proto.mmenu.hrm.serving.Employee>} */
        jspb.Message.getRepeatedWrapperField(this, serving_models_employee_pb.Employee, 4)
      );
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.setEmployeesList = function(value) {
      return jspb.Message.setRepeatedWrapperField(this, 4, value);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.addEmployees = function(opt_value, opt_index) {
      return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.mmenu.hrm.serving.Employee, opt_index);
    };
    proto.mmenu.hrm.serving.GetEmployeeSchedulesResponse.prototype.clearEmployeesList = function() {
      return this.setEmployeesList([]);
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.repeatedFields_ = [4];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.CreateScheduleRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.CreateScheduleRequest.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.CreateScheduleRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          employeeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
          companyId: jspb.Message.getFieldWithDefault(msg, 2, ""),
          scheduleDate: jspb.Message.getFieldWithDefault(msg, 3, ""),
          workShiftIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? void 0 : f
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.CreateScheduleRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.CreateScheduleRequest();
      return proto.mmenu.hrm.serving.CreateScheduleRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setEmployeeId(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setCompanyId(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setScheduleDate(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.addWorkShiftIds(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.CreateScheduleRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getEmployeeId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getCompanyId();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getScheduleDate();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getWorkShiftIdsList();
      if (f.length > 0) {
        writer.writeRepeatedString(
          4,
          f
        );
      }
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.prototype.getEmployeeId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.prototype.setEmployeeId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.prototype.getCompanyId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.prototype.setCompanyId = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.prototype.getScheduleDate = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.prototype.setScheduleDate = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.prototype.getWorkShiftIdsList = function() {
      return (
        /** @type {!Array<string>} */
        jspb.Message.getRepeatedField(this, 4)
      );
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.prototype.setWorkShiftIdsList = function(value) {
      return jspb.Message.setField(this, 4, value || []);
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.prototype.addWorkShiftIds = function(value, opt_index) {
      return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
    };
    proto.mmenu.hrm.serving.CreateScheduleRequest.prototype.clearWorkShiftIdsList = function() {
      return this.setWorkShiftIdsList([]);
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.repeatedFields_ = [5];
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.UpdateScheduleRequest.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.UpdateScheduleRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          id: jspb.Message.getFieldWithDefault(msg, 1, ""),
          employeeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
          companyId: jspb.Message.getFieldWithDefault(msg, 3, ""),
          scheduleDate: jspb.Message.getFieldWithDefault(msg, 4, ""),
          workShiftIdsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? void 0 : f
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.UpdateScheduleRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.UpdateScheduleRequest();
      return proto.mmenu.hrm.serving.UpdateScheduleRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setId(value);
            break;
          case 2:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setEmployeeId(value);
            break;
          case 3:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setCompanyId(value);
            break;
          case 4:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setScheduleDate(value);
            break;
          case 5:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.addWorkShiftIds(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.UpdateScheduleRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
      f = message.getEmployeeId();
      if (f.length > 0) {
        writer.writeString(
          2,
          f
        );
      }
      f = message.getCompanyId();
      if (f.length > 0) {
        writer.writeString(
          3,
          f
        );
      }
      f = message.getScheduleDate();
      if (f.length > 0) {
        writer.writeString(
          4,
          f
        );
      }
      f = message.getWorkShiftIdsList();
      if (f.length > 0) {
        writer.writeRepeatedString(
          5,
          f
        );
      }
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.getId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.setId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.getEmployeeId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 2, "")
      );
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.setEmployeeId = function(value) {
      return jspb.Message.setProto3StringField(this, 2, value);
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.getCompanyId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 3, "")
      );
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.setCompanyId = function(value) {
      return jspb.Message.setProto3StringField(this, 3, value);
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.getScheduleDate = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 4, "")
      );
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.setScheduleDate = function(value) {
      return jspb.Message.setProto3StringField(this, 4, value);
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.getWorkShiftIdsList = function() {
      return (
        /** @type {!Array<string>} */
        jspb.Message.getRepeatedField(this, 5)
      );
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.setWorkShiftIdsList = function(value) {
      return jspb.Message.setField(this, 5, value || []);
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.addWorkShiftIds = function(value, opt_index) {
      return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
    };
    proto.mmenu.hrm.serving.UpdateScheduleRequest.prototype.clearWorkShiftIdsList = function() {
      return this.setWorkShiftIdsList([]);
    };
    if (jspb.Message.GENERATE_TO_OBJECT) {
      proto.mmenu.hrm.serving.DeleteScheduleRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.mmenu.hrm.serving.DeleteScheduleRequest.toObject(opt_includeInstance, this);
      };
      proto.mmenu.hrm.serving.DeleteScheduleRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
          id: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
          obj.$jspbMessageInstance = msg;
        }
        return obj;
      };
    }
    proto.mmenu.hrm.serving.DeleteScheduleRequest.deserializeBinary = function(bytes) {
      var reader = new jspb.BinaryReader(bytes);
      var msg = new proto.mmenu.hrm.serving.DeleteScheduleRequest();
      return proto.mmenu.hrm.serving.DeleteScheduleRequest.deserializeBinaryFromReader(msg, reader);
    };
    proto.mmenu.hrm.serving.DeleteScheduleRequest.deserializeBinaryFromReader = function(msg, reader) {
      while (reader.nextField()) {
        if (reader.isEndGroup()) {
          break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
          case 1:
            var value = (
              /** @type {string} */
              reader.readString()
            );
            msg.setId(value);
            break;
          default:
            reader.skipField();
            break;
        }
      }
      return msg;
    };
    proto.mmenu.hrm.serving.DeleteScheduleRequest.prototype.serializeBinary = function() {
      var writer = new jspb.BinaryWriter();
      proto.mmenu.hrm.serving.DeleteScheduleRequest.serializeBinaryToWriter(this, writer);
      return writer.getResultBuffer();
    };
    proto.mmenu.hrm.serving.DeleteScheduleRequest.serializeBinaryToWriter = function(message, writer) {
      var f = void 0;
      f = message.getId();
      if (f.length > 0) {
        writer.writeString(
          1,
          f
        );
      }
    };
    proto.mmenu.hrm.serving.DeleteScheduleRequest.prototype.getId = function() {
      return (
        /** @type {string} */
        jspb.Message.getFieldWithDefault(this, 1, "")
      );
    };
    proto.mmenu.hrm.serving.DeleteScheduleRequest.prototype.setId = function(value) {
      return jspb.Message.setProto3StringField(this, 1, value);
    };
    goog.object.extend(exports, proto.mmenu.hrm.serving);
  }
});

export {
  require_employee_schedule_pb
};
//# sourceMappingURL=chunk-FS6K7DZB.js.map
