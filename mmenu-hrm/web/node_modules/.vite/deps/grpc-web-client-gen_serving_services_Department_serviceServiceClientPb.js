import {
  require_grpc_web
} from "./chunk-VUKTO5OO.js";
import {
  require_department_pb
} from "./chunk-FIDJL5JN.js";
import "./chunk-RUVG32OF.js";
import {
  require_common_pb
} from "./chunk-3UWK2XUZ.js";
import {
  __publicField,
  __toESM
} from "./chunk-2GTGKKMZ.js";

// node_modules/grpc-web-client-gen/serving/services/Department_serviceServiceClientPb.ts
var grpcWeb = __toESM(require_grpc_web());
var serving_models_department_pb = __toESM(require_department_pb());
var serving_models_common_pb = __toESM(require_common_pb());
var DepartmentServiceClient = class {
  constructor(hostname, credentials, options) {
    __publicField(this, "client_");
    __publicField(this, "hostname_");
    __publicField(this, "credentials_");
    __publicField(this, "options_");
    __publicField(this, "methodDescriptorCreateDepartment", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.DepartmentService/CreateDepartment",
      grpcWeb.MethodType.UNARY,
      serving_models_department_pb.CreateDepartmentRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    __publicField(this, "methodDescriptorUpdateDepartment", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.DepartmentService/UpdateDepartment",
      grpcWeb.MethodType.UNARY,
      serving_models_department_pb.UpdateDepartmentRequest,
      serving_models_common_pb.Response,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_common_pb.Response.deserializeBinary
    ));
    __publicField(this, "methodDescriptorGetDepartment", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.DepartmentService/GetDepartment",
      grpcWeb.MethodType.UNARY,
      serving_models_department_pb.GetDepartmentRequest,
      serving_models_department_pb.GetDepartmentResponse,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_department_pb.GetDepartmentResponse.deserializeBinary
    ));
    __publicField(this, "methodDescriptorGetDepartments", new grpcWeb.MethodDescriptor(
      "/mmenu.hrm.serving.DepartmentService/GetDepartments",
      grpcWeb.MethodType.UNARY,
      serving_models_department_pb.GetDepartmentsRequest,
      serving_models_department_pb.GetDepartmentsResponse,
      (request) => {
        return request.serializeBinary();
      },
      serving_models_department_pb.GetDepartmentsResponse.deserializeBinary
    ));
    if (!options)
      options = {};
    if (!credentials)
      credentials = {};
    options["format"] = "text";
    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, "");
    this.credentials_ = credentials;
    this.options_ = options;
  }
  createDepartment(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.DepartmentService/CreateDepartment",
        request,
        metadata || {},
        this.methodDescriptorCreateDepartment,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.DepartmentService/CreateDepartment",
      request,
      metadata || {},
      this.methodDescriptorCreateDepartment
    );
  }
  updateDepartment(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.DepartmentService/UpdateDepartment",
        request,
        metadata || {},
        this.methodDescriptorUpdateDepartment,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.DepartmentService/UpdateDepartment",
      request,
      metadata || {},
      this.methodDescriptorUpdateDepartment
    );
  }
  getDepartment(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.DepartmentService/GetDepartment",
        request,
        metadata || {},
        this.methodDescriptorGetDepartment,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.DepartmentService/GetDepartment",
      request,
      metadata || {},
      this.methodDescriptorGetDepartment
    );
  }
  getDepartments(request, metadata, callback) {
    if (callback !== void 0) {
      return this.client_.rpcCall(
        this.hostname_ + "/mmenu.hrm.serving.DepartmentService/GetDepartments",
        request,
        metadata || {},
        this.methodDescriptorGetDepartments,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/mmenu.hrm.serving.DepartmentService/GetDepartments",
      request,
      metadata || {},
      this.methodDescriptorGetDepartments
    );
  }
};
export {
  DepartmentServiceClient
};
//# sourceMappingURL=grpc-web-client-gen_serving_services_Department_serviceServiceClientPb.js.map
