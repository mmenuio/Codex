import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import { CreateScheduleInput, CreateScheduleOutput } from "../models/models_0";
import {
  SchedulerClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../SchedulerClient";
export { __MetadataBearer, $Command };
export interface CreateScheduleCommandInput extends CreateScheduleInput {}
export interface CreateScheduleCommandOutput
  extends CreateScheduleOutput,
    __MetadataBearer {}
export declare class CreateScheduleCommand extends $Command<
  CreateScheduleCommandInput,
  CreateScheduleCommandOutput,
  SchedulerClientResolvedConfig
> {
  readonly input: CreateScheduleCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateScheduleCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: SchedulerClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<CreateScheduleCommandInput, CreateScheduleCommandOutput>;
  private serialize;
  private deserialize;
}
